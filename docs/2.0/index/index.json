{"includedArchiveIdentifiers":["com.opticalaberration.hummingbird"],"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/gettingstarted","title":"Getting Started with Hummingbird","type":"article"},{"children":[{"title":"Application Setup","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-1-template","title":"Create a Hummingbird application.","type":"project"},{"title":"API Setup","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-2-api","title":"Add your application API","type":"project"},{"title":"Testing your application","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-3-testing","title":"Testing your application","type":"project"},{"title":"Store Todos in a database","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-4-postgres","title":"Use PostgresNIO to store your Todos in a Postgres database","type":"project"}],"path":"\/tutorials\/todos","title":"Build a Todos application.","type":"overview"},{"title":"Hummingbird Server","type":"groupMarker"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/routerguide","title":"Router","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/requestdecoding","title":"Request Decoding","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/responseencoding","title":"Response Encoding","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/middlewareguide","title":"Middleware","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/errorhandling","title":"Error Handling","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/routerbuilderguide","title":"Result Builder Router","type":"article"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Server","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http2upgrade(tlsconfiguration:configuration:)","title":"static func http2Upgrade(tlsConfiguration: TLSConfiguration, configuration: HTTP2UpgradeChannel.Configuration) throws -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http2upgrade(tlschannelconfiguration:configuration:)","title":"static func http2Upgrade(tlsChannelConfiguration: TLSChannelConfiguration, configuration: HTTP2UpgradeChannel.Configuration) throws -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/plaintexthttp2(configuration:)","title":"static func plaintextHTTP2(configuration: HTTP2Channel.Configuration) -> HTTPServerBuilder","type":"method"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/value\/channel","title":"let channel: Channel","type":"property"}],"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/value","title":"HTTP2UpgradeChannel.Value","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/init(tlschannelconfiguration:configuration:responder:)","title":"init(tlsChannelConfiguration: TLSChannelConfiguration, configuration: Configuration, responder: HTTPChannelHandler.Responder) throws","type":"init"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/init(tlsconfiguration:additionalchannelhandlers:responder:)","title":"init(tlsConfiguration: TLSConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler], responder: HTTPChannelHandler.Responder) throws","type":"init"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/init(tlsconfiguration:configuration:responder:)","title":"init(tlsConfiguration: TLSConfiguration, configuration: Configuration, responder: HTTPChannelHandler.Responder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/configuration-swift.property","title":"let configuration: Configuration","type":"property"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/responder","title":"var responder: Responder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/handle(value:logger:)","title":"func handle(value: Value, logger: Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/setup(channel:logger:)","title":"func setup(channel: Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/configuration-swift.typealias","title":"HTTP2UpgradeChannel.Configuration","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((any Channel) async -> Void)?, eventLoopGroup: any EventLoopGroup, logger: Logger) -> any Service","type":"method"}],"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/serverchildchannel-implementations","title":"ServerChildChannel Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel","title":"HTTP2UpgradeChannel","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/value\/channel","title":"let channel: Channel","type":"property"}],"path":"\/documentation\/hummingbirdhttp2\/http2channel\/value","title":"HTTP2Channel.Value","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/init(responder:configuration:)","title":"init(responder: HTTPChannelHandler.Responder, configuration: Configuration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/configuration-swift.property","title":"let configuration: Configuration","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/handle(value:logger:)","title":"func handle(value: Value, logger: Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/setup(channel:logger:)","title":"func setup(channel: Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/configuration-swift.typealias","title":"HTTP2Channel.Configuration","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((any Channel) async -> Void)?, eventLoopGroup: any EventLoopGroup, logger: Logger) -> any Service","type":"method"}],"path":"\/documentation\/hummingbirdhttp2\/http2channel\/serverchildchannel-implementations","title":"ServerChildChannel Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdhttp2\/http2channel","title":"HTTP2Channel","type":"struct"},{"title":"Configuration","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channelconfiguration\/init(idletimeout:gracefulclosetimeout:maxagetimeout:streamconfiguration:)","title":"init(idleTimeout: Duration?, gracefulCloseTimeout: Duration?, maxAgeTimeout: Duration?, streamConfiguration: HTTP1Channel.Configuration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channelconfiguration\/gracefulclosetimeout","title":"var gracefulCloseTimeout: Duration?","type":"property"},{"path":"\/documentation\/hummingbirdhttp2\/http2channelconfiguration\/idletimeout","title":"var idleTimeout: Duration?","type":"property"},{"path":"\/documentation\/hummingbirdhttp2\/http2channelconfiguration\/maxagetimeout","title":"var maxAgeTimeout: Duration?","type":"property"},{"path":"\/documentation\/hummingbirdhttp2\/http2channelconfiguration\/streamconfiguration","title":"var streamConfiguration: HTTP1Channel.Configuration","type":"property"}],"path":"\/documentation\/hummingbirdhttp2\/http2channelconfiguration","title":"HTTP2ChannelConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/tlschannelconfiguration\/init(tlsconfiguration:customasyncverificationcallback:)","title":"init(tlsConfiguration: TLSConfiguration, customAsyncVerificationCallback: ([NIOSSLCertificate]) async throws -> NIOSSLVerificationResult)","type":"init"},{"path":"\/documentation\/hummingbirdhttp2\/tlschannelconfiguration\/init(tlsconfiguration:customverificationcallback:)","title":"init(tlsConfiguration: TLSConfiguration, customVerificationCallback: CustomVerificationCallback?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/tlschannelconfiguration\/customverificationcallback-swift.property","title":"var customVerificationCallback: CustomVerificationCallback?","type":"property"},{"path":"\/documentation\/hummingbirdhttp2\/tlschannelconfiguration\/tlsconfiguration","title":"var tlsConfiguration: TLSConfiguration","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/tlschannelconfiguration\/customverificationcallback-swift.typealias","title":"TLSChannelConfiguration.CustomVerificationCallback","type":"typealias"}],"path":"\/documentation\/hummingbirdhttp2\/tlschannelconfiguration","title":"TLSChannelConfiguration","type":"struct"}],"icon":"logo.png","path":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2","type":"module"},{"children":[{"title":"Server","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/tls(_:tlsconfiguration:)","title":"static func tls(HTTPServerBuilder, tlsConfiguration: TLSConfiguration) throws -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/tls(_:configuration:)","title":"static func tls(HTTPServerBuilder, configuration: TLSChannelConfiguration) throws -> HTTPServerBuilder","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/init(_:configuration:)","title":"init(BaseChannel, configuration: TLSChannelConfiguration) throws","type":"init"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/init(_:tlsconfiguration:)","title":"init(BaseChannel, tlsConfiguration: TLSConfiguration) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/handle(value:logger:)","title":"func handle(value: BaseChannel.Value, logger: Logging.Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/setup(channel:logger:)","title":"func setup(channel: Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/value","title":"TLSChannel.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/responder","title":"var responder: HTTPChannelHandler.Responder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdtls\/tlschannel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((any Channel) async -> Void)?, eventLoopGroup: any EventLoopGroup, logger: Logger) -> any Service","type":"method"}],"path":"\/documentation\/hummingbirdtls\/tlschannel\/serverchildchannel-implementations","title":"ServerChildChannel Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdtls\/tlschannel","title":"TLSChannel","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannelconfiguration\/init(tlsconfiguration:customasyncverificationcallback:)","title":"init(tlsConfiguration: TLSConfiguration, customAsyncVerificationCallback: ([NIOSSLCertificate]) async throws -> NIOSSLVerificationResult)","type":"init"},{"path":"\/documentation\/hummingbirdtls\/tlschannelconfiguration\/init(tlsconfiguration:customverificationcallback:)","title":"init(tlsConfiguration: TLSConfiguration, customVerificationCallback: CustomVerificationCallback?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannelconfiguration\/customverificationcallback-swift.property","title":"let customVerificationCallback: CustomVerificationCallback?","type":"property"},{"path":"\/documentation\/hummingbirdtls\/tlschannelconfiguration\/tlsconfiguration","title":"let tlsConfiguration: TLSConfiguration","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannelconfiguration\/customverificationcallback-swift.typealias","title":"TLSChannelConfiguration.CustomVerificationCallback","type":"typealias"}],"path":"\/documentation\/hummingbirdtls\/tlschannelconfiguration","title":"TLSChannelConfiguration","type":"struct"}],"icon":"logo.png","path":"\/documentation\/hummingbirdtls","title":"HummingbirdTLS","type":"module"},{"children":[{"title":"Server","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(configuration:additionalchannelhandlers:shouldupgrade:)-3n8zf","title":"static func http1WebSocketUpgrade(configuration: WebSocketServerConfiguration, additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) async throws -> ShouldUpgradeResult<WebSocketDataHandler<HTTP1WebSocketUpgradeChannel.Context>>) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(configuration:additionalchannelhandlers:shouldupgrade:)-6siva","title":"static func http1WebSocketUpgrade(configuration: WebSocketServerConfiguration, additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) throws -> ShouldUpgradeResult<WebSocketDataHandler<HTTP1WebSocketUpgradeChannel.Context>>) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(websocketrouter:configuration:additionalchannelhandlers:)","title":"static func http1WebSocketUpgrade<WSResponderBuilder>(webSocketRouter: WSResponderBuilder, configuration: WebSocketServerConfiguration, additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler]) -> HTTPServerBuilder","type":"method"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/context\/logger","title":"let logger: Logger","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/context","title":"HTTP1WebSocketUpgradeChannel.Context","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/value\/channel","title":"let channel: Channel","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/value","title":"HTTP1WebSocketUpgradeChannel.Value","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/init(responder:configuration:additionalchannelhandlers:shouldupgrade:)-4c3od","title":"init(responder: HTTPChannelHandler.Responder, configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) throws -> ShouldUpgradeResult<WebSocketDataHandler<Context>>)","type":"init"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/init(responder:configuration:additionalchannelhandlers:shouldupgrade:)-6xv22","title":"init(responder: HTTPChannelHandler.Responder, configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) async throws -> ShouldUpgradeResult<WebSocketDataHandler<Context>>)","type":"init"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/init(responder:websocketresponder:configuration:additionalchannelhandlers:)","title":"init<WSResponder>(responder: HTTPChannelHandler.Responder, webSocketResponder: WSResponder, configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/responder","title":"let responder: HTTPChannelHandler.Responder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/handle(value:logger:)","title":"func handle(value: Value, logger: Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/setup(channel:logger:)","title":"func setup(channel: Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/websocketchannelhandler","title":"HTTP1WebSocketUpgradeChannel.WebSocketChannelHandler","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult\/failedupgrade(_:_:)","title":"case failedUpgrade(NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, Logger)","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult\/notupgraded(_:)","title":"case notUpgraded(NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>)","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult\/websocket(_:_:_:)","title":"case websocket(NIOAsyncChannel<WebSocketFrame, WebSocketFrame>, WebSocketChannelHandler, Logger)","type":"case"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult","title":"HTTP1WebSocketUpgradeChannel.UpgradeResult","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((any Channel) async -> Void)?, eventLoopGroup: any EventLoopGroup, logger: Logger) -> any Service","type":"method"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/serverchildchannel-implementations","title":"ServerChildChannel Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel","title":"HTTP1WebSocketUpgradeChannel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/init(maxframesize:extensions:autoping:closetimeout:validateutf8:)","title":"init(maxFrameSize: Int, extensions: [WebSocketExtensionFactory], autoPing: AutoPingSetup, closeTimeout: Duration, validateUTF8: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/autoping","title":"var autoPing: AutoPingSetup","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/closetimeout","title":"var closeTimeout: Duration","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/extensions","title":"var extensions: [any WebSocketExtensionBuilder]","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/maxframesize","title":"var maxFrameSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/validateutf8","title":"var validateUTF8: Bool","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration","title":"WebSocketServerConfiguration","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/autopingsetup\/disabled","title":"static var disabled: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/autopingsetup\/enabled(timeperiod:)","title":"static func enabled(timePeriod: Duration) -> AutoPingSetup","type":"method"}],"path":"\/documentation\/wscore\/autopingsetup","title":"AutoPingSetup","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/shouldupgraderesult\/dontupgrade","title":"case dontUpgrade","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/shouldupgraderesult\/upgrade(_:_:)","title":"case upgrade(HTTPFields, Value)","type":"case"}],"path":"\/documentation\/hummingbirdwebsocket\/shouldupgraderesult","title":"ShouldUpgradeResult","type":"enum"},{"title":"Handler","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdatahandler","title":"WebSocketDataHandler","type":"typealias"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next()","title":"func next() async throws -> WebSocketDataFrame?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/nextmessage(maxsize:)","title":"func nextMessage(maxSize: Int) async throws -> WebSocketMessage?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next()-870vs","title":"func next() async throws(Self.Failure) -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator","title":"WebSocketInboundStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/messages(maxsize:)","title":"func messages(maxSize: Int) -> WebSocketInboundMessageStream","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/element","title":"WebSocketInboundStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:into:)-65k3a","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:into:)-8qozo","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:)-4e39y","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:)-96tu0","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:into:)-8od8r","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:into:)-9nhxm","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compactmap(_:)-854a5","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compactmap(_:)-wpjn","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-27v24","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-8olkv","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-mvh6","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-r32q","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-2jm2t","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-2k9on","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-370z2","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-5fj8q","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-7fxlp","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/map(_:)-5900d","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/map(_:)-vj9h","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:_:)-2zgwr","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:_:)-7tnon","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(into:_:)-3r0ml","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(into:_:)-4y3zo","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundstream","title":"WebSocketInboundStream","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-68lgw","title":"func callAsFunction(String) async throws","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-70t1d","title":"func callAsFunction(ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter","title":"WebSocketOutboundWriter.MessageWriter","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/close(_:reason:)","title":"func close(WebSocketErrorCode, reason: String?) async throws","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/withbinarymessagewriter(_:)","title":"func withBinaryMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/withtextmessagewriter(_:)","title":"func withTextMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/write(_:)","title":"func write(OutboundFrame) async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/custom(_:)","title":"case custom(WebSocketFrame)","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/pong","title":"case pong","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/text(_:)","title":"case text(String)","type":"case"}],"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe","title":"WebSocketOutboundWriter.OutboundFrame","type":"enum"}],"path":"\/documentation\/wscore\/websocketoutboundwriter","title":"WebSocketOutboundWriter","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/data","title":"var data: ByteBuffer","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/fin","title":"var fin: Bool","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.property","title":"var opcode: Opcode","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/binary","title":"case binary","type":"case"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/continuation","title":"case continuation","type":"case"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum","title":"WebSocketDataFrame.Opcode","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketdataframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketdataframe","title":"WebSocketDataFrame","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketcontext\/logger","title":"var logger: Logger","type":"property"}],"path":"\/documentation\/wscore\/websocketcontext","title":"WebSocketContext","type":"protocol"},{"title":"Messages","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/wscore\/websocketmessage\/text(_:)","title":"case text(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/wscore\/websocketmessage\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketmessage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketmessage","title":"WebSocketMessage","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next()-7jav4","title":"func next() async throws(Self.Failure) -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator","title":"WebSocketInboundMessageStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/element","title":"WebSocketInboundMessageStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:into:)-5w84o","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:into:)-iqig","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:)-1gm8s","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:)-gxum","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-35r09","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-9vnag","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compactmap(_:)-59im6","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compactmap(_:)-80gth","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-18hde","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-23k3a","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-6wte2","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-8btow","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-402es","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-45405","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-82gc0","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-9ilgv","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-h4k","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/map(_:)-3fjnx","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/map(_:)-9y6oy","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:_:)-5ykar","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:_:)-8cv4s","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(into:_:)-7z7qi","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(into:_:)-fxhb","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream","title":"WebSocketInboundMessageStream","type":"struct"},{"title":"Router","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext\/websocket","title":"var webSocket: WebSocketHandlerReference<Self>","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","title":"WebSocketRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/init(source:)","title":"init(source: Source)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/corecontext","title":"var coreContext: CoreRequestContextStorage","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/websocket","title":"let webSocket: WebSocketHandlerReference<`Self`>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/requestdecoder","title":"var requestDecoder: JSONDecoder","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/responseencoder","title":"var responseEncoder: JSONEncoder","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/requestcontext-implementations","title":"RequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","title":"BasicWebSocketRequestContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketroutercontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketroutercontext\/request","title":"let request: Request","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketroutercontext\/requestcontext","title":"let requestContext: Context","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketroutercontext","title":"WebSocketRouterContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websockethandlerreference\/init()","title":"init()","type":"init"}],"path":"\/documentation\/hummingbirdwebsocket\/websockethandlerreference","title":"WebSocketHandlerReference","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware\/init(shouldupgrade:onupgrade:)","title":"init(shouldUpgrade: (Request, Context) async throws -> RouterShouldUpgrade, onUpgrade: WebSocketDataHandler<WebSocketRouterContext<Context>>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware","title":"WebSocketUpgradeMiddleware","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/routershouldupgrade\/dontupgrade","title":"case dontUpgrade","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/routershouldupgrade\/upgrade(_:)","title":"case upgrade(HTTPFields)","type":"case"}],"path":"\/documentation\/hummingbirdwebsocket\/routershouldupgrade","title":"RouterShouldUpgrade","type":"enum"},{"title":"Extensions","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextension\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/wscore\/websocketextension\/reservedbits","title":"var reservedBits: WebSocketFrame.ReservedBits","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextension\/processframetosend(_:context:)","title":"func processFrameToSend(WebSocketFrame, context: WebSocketExtensionContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/wscore\/websocketextension\/processreceivedframe(_:context:)","title":"func processReceivedFrame(WebSocketFrame, context: WebSocketExtensionContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/wscore\/websocketextension\/shutdown()","title":"func shutdown() async","type":"method"}],"path":"\/documentation\/wscore\/websocketextension","title":"WebSocketExtension","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/clientextension(from:)","title":"func clientExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/clientrequestheader()","title":"func clientRequestHeader() -> String","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverextension(from:)","title":"func serverExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverreponseheader(to:)","title":"func serverReponseHeader(to: WebSocketExtensionHTTPParameters) -> String?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverresponseheader(to:)","title":"func serverResponseHeader(to: [WebSocketExtensionHTTPParameters]) -> String?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/name","title":"static var name: String","type":"property"}],"path":"\/documentation\/wscore\/websocketextensionbuilder","title":"WebSocketExtensionBuilder","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensioncontext\/logger","title":"let logger: Logger","type":"property"}],"path":"\/documentation\/wscore\/websocketextensioncontext","title":"WebSocketExtensionContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameters","title":"let parameters: [String : Parameter]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parseheaders(_:)","title":"static func parseHeaders(HTTPFields) -> [WebSocketExtensionHTTPParameters]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/null","title":"case null","type":"case"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/value(_:)","title":"case value(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/integer","title":"var integer: Int?","type":"property"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/optional","title":"var optional: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter","title":"WebSocketExtensionHTTPParameters.Parameter","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters","title":"WebSocketExtensionHTTPParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/init(_:)","title":"init(() -> any WebSocketExtensionBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/build","title":"let build: () -> any WebSocketExtensionBuilder","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/nonnegotiatedextension(_:)","title":"static func nonNegotiatedExtension(() -> some WebSocketExtension) -> WebSocketExtensionFactory","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(clientMaxWindow: Int?, clientNoContextTakeover: Bool, serverMaxWindow: Int?, serverNoContextTakeover: Bool, compressionLevel: Int?, memoryLevel: Int?, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(maxWindow: Int?, noContextTakeover: Bool, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"}],"path":"\/documentation\/wscore\/websocketextensionfactory","title":"WebSocketExtensionFactory","type":"struct"}],"icon":"logo.png","path":"\/documentation\/hummingbirdwebsocket","title":"HummingbirdWebSocket","type":"module"}],"icon":"logo.png","path":"\/documentation\/hummingbird\/serverprotocol","title":"Server protocol","type":"symbol"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/servicelifecycle","title":"Service Lifecycle","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/testing","title":"Testing","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/migratingtov2","title":"Migrating to Hummingbird v2","type":"article"},{"title":"Authentication","type":"groupMarker"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/authenticatormiddlewareguide","title":"Authenticator Middleware","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/sessions","title":"Sessions","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/onetimepasswords","title":"One Time Passwords","type":"article"},{"title":"WebSockets","type":"groupMarker"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/websocketserverupgrade","title":"WebSocket Server Upgrade","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/websocketclientguide","title":"WebSocket Client","type":"article"},{"title":"Database Integration","type":"groupMarker"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/migrationsguide","title":"Postgres Migrations","type":"article"},{"children":[{"title":"Build a Galaxy Backend","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/fluent-1-galaxy","title":"Create a Hummingbird + Fluent application.","type":"project"}],"path":"\/tutorials\/fluent","title":"Store Data with Fluent","type":"overview"},{"children":[{"title":"Build a Social Media Platform for Kittens","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/mongokitten-1-setup","title":"Create a Hummingbird + MongoKitten application.","type":"project"}],"path":"\/tutorials\/mongokitten","title":"Store Data with MongoKitten","type":"overview"},{"title":"Offloading work","type":"groupMarker"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/jobsguide","title":"Jobs","type":"article"},{"title":"Mustache","type":"groupMarker"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/mustachesyntax","title":"Mustache Syntax","type":"article"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/mustachefeatures","title":"Mustache Features","type":"article"},{"title":"Examples","type":"groupMarker"},{"children":[{"title":"Examples","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/todosauthexample","title":"Todos with Authentication Example","type":"article"},{"path":"\/documentation\/hummingbird\/otpauthenticationexample","title":"OTP Authentication Example","type":"article"}],"path":"\/documentation\/hummingbird\/examplesguide","title":"Examples","type":"symbol"},{"title":"Reference Documentation","type":"groupMarker"},{"children":[{"title":"Application","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/application\/init(responder:server:configuration:services:onserverrunning:eventloopgroupprovider:logger:)","title":"init(responder: Responder, server: HTTPServerBuilder, configuration: ApplicationConfiguration, services: [any Service], onServerRunning: (any Channel) async -> Void, eventLoopGroupProvider: EventLoopGroupProvider, logger: Logger?)","type":"init"},{"path":"\/documentation\/hummingbird\/application\/init(router:server:configuration:services:onserverrunning:eventloopgroupprovider:logger:)","title":"init<ResponderBuilder>(router: ResponderBuilder, server: HTTPServerBuilder, configuration: ApplicationConfiguration, services: [any Service], onServerRunning: (any Channel) async -> Void, eventLoopGroupProvider: EventLoopGroupProvider, logger: Logger?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/application\/configuration","title":"var configuration: ApplicationConfiguration","type":"property"},{"path":"\/documentation\/hummingbird\/application\/eventloopgroup","title":"let eventLoopGroup: any EventLoopGroup","type":"property"},{"path":"\/documentation\/hummingbird\/application\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbird\/application\/processesrunbeforeserverstart","title":"var processesRunBeforeServerStart: [() async throws -> Void]","type":"property"},{"path":"\/documentation\/hummingbird\/application\/responder","title":"let responder: Responder","type":"property"},{"path":"\/documentation\/hummingbird\/application\/server","title":"let server: HTTPServerBuilder","type":"property"},{"path":"\/documentation\/hummingbird\/application\/services","title":"var services: [any Service]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/application\/addservices(_:)","title":"func addServices(any Service...)","type":"method"},{"path":"\/documentation\/hummingbird\/application\/beforeserverstarts(perform:)","title":"func beforeServerStarts(perform: () async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbird\/application\/buildresponder()","title":"func buildResponder() async throws -> Responder","type":"method"},{"path":"\/documentation\/hummingbird\/application\/onserverrunning(_:)","title":"func onServerRunning(any Channel) async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/application\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/application\/runservice(gracefulshutdownsignals:)","title":"func runService(gracefulShutdownSignals: [UnixSignal]) async throws","type":"method"}],"path":"\/documentation\/hummingbird\/application\/applicationprotocol-implementations","title":"ApplicationProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/application\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/application\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/application","title":"Application","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.associatedtype","title":"Responder","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/configuration-3a0f8","title":"var configuration: ApplicationConfiguration","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/configuration","title":"var configuration: ApplicationConfiguration","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup-4nmtn","title":"var eventLoopGroup: any EventLoopGroup","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup","title":"var eventLoopGroup: any EventLoopGroup","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/logger-7978o","title":"var logger: Logger","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/logger","title":"var logger: Logger","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart-8eefe","title":"var processesRunBeforeServerStart: [() async throws -> Void]","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart","title":"var processesRunBeforeServerStart: [() async throws -> Void]","type":"property"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.property","title":"var responder: Responder","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/server-oml4","title":"var server: HTTPServerBuilder","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/server","title":"var server: HTTPServerBuilder","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/services-1v35v","title":"var services: [any Service]","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/services","title":"var services: [any Service]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)-58g9y","title":"func onServerRunning(any Channel) async","type":"method"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)","title":"func onServerRunning(any Channel) async","type":"method"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/runservice(gracefulshutdownsignals:)","title":"func runService(gracefulShutdownSignals: [UnixSignal]) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","title":"func test<Value>(TestingSetup, (any TestClientProtocol) async throws -> Value) async throws -> Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/context","title":"ApplicationProtocol.Context","type":"typealias"}],"path":"\/documentation\/hummingbird\/applicationprotocol","title":"ApplicationProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/init(address:servername:backlog:reuseaddress:availableconnectionsdelegate:)","title":"init(address: BindAddress, serverName: String?, backlog: Int, reuseAddress: Bool, availableConnectionsDelegate: (any AvailableConnectionsDelegate)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/address","title":"var address: BindAddress","type":"property"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/availableconnectionsdelegate","title":"var availableConnectionsDelegate: (any AvailableConnectionsDelegate)?","type":"property"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/backlog","title":"var backlog: Int","type":"property"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/reuseaddress","title":"var reuseAddress: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/servername","title":"var serverName: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/with(address:servername:backlog:reuseaddress:)","title":"func with(address: BindAddress?, serverName: String?, backlog: Int?, reuseAddress: Bool?) -> ApplicationConfiguration","type":"method"}],"path":"\/documentation\/hummingbird\/applicationconfiguration","title":"ApplicationConfiguration","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/eventloopgroupprovider\/shared(_:)","title":"case shared(any EventLoopGroup)","type":"case"},{"path":"\/documentation\/hummingbird\/eventloopgroupprovider\/singleton","title":"case singleton","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/eventloopgroupprovider\/eventloopgroup","title":"var eventLoopGroup: any EventLoopGroup","type":"property"}],"path":"\/documentation\/hummingbird\/eventloopgroupprovider","title":"EventLoopGroupProvider","type":"enum"},{"title":"Router","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/routedescription\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbird\/router\/routedescription\/method","title":"let method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/hummingbird\/router\/routedescription\/path","title":"let path: RouterPath","type":"property"}],"path":"\/documentation\/hummingbird\/router\/routedescription","title":"Router.RouteDescription","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/init(context:options:)","title":"init(context: Context.Type, options: RouterOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/middlewares","title":"let middlewares: MiddlewareGroup<Context>","type":"property"},{"path":"\/documentation\/hummingbird\/router\/routes","title":"var routes: [RouteDescription]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/add(middleware:)","title":"func add(middleware: any MiddlewareProtocol<Request, Response, Context>) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/buildresponder()","title":"func buildResponder() -> RouterResponder<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:responder:)","title":"func on<Responder>(RouterPath, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/validate()","title":"func validate() throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/addmiddleware(buildmiddlewarestack:)","title":"func addMiddleware(buildMiddlewareStack: () -> some MiddlewareProtocol<Request, Response, Context>) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: RouterPath) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/delete(_:use:)","title":"func delete(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/get(_:use:)","title":"func get(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/group(_:)","title":"func group(RouterPath) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/group(_:context:)-5tup3","title":"func group<TargetContext>(RouterPath, context: TargetContext.Type) -> RouterGroup<TargetContext>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/group(_:context:)-6jt25","title":"func group<TargetContext>(RouterPath, context: TargetContext.Type) -> RouterGroup<TargetContext>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/head(_:use:)","title":"func head(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:use:)","title":"func on(RouterPath, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/patch(_:use:)","title":"func patch(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/post(_:use:)","title":"func post(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/put(_:use:)","title":"func put(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/router\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/router","title":"Router","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routergroup\/add(middleware:)","title":"func add(middleware: any MiddlewareProtocol<Request, Response, Context>) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/on(_:method:responder:)","title":"func on<Responder>(RouterPath, method: HTTPRequest.Method, responder: Responder) -> RouterGroup<Context>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routergroup\/addmiddleware(buildmiddlewarestack:)","title":"func addMiddleware(buildMiddlewareStack: () -> some MiddlewareProtocol<Request, Response, Context>) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: RouterPath) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/delete(_:use:)","title":"func delete(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/get(_:use:)","title":"func get(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/group(_:)","title":"func group(RouterPath) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/group(_:context:)-1oc61","title":"func group<TargetContext>(RouterPath, context: TargetContext.Type) -> RouterGroup<TargetContext>","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/group(_:context:)-85wfc","title":"func group<TargetContext>(RouterPath, context: TargetContext.Type) -> RouterGroup<TargetContext>","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/head(_:use:)","title":"func head(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/on(_:method:use:)","title":"func on(RouterPath, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/patch(_:use:)","title":"func patch(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/post(_:use:)","title":"func post(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/put(_:use:)","title":"func put(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routergroup","title":"RouterGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routecollection\/init(context:)","title":"init(context: Context.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routecollection\/add(middleware:)","title":"func add(middleware: any MiddlewareProtocol<Request, Response, Context>) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/on(_:method:responder:)","title":"func on<Responder>(RouterPath, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routecollection\/addmiddleware(buildmiddlewarestack:)","title":"func addMiddleware(buildMiddlewareStack: () -> some MiddlewareProtocol<Request, Response, Context>) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: RouterPath) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/delete(_:use:)","title":"func delete(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/get(_:use:)","title":"func get(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/group(_:)","title":"func group(RouterPath) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/group(_:context:)-8xh7e","title":"func group<TargetContext>(RouterPath, context: TargetContext.Type) -> RouterGroup<TargetContext>","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/group(_:context:)-ya3h","title":"func group<TargetContext>(RouterPath, context: TargetContext.Type) -> RouterGroup<TargetContext>","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/head(_:use:)","title":"func head(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/on(_:method:use:)","title":"func on(RouterPath, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/patch(_:use:)","title":"func patch(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/post(_:use:)","title":"func post(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/put(_:use:)","title":"func put(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routecollection\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routecollection","title":"RouteCollection","type":"class"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routermethods\/context","title":"Context","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routermethods\/add(middleware:)","title":"func add(middleware: any MiddlewareProtocol<Request, Response, Context>) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/addmiddleware(buildmiddlewarestack:)","title":"func addMiddleware(buildMiddlewareStack: () -> some MiddlewareProtocol<Request, Response, Context>) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: RouterPath) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/delete(_:use:)","title":"func delete(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/get(_:use:)","title":"func get(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/group(_:)","title":"func group(RouterPath) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/group(_:context:)-2o2ov","title":"func group<TargetContext>(RouterPath, context: TargetContext.Type) -> RouterGroup<TargetContext>","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/group(_:context:)-w6fz","title":"func group<TargetContext>(RouterPath, context: TargetContext.Type) -> RouterGroup<TargetContext>","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/head(_:use:)","title":"func head(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/on(_:method:responder:)","title":"func on<Responder>(RouterPath, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/on(_:method:use:)","title":"func on(RouterPath, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/patch(_:use:)","title":"func patch(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/post(_:use:)","title":"func post(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/put(_:use:)","title":"func put(RouterPath, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/ws(_:shouldupgrade:onupgrade:)","title":"func ws(RouterPath, shouldUpgrade: (Request, Context) async throws -> RouterShouldUpgrade, onUpgrade: WebSocketDataHandler<WebSocketRouterContext<Context>>) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routermethods","title":"RouterMethods","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/autogenerateheadendpoints","title":"static var autoGenerateHeadEndpoints: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/routeroptions\/caseinsensitive","title":"static var caseInsensitive: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/routeroptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/hummingbird\/routeroptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/init(_:)-5uqgq","title":"init<Source>(Source) async rethrows","type":"init"},{"path":"\/documentation\/hummingbird\/routeroptions\/init(_:)-6njx4","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/hummingbird\/routeroptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routeroptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routeroptions","title":"RouterOptions","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httpresponder\/context","title":"Context","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httpresponder\/respond(to:context:)","title":"func respond(to: Request, context: Context) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/httpresponder","title":"HTTPResponder","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httpresponderbuilder\/responder","title":"Responder","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httpresponderbuilder\/buildresponder()","title":"func buildResponder() -> Responder","type":"method"}],"path":"\/documentation\/hummingbird\/httpresponderbuilder","title":"HTTPResponderBuilder","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/callbackresponder\/init(callback:)","title":"init(callback: (Request, Context) async throws -> Response)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/callbackresponder\/respond(to:context:)","title":"func respond(to: Request, context: Context) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/callbackresponder","title":"CallbackResponder","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerresponder\/respond(to:context:)","title":"func respond(to: Request, context: Context) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/routerresponder","title":"RouterResponder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/endpointpath\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/endpointpath\/value","title":"var value: String?","type":"property"}],"path":"\/documentation\/hummingbird\/endpointpath","title":"EndpointPath","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/==(_:_:)","title":"static func == (Element, some StringProtocol) -> Bool","type":"op"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/~=(_:_:)","title":"static func ~= (Element, some StringProtocol) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/lowercased()","title":"func lowercased() -> RouterPath.Element","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/null","title":"static var null: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/recursivewildcard","title":"static var recursiveWildcard: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/wildcard","title":"static var wildcard: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/capture(_:)","title":"static func capture(Substring) -> RouterPath.Element","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/path(_:)","title":"static func path(Substring) -> RouterPath.Element","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/prefixcapture(suffix:parameter:)","title":"static func prefixCapture(suffix: Substring, parameter: Substring) -> RouterPath.Element","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/prefixwildcard(_:)","title":"static func prefixWildcard(Substring) -> RouterPath.Element","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/suffixcapture(prefix:parameter:)","title":"static func suffixCapture(prefix: Substring, parameter: Substring) -> RouterPath.Element","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/suffixwildcard(_:)","title":"static func suffixWildcard(Substring) -> RouterPath.Element","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/routerpath\/element\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routerpath\/element","title":"RouterPath.Element","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbird\/routerpath\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/components","title":"let components: [Element]","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/description","title":"let description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/appendingpath(_:)","title":"func appendingPath(RouterPath) -> RouterPath","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/lowercased()","title":"func lowercased() -> RouterPath","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"deprecated":true,"path":"\/documentation\/hummingbird\/routerpath\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/indices(of:)","title":"func indices(of: Self.Element) -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/indices(where:)","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/map(_:)-3emb8","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/subscript(_:)","title":"subscript(Int) -> RouterPath.Element","type":"subscript"}],"path":"\/documentation\/hummingbird\/routerpath\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/routerpath\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbird\/routerpath\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/hummingbird\/routerpath\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbird\/routerpath\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/async","title":"var async: AsyncSyncSequence<Self>","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/flatmap(_:)-5m8ks","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"deprecated":true,"path":"\/documentation\/hummingbird\/routerpath\/flatmap(_:)-8xo8l","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/map(_:)-3gmzz","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/sorted(using:)-2pow","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/sorted(using:)-325qi","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/hummingbird\/routerpath\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routerpath","title":"RouterPath","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestid\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/requestid","title":"RequestID","type":"struct"},{"title":"Request\/Response","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/init(head:body:)","title":"init(head: HTTPRequest, body: RequestBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/body","title":"var body: RequestBody","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/cookies","title":"var cookies: Cookies","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/head","title":"let head: HTTPRequest","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/method","title":"var method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/uri","title":"let uri: URI","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/collectbody(upto:)","title":"func collectBody(upTo: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/decode(as:context:)","title":"func decode<Type>(as: Type.Type, context: some RequestContext) async throws -> Type","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/ifmatch(headers:etag:context:process:)","title":"func ifMatch(headers: HTTPFields, eTag: String, context: some RequestContext, process: () async throws -> some ResponseGenerator) async throws -> Response","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/ifmodifiedsince(headers:modificationdate:context:process:)","title":"func ifModifiedSince(headers: HTTPFields, modificationDate: Date, context: some RequestContext, process: () async throws -> some ResponseGenerator) async throws -> Response","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/ifnonematch(headers:etag:context:process:)","title":"func ifNoneMatch(headers: HTTPFields, eTag: String, context: some RequestContext, process: () async throws -> some ResponseGenerator) async throws -> Response","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/ifunmodifiedsince(headers:modificationdate:context:process:)","title":"func ifUnmodifiedSince(headers: HTTPFields, modificationDate: Date, context: some RequestContext, process: () async throws -> some ResponseGenerator) async throws -> Response","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/request\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/request","title":"Request","type":"struct"},{"path":"\/documentation\/hummingbird\/parameters","title":"Parameters","type":"typealias"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/any","title":"static var any: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/application","title":"static var application: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/audio","title":"static var audio: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/example","title":"static var example: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/font","title":"static var font: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/image","title":"static var image: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/message","title":"static var message: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/model","title":"static var model: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/multipart","title":"static var multipart: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/text","title":"static var text: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/video","title":"static var video: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/mediatype\/category\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/mediatype\/category","title":"MediaType.Category","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/aac","title":"static let aac: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/abw","title":"static let abw: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/arc","title":"static let arc: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/azw","title":"static let azw: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/bin","title":"static let bin: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/bmp","title":"static let bmp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/bz","title":"static let bz: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/bz2","title":"static let bz2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/csh","title":"static let csh: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/css","title":"static let css: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/csv","title":"static let csv: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/doc","title":"static let doc: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/docx","title":"static let docx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/eot","title":"static let eot: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/epub","title":"static let epub: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/gif","title":"static let gif: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/gz","title":"static let gz: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/htm","title":"static let htm: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/html","title":"static let html: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/ico","title":"static let ico: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/ics","title":"static let ics: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/jar","title":"static let jar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/jpeg","title":"static let jpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/jpg","title":"static let jpg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/js","title":"static let js: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/json","title":"static let json: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/jsonld","title":"static let jsonld: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/mid","title":"static let mid: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/midi","title":"static let midi: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/mjs","title":"static let mjs: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/mp3","title":"static let mp3: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/mp4","title":"static let mp4: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/mpeg","title":"static let mpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/mpkg","title":"static let mpkg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/odp","title":"static let odp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/ods","title":"static let ods: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/odt","title":"static let odt: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/oga","title":"static let oga: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/ogv","title":"static let ogv: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/ogx","title":"static let ogx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/opus","title":"static let opus: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/otf","title":"static let otf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/pdf","title":"static let pdf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/php","title":"static let php: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/png","title":"static let png: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/ppt","title":"static let ppt: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/pptx","title":"static let pptx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/rar","title":"static let rar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/rtf","title":"static let rtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/sevenz","title":"static let sevenZ: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/sh","title":"static let sh: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/svg","title":"static let svg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/swf","title":"static let swf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/tar","title":"static let tar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/threeg2","title":"static let threeG2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/threegp","title":"static let threeGP: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/tif","title":"static let tif: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/tiff","title":"static let tiff: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/ts","title":"static let ts: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/ttf","title":"static let ttf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/txt","title":"static let txt: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/vsd","title":"static let vsd: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/wasm","title":"static let wasm: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/wav","title":"static let wav: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/weba","title":"static let weba: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/webm","title":"static let webm: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/webmanifest","title":"static let webmanifest: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/webp","title":"static let webp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/woff","title":"static let woff: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/woff2","title":"static let woff2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/xhtml","title":"static let xhtml: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/xls","title":"static let xls: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/xlsx","title":"static let xlsx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/xml","title":"static let xml: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/zip","title":"static let zip: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbird\/mediatype\/fileextension\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/mediatype\/fileextension","title":"MediaType.FileExtension","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/~=(_:_:)","title":"static func ~= (`Self`, `Self`) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/init(from:)-146qp","title":"init?(from: String)","type":"init"},{"path":"\/documentation\/hummingbird\/mediatype\/init(type:subtype:parameter:)","title":"init(type: Category, subType: String, parameter: (String, String)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/parameter","title":"let parameter: (name: String, value: String)?","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/subtype","title":"let subType: String","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/type","title":"let type: Category","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/istype(_:)","title":"func isType(MediaType) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/mediatype\/withparameter(name:value:)","title":"func withParameter(name: String, value: String) -> MediaType","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/application","title":"static var application: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/application7z","title":"static var application7z: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationabiword","title":"static var applicationAbiWord: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationamzkindleebook","title":"static var applicationAmzKindleEBook: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationarc","title":"static var applicationArc: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationbinary","title":"static var applicationBinary: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationbzip","title":"static var applicationBzip: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationbzip2","title":"static var applicationBzip2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationcsh","title":"static var applicationCsh: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationdocx","title":"static var applicationDocx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationeot","title":"static var applicationEot: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationepub","title":"static var applicationEpub: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationgzip","title":"static var applicationGzip: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationjar","title":"static var applicationJar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationjson","title":"static var applicationJson: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationjsonld","title":"static var applicationJsonLD: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationmanifest","title":"static var applicationManifest: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationmpkg","title":"static var applicationMpkg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationmsword","title":"static var applicationMsword: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationodp","title":"static var applicationOdp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationods","title":"static var applicationOds: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationodt","title":"static var applicationOdt: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationogg","title":"static var applicationOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationpdf","title":"static var applicationPdf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationphp","title":"static var applicationPhp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationppt","title":"static var applicationPpt: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationpptx","title":"static var applicationPptx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationrar","title":"static var applicationRar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationrtf","title":"static var applicationRtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationsh","title":"static var applicationSh: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationswf","title":"static var applicationSwf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationtar","title":"static var applicationTar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationurlencoded","title":"static var applicationUrlEncoded: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationvsd","title":"static var applicationVsd: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationwasm","title":"static var applicationWasm: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationxhtml","title":"static var applicationXhtml: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationxls","title":"static var applicationXls: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationxlsx","title":"static var applicationXlsx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationxml","title":"static var applicationXml: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationzip","title":"static var applicationZip: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audio","title":"static var audio: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audio3g2","title":"static var audio3g2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audio3gp","title":"static var audio3gp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audioaac","title":"static var audioAac: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audiomidi","title":"static var audioMidi: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audiompeg","title":"static var audioMpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audioogg","title":"static var audioOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audioopus","title":"static var audioOpus: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audiowave","title":"static var audioWave: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audiowebm","title":"static var audioWebm: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/example","title":"static var example: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/font","title":"static var font: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fontotf","title":"static var fontOtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fontttf","title":"static var fontTtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fontwoff","title":"static var fontWoff: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fontwoff2","title":"static var fontWoff2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/image","title":"static var image: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagebmp","title":"static var imageBmp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagegif","title":"static var imageGif: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imageico","title":"static var imageIco: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagejpeg","title":"static var imageJpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagepng","title":"static var imagePng: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagesvg","title":"static var imageSvg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagetiff","title":"static var imageTiff: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagewebp","title":"static var imageWebp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/message","title":"static var message: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/model","title":"static var model: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/multipart","title":"static var multipart: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/multipartform","title":"static var multipartForm: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/text","title":"static var text: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/textcss","title":"static var textCss: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/textcsv","title":"static var textCsv: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/texthtml","title":"static var textHtml: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/texticalendar","title":"static var textICalendar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/textjavascript","title":"static var textJavascript: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/textplain","title":"static var textPlain: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/video","title":"static var video: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/video3g2","title":"static var video3g2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/video3gp","title":"static var video3gp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/videomp4","title":"static var videoMp4: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/videompeg","title":"static var videoMpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/videoogg","title":"static var videoOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/videots","title":"static var videoTs: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/videowebm","title":"static var videoWebm: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/getmediatype(forextension:)-1rjpv","title":"static func getMediaType(forExtension: FileExtension) -> MediaType?","type":"method"},{"path":"\/documentation\/hummingbird\/mediatype\/getmediatype(forextension:)-7ebrc","title":"static func getMediaType(forExtension: String) -> MediaType?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/init(from:)-8jriz","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/hummingbird\/mediatype\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/hummingbird\/mediatype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/mediatype","title":"MediaType","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue\/description","title":"var description: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue\/immutable","title":"static var immutable: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue\/mustrevalidate","title":"static var mustRevalidate: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue\/mustunderstand","title":"static var mustUnderstand: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue\/nocache","title":"static var noCache: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue\/nostore","title":"static var noStore: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue\/notransform","title":"static var noTransform: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue\/private","title":"static var `private`: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue\/public","title":"static var `public`: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue\/custom(_:)","title":"static func custom(String) -> CacheControl.CacheControlValue","type":"method"},{"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue\/maxage(_:)","title":"static func maxAge(Int) -> CacheControl.CacheControlValue","type":"method"}],"path":"\/documentation\/hummingbird\/cachecontrol\/cachecontrolvalue","title":"CacheControl.CacheControlValue","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cachecontrol\/init(_:)-97e8t","title":"init([(MediaType, [CacheControlValue])])","type":"init"},{"path":"\/documentation\/hummingbird\/cachecontrol\/init(_:)-9pqyj","title":"init([(MediaType, [Value])])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cachecontrol\/getcachecontrolheader(for:)","title":"func getCacheControlHeader(for: String) -> String?","type":"method"}],"path":"\/documentation\/hummingbird\/cachecontrol","title":"CacheControl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/init(status:headers:body:)","title":"init(status: HTTPResponse.Status, headers: HTTPFields, body: ResponseBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/body","title":"var body: ResponseBody","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/head","title":"var head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/createheadresponse()","title":"func createHeadResponse() -> Response","type":"method"},{"path":"\/documentation\/hummingbirdcore\/response\/setcookie(_:)","title":"func setCookie(Cookie)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirect(to:type:)","title":"static func redirect(to: String, type: RedirectType) -> Response","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/found","title":"case found","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/permanent","title":"case permanent","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/temporary","title":"case temporary","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/response\/redirecttype","title":"Response.RedirectType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/response\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/response(from:context:)","title":"func response(from: Request, context: some RequestContext) -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcore\/response\/responsegenerator-implementations","title":"ResponseGenerator Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/response","title":"Response","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/compressed(algorithm:configuration:windowsize:logger:)","title":"func compressed(algorithm: ZlibAlgorithm, configuration: ZlibConfiguration, windowSize: Int, logger: Logger) throws -> some ResponseBodyWriter","type":"method"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/finish(_:)","title":"func finish(HTTPFields?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/map(_:)","title":"func map((ByteBuffer) async throws -> ByteBuffer) -> some ResponseBodyWriter","type":"method"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/write(_:)","title":"func write(ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/write(contentsof:)","title":"func write(contentsOf: some Sequence<ByteBuffer>) async throws","type":"method"}],"path":"\/documentation\/hummingbirdcore\/responsebodywriter","title":"ResponseBodyWriter","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/editedresponse\/init(status:headers:response:)","title":"init(status: HTTPResponse.Status?, headers: HTTPFields, response: Generator)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/editedresponse\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/editedresponse\/responsegenerator","title":"var responseGenerator: Generator","type":"property"},{"path":"\/documentation\/hummingbird\/editedresponse\/status","title":"var status: HTTPResponse.Status?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/editedresponse\/response(from:context:)","title":"func response(from: Request, context: some RequestContext) throws -> Response","type":"method"},{"path":"\/documentation\/hummingbird\/editedresponse\/setcookie(_:)","title":"func setCookie(Cookie)","type":"method"}],"path":"\/documentation\/hummingbird\/editedresponse","title":"EditedResponse","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/properties-swift.struct\/subscript(_:)","title":"subscript(Substring) -> String?","type":"subscript"}],"path":"\/documentation\/hummingbird\/cookie\/properties-swift.struct","title":"Cookie.Properties","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/validationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/cookie\/validationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/cookie\/validationerror","title":"Cookie.ValidationError","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/init(name:value:expires:maxage:domain:path:secure:httponly:)","title":"init(name: String, value: String, expires: Date?, maxAge: Int?, domain: String?, path: String?, secure: Bool, httpOnly: Bool)","type":"init"},{"path":"\/documentation\/hummingbird\/cookie\/init(name:value:expires:maxage:domain:path:secure:httponly:samesite:)","title":"init(name: String, value: String, expires: Date?, maxAge: Int?, domain: String?, path: String?, secure: Bool, httpOnly: Bool, sameSite: SameSite)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/domain","title":"var domain: String?","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/expires","title":"var expires: Date?","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/httponly","title":"var httpOnly: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/maxage","title":"var maxAge: Int?","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/path","title":"var path: String?","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/properties-swift.property","title":"let properties: Properties","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.property","title":"var sameSite: SameSite?","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/secure","title":"var secure: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/value","title":"let value: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/validated(name:value:expires:maxage:domain:path:secure:httponly:samesite:)","title":"static func validated(name: String, value: String, expires: Date?, maxAge: Int?, domain: String?, path: String?, secure: Bool, httpOnly: Bool, sameSite: SameSite?) throws -> Cookie","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/lax","title":"case lax","type":"case"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/strict","title":"case strict","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum","title":"Cookie.SameSite","type":"enum"}],"path":"\/documentation\/hummingbird\/cookie","title":"Cookie","type":"struct"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookies\/subscript(_:)","title":"subscript(String) -> Cookie?","type":"subscript"}],"path":"\/documentation\/hummingbird\/cookies","title":"Cookies","type":"struct"},{"title":"Request context","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestcontext\/decoder","title":"Decoder","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/requestcontext\/encoder","title":"Encoder","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/requestcontext\/source","title":"Source","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestcontext\/corecontext","title":"var coreContext: CoreRequestContextStorage","type":"property"},{"path":"\/documentation\/hummingbird\/requestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/requestcontext\/id","title":"var id: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/requestcontext\/maxuploadsize-2t6ze","title":"var maxUploadSize: Int","type":"property"}],"title":"RequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/requestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/requestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/requestcontext\/requestdecoder-76em9","title":"var requestDecoder: Decoder","type":"property"}],"title":"RequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/requestcontext\/requestdecoder","title":"var requestDecoder: Decoder","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/requestcontext\/responseencoder-76pi1","title":"var responseEncoder: Encoder","type":"property"}],"title":"RequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/requestcontext\/responseencoder","title":"var responseEncoder: Encoder","type":"property"}],"path":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/requestcontextsource\/logger-2yadx","title":"var logger: Logger","type":"property"}],"title":"RequestContextSource Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/requestcontextsource\/logger","title":"var logger: Logger","type":"property"}],"path":"\/documentation\/hummingbird\/requestcontextsource","title":"RequestContextSource","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationrequestcontextsource\/init(channel:logger:)","title":"init(channel: any Channel, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationrequestcontextsource\/channel","title":"let channel: any Channel","type":"property"},{"path":"\/documentation\/hummingbird\/applicationrequestcontextsource\/logger","title":"let logger: Logger","type":"property"}],"path":"\/documentation\/hummingbird\/applicationrequestcontextsource","title":"ApplicationRequestContextSource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/init(source:)","title":"init(source: Source)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/corecontext","title":"var coreContext: CoreRequestContextStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/requestdecoder","title":"var requestDecoder: Decoder","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/responseencoder","title":"var responseEncoder: Encoder","type":"property"}],"path":"\/documentation\/hummingbird\/basicrequestcontext\/requestcontext-implementations","title":"RequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/basicrequestcontext","title":"BasicRequestContext","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/childrequestcontext\/parentcontext","title":"ParentContext","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/childrequestcontext\/init(context:)","title":"init(context: ParentContext) throws","type":"init"}],"path":"\/documentation\/hummingbird\/childrequestcontext","title":"ChildRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/corerequestcontextstorage\/init(source:)","title":"init(source: some RequestContextSource)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/corerequestcontextstorage\/endpointpath","title":"var endpointPath: EndpointPath","type":"property"},{"path":"\/documentation\/hummingbird\/corerequestcontextstorage\/parameters","title":"var parameters: Parameters","type":"property"}],"path":"\/documentation\/hummingbird\/corerequestcontextstorage","title":"CoreRequestContextStorage","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/remoteaddressrequestcontext\/remoteaddress","title":"var remoteAddress: SocketAddress?","type":"property"}],"path":"\/documentation\/hummingbird\/remoteaddressrequestcontext","title":"RemoteAddressRequestContext","type":"protocol"},{"title":"Encoding\/Decoding","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestdecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: Request, context: some RequestContext) async throws -> T","type":"method"}],"path":"\/documentation\/hummingbird\/requestdecoder","title":"RequestDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/responseencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: Request, context: some RequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/responseencoder","title":"ResponseEncoder","type":"protocol"},{"path":"\/documentation\/hummingbird\/responseencodable","title":"ResponseEncodable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/responsegenerator\/response(from:context:)-7t0i2","title":"func response(from: Request, context: some RequestContext) throws -> Response","type":"method"}],"title":"ResponseGenerator Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/responsegenerator\/response(from:context:)","title":"func response(from: Request, context: some RequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/responsegenerator","title":"ResponseGenerator","type":"protocol"},{"path":"\/documentation\/hummingbird\/responsecodable","title":"ResponseCodable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/init(datedecodingstrategy:userinfo:)","title":"init(dateDecodingStrategy: URLEncodedFormDecoder.DateDecodingStrategy, userInfo: [CodingUserInfoKey : any Sendable])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.property","title":"var dateDecodingStrategy: DateDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : any Sendable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: String) throws -> T","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/custom(_:)","title":"case custom((_ decoder: any Decoder) throws -> Date)","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum","title":"URLEncodedFormDecoder.DateDecodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: Request, context: some RequestContext) async throws -> T","type":"method"}],"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/requestdecoder-implementations","title":"RequestDecoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/urlencodedformdecoder","title":"URLEncodedFormDecoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/init(dateencodingstrategy:userinfo:additionalkeys:)","title":"init(dateEncodingStrategy: URLEncodedFormEncoder.DateEncodingStrategy, userInfo: [CodingUserInfoKey : any Sendable], additionalKeys: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.property","title":"var dateEncodingStrategy: DateEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : any Sendable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/encode(_:)","title":"func encode(some Encodable) throws -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/custom(_:)","title":"case custom((Date, any Encoder) throws -> Void)","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum","title":"URLEncodedFormEncoder.DateEncodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: Request, context: some RequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/urlencodedformencoder\/responseencoder-implementations","title":"ResponseEncoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/urlencodedformencoder","title":"URLEncodedFormEncoder","type":"struct"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httperror\/init(_:)","title":"init(HTTPResponse.Status)","type":"init"},{"path":"\/documentation\/hummingbird\/httperror\/init(_:headers:message:)","title":"init(HTTPResponse.Status, headers: HTTPFields, message: String?)","type":"init"},{"path":"\/documentation\/hummingbird\/httperror\/init(_:message:)","title":"init(HTTPResponse.Status, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httperror\/body","title":"var body: String?","type":"property"},{"path":"\/documentation\/hummingbird\/httperror\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/httperror\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httperror\/response(from:context:)","title":"func response(from: Request, context: some RequestContext) throws -> Response","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httperror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/httperror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/httperror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/httperror","title":"HTTPError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httpresponseerror\/status","title":"var status: HTTPResponse.Status","type":"property"}],"path":"\/documentation\/hummingbird\/httpresponseerror","title":"HTTPResponseError","type":"protocol"},{"title":"Middleware","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/middlewareprotocol\/context","title":"Context","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/middlewareprotocol\/input","title":"Input","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/middlewareprotocol\/output","title":"Output","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"title":"AuthenticatorMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/middlewareprotocol\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"}],"path":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildarray(_:)","title":"static func buildArray<M0>([M0]) -> _SpreadMiddleware<M0>","type":"method"},{"path":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildblock(_:)","title":"static func buildBlock<M0>(M0) -> M0","type":"method"},{"path":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildeither(first:)","title":"static func buildEither<M0>(first: M0) -> M0","type":"method"},{"path":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildeither(second:)","title":"static func buildEither<M0>(second: M0) -> M0","type":"method"},{"path":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildexpression(_:)-2kzb8","title":"static func buildExpression<M0>(M0) -> M0","type":"method"},{"path":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildexpression(_:)-9tlxh","title":"static func buildExpression<C0>(C0) -> C0.Body","type":"method"},{"path":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildoptional(_:)","title":"static func buildOptional<M0>(M0?) -> _OptionalMiddleware<M0>","type":"method"},{"path":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<M0, M1>(accumulated: M0, next: M1) -> _Middleware2<M0, M1>","type":"method"},{"path":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock<M0>(first: M0) -> M0","type":"method"}],"path":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","title":"MiddlewareFixedTypeBuilder","type":"enum"},{"path":"\/documentation\/hummingbird\/routermiddleware","title":"RouterMiddleware","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/middlewaregroup\/add(_:)","title":"func add(any MiddlewareProtocol<Request, Response, Context>) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/middlewaregroup\/constructresponder(finalresponder:)","title":"func constructResponder(finalResponder: any HTTPResponder<Context>) -> any HTTPResponder<Context>","type":"method"}],"path":"\/documentation\/hummingbird\/middlewaregroup","title":"MiddlewareGroup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","title":"init(allowOrigin: AllowOrigin, allowHeaders: [HTTPField.Name], allowMethods: [HTTPRequest.Method], allowCredentials: Bool, exposedHeaders: [String]?, maxAge: TimeAmount?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin\/all","title":"case all","type":"case"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin\/custom(_:)","title":"case custom(String)","type":"case"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin\/none","title":"case none","type":"case"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin\/originbased","title":"case originBased","type":"case"}],"path":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin","title":"CORSMiddleware.AllowOrigin","type":"enum"}],"path":"\/documentation\/hummingbird\/corsmiddleware","title":"CORSMiddleware","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/init(arrayliteral:)","title":"init(arrayLiteral: ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/arrayliteralelement","title":"LogRequestsMiddleware.HeaderFilter.ArrayLiteralElement","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/none","title":"static var none: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/all(except:)","title":"static func all(except: [HTTPField.Name]) -> LogRequestsMiddleware<Context>.HeaderFilter","type":"method"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/some(_:)","title":"static func some([HTTPField.Name]) -> LogRequestsMiddleware<Context>.HeaderFilter","type":"method"}],"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter","title":"LogRequestsMiddleware.HeaderFilter","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/init(_:includeheaders:redactheaders:)","title":"init(Logger.Level, includeHeaders: HeaderFilter, redactHeaders: [HTTPField.Name])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/logrequestsmiddleware","title":"LogRequestsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/metricsmiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/metricsmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/metricsmiddleware","title":"MetricsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/tracingmiddleware\/init(recordingheaders:attributes:)","title":"init(recordingHeaders: some Collection<HTTPField.Name>, attributes: SpanAttributes?)","type":"init"},{"path":"\/documentation\/hummingbird\/tracingmiddleware\/init(recordingheaders:redactingqueryparameters:attributes:)","title":"init(recordingHeaders: some Collection<HTTPField.Name>, redactingQueryParameters: Set<String>, attributes: SpanAttributes?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/tracingmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/tracingmiddleware","title":"TracingMiddleware","type":"struct"},{"title":"File management\/middleware","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/filemiddleware\/init(_:urlbasepath:cachecontrol:searchforindexhtml:threadpool:logger:)","title":"init(String, urlBasePath: String?, cacheControl: CacheControl, searchForIndexHtml: Bool, threadPool: NIOThreadPool, logger: Logger)","type":"init"},{"path":"\/documentation\/hummingbird\/filemiddleware\/init(fileprovider:urlbasepath:cachecontrol:searchforindexhtml:)","title":"init(fileProvider: Provider, urlBasePath: String?, cacheControl: CacheControl, searchForIndexHtml: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/filemiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"},{"path":"\/documentation\/hummingbird\/filemiddleware\/withadditionalmediatype(_:mappedtofileextension:)-5thvq","title":"func withAdditionalMediaType(MediaType, mappedToFileExtension: String) -> FileMiddleware","type":"method"},{"path":"\/documentation\/hummingbird\/filemiddleware\/withadditionalmediatype(_:mappedtofileextension:)-p2ec","title":"func withAdditionalMediaType(MediaType, mappedToFileExtension: MediaType.FileExtension) -> FileMiddleware","type":"method"},{"path":"\/documentation\/hummingbird\/filemiddleware\/withadditionalmediatypes(forfileextensions:)-1kfc3","title":"func withAdditionalMediaTypes(forFileExtensions: [MediaType.FileExtension : MediaType]) -> FileMiddleware","type":"method"},{"path":"\/documentation\/hummingbird\/filemiddleware\/withadditionalmediatypes(forfileextensions:)-2j7u2","title":"func withAdditionalMediaTypes(forFileExtensions: [String : MediaType]) -> FileMiddleware","type":"method"}],"path":"\/documentation\/hummingbird\/filemiddleware","title":"FileMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/fileio\/init(threadpool:)","title":"init(threadPool: NIOThreadPool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/fileio\/loadfile(path:context:chunklength:)","title":"func loadFile(path: String, context: some RequestContext, chunkLength: Int) async throws -> ResponseBody","type":"method"},{"path":"\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:chunklength:)","title":"func loadFile(path: String, range: ClosedRange<Int>, context: some RequestContext, chunkLength: Int) async throws -> ResponseBody","type":"method"},{"path":"\/documentation\/hummingbird\/fileio\/writefile(buffer:path:context:)","title":"func writeFile(buffer: ByteBuffer, path: String, context: some RequestContext) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/fileio\/writefile(contents:path:context:)","title":"func writeFile<AS>(contents: AS, path: String, context: some RequestContext) async throws","type":"method"}],"path":"\/documentation\/hummingbird\/fileio","title":"FileIO","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/fileprovider\/fileattributes","title":"FileAttributes","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/fileprovider\/fileidentifier","title":"FileIdentifier","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/fileprovider\/getattributes(id:)","title":"func getAttributes(id: FileIdentifier) async throws -> FileAttributes?","type":"method"},{"path":"\/documentation\/hummingbird\/fileprovider\/getfileidentifier(_:)","title":"func getFileIdentifier(String) -> FileIdentifier?","type":"method"},{"path":"\/documentation\/hummingbird\/fileprovider\/loadfile(id:context:)","title":"func loadFile(id: FileIdentifier, context: some RequestContext) async throws -> ResponseBody","type":"method"},{"path":"\/documentation\/hummingbird\/fileprovider\/loadfile(id:range:context:)","title":"func loadFile(id: FileIdentifier, range: ClosedRange<Int>, context: some RequestContext) async throws -> ResponseBody","type":"method"}],"path":"\/documentation\/hummingbird\/fileprovider","title":"FileProvider","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/filemiddlewarefileattributes\/isfolder","title":"var isFolder: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/filemiddlewarefileattributes\/modificationdate","title":"var modificationDate: Date","type":"property"},{"path":"\/documentation\/hummingbird\/filemiddlewarefileattributes\/size","title":"var size: Int","type":"property"}],"path":"\/documentation\/hummingbird\/filemiddlewarefileattributes","title":"FileMiddlewareFileAttributes","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/localfilesystem\/fileattributes\/isfolder","title":"let isFolder: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/localfilesystem\/fileattributes\/modificationdate","title":"let modificationDate: Date","type":"property"},{"path":"\/documentation\/hummingbird\/localfilesystem\/fileattributes\/size","title":"let size: Int","type":"property"}],"path":"\/documentation\/hummingbird\/localfilesystem\/fileattributes","title":"LocalFileSystem.FileAttributes","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/localfilesystem\/init(rootfolder:threadpool:logger:)","title":"init(rootFolder: String, threadPool: NIOThreadPool, logger: Logger)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/localfilesystem\/getattributes(id:)","title":"func getAttributes(id: FileIdentifier) async throws -> FileAttributes?","type":"method"},{"path":"\/documentation\/hummingbird\/localfilesystem\/getfileidentifier(_:)","title":"func getFileIdentifier(String) -> FileIdentifier?","type":"method"},{"path":"\/documentation\/hummingbird\/localfilesystem\/loadfile(id:context:)","title":"func loadFile(id: FileIdentifier, context: some RequestContext) async throws -> ResponseBody","type":"method"},{"path":"\/documentation\/hummingbird\/localfilesystem\/loadfile(id:range:context:)","title":"func loadFile(id: FileIdentifier, range: ClosedRange<Int>, context: some RequestContext) async throws -> ResponseBody","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/localfilesystem\/fileidentifier","title":"LocalFileSystem.FileIdentifier","type":"typealias"}],"path":"\/documentation\/hummingbird\/localfilesystem","title":"LocalFileSystem","type":"struct"},{"title":"Storage","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/persistdriver\/shutdown()-6sz67","title":"func shutdown() async throws","type":"method"}],"title":"PersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/persistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/persistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persistdriver","title":"PersistDriver","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/configuration\/init(tidyfrequency:)","title":"init(tidyFrequency: Duration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/configuration\/tidyfrequency","title":"var tidyFrequency: Duration","type":"property"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/configuration","title":"MemoryPersistDriver.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/init(_:)","title":"init(C)","type":"init"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/init(_:configuration:)","title":"init(C, configuration: Configuration)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/memorypersistdriver","title":"MemoryPersistDriver","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/persisterror\/invalidconversion","title":"static var invalidConversion: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/persisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/persisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persisterror","title":"PersistError","type":"struct"},{"title":"Miscellaneous","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/error\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/error\/message","title":"let message: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/error\/dotenvparseerror","title":"static var dotEnvParseError: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/environment\/error\/variabledoesnotconvert","title":"static var variableDoesNotConvert: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/environment\/error\/variabledoesnotexist","title":"static var variableDoesNotExist: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/environment\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/environment\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/environment\/error","title":"Environment.Error","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbird\/environment\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, String)...)","type":"init"},{"path":"\/documentation\/hummingbird\/environment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/hummingbird\/environment\/init(values:)","title":"init(values: [String : String])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/get(_:)","title":"func get(String) -> String?","type":"method"},{"path":"\/documentation\/hummingbird\/environment\/get(_:as:)","title":"func get<T>(String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/hummingbird\/environment\/merging(with:)","title":"func merging(with: Environment) -> Environment","type":"method"},{"path":"\/documentation\/hummingbird\/environment\/require(_:)","title":"func require(String) throws -> String","type":"method"},{"path":"\/documentation\/hummingbird\/environment\/require(_:as:)","title":"func require<T>(String, as: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/hummingbird\/environment\/set(_:value:)","title":"func set(String, value: String?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/dotenv(_:)","title":"static func dotEnv(String) async throws -> Environment","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/environment\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/environment","title":"Environment","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/initializablefromsource\/source","title":"Source","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/initializablefromsource\/init(source:)-3ukmp","title":"init(source: Source)","type":"init"}],"title":"InitializableFromSource Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/initializablefromsource\/init(source:)","title":"init(source: Source)","type":"init"}],"path":"\/documentation\/hummingbird\/initializablefromsource","title":"InitializableFromSource","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routervalidationerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routervalidationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/routervalidationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routervalidationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/routervalidationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routervalidationerror","title":"RouterValidationError","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/code-swift.struct\/addingtoinvalidtype","title":"static var addingToInvalidType: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/code-swift.struct\/corruptkeyvalue","title":"static var corruptKeyValue: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/code-swift.struct\/duplicatekeys","title":"static var duplicateKeys: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/code-swift.struct\/failedtopercentdecode","title":"static var failedToPercentDecode: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/code-swift.struct\/invalidarrayindex","title":"static var invalidArrayIndex: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/code-swift.struct\/notsupported","title":"static var notSupported: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/code-swift.struct\/unexpectederror","title":"static var unexpectedError: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/code-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/urlencodedformerror\/code-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/urlencodedformerror\/code-swift.struct","title":"URLEncodedFormError.Code","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/code-swift.property","title":"let code: Code","type":"property"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/value","title":"let value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/urlencodedformerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/urlencodedformerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/urlencodedformerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/urlencodedformerror","title":"URLEncodedFormError","type":"struct"}],"icon":"logo.png","path":"\/documentation\/hummingbird","title":"Hummingbird","type":"module"},{"children":[{"title":"Server","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/init(childchannelsetup:configuration:onserverrunning:eventloopgroup:logger:)","title":"init(childChannelSetup: ChildChannel, configuration: ServerConfiguration, onServerRunning: ((any Channel) async -> Void)?, eventLoopGroup: any EventLoopGroup, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/logger","title":"let logger: Logger","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/server\/shutdowngracefully()","title":"func shutdownGracefully() async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/asyncchildchannel","title":"Server.AsyncChildChannel","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/server\/asyncserverchannel","title":"Server.AsyncServerChannel","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/error\/servershutdown","title":"case serverShutdown","type":"case"},{"path":"\/documentation\/hummingbirdcore\/server\/error\/servershuttingdown","title":"case serverShuttingDown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/server\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/server\/error","title":"Server.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/server\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbirdcore\/server\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/server\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/server\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/server","title":"Server","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/serverconfiguration\/init(address:servername:backlog:reuseaddress:availableconnectionsdelegate:)","title":"init(address: BindAddress, serverName: String?, backlog: Int, reuseAddress: Bool, availableConnectionsDelegate: (any AvailableConnectionsDelegate)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/serverconfiguration\/address","title":"let address: BindAddress","type":"property"},{"path":"\/documentation\/hummingbirdcore\/serverconfiguration\/availableconnectionsdelegate","title":"let availableConnectionsDelegate: (any AvailableConnectionsDelegate)?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/serverconfiguration\/backlog","title":"let backlog: Int","type":"property"},{"path":"\/documentation\/hummingbirdcore\/serverconfiguration\/reuseaddress","title":"let reuseAddress: Bool","type":"property"},{"path":"\/documentation\/hummingbirdcore\/serverconfiguration\/servername","title":"let serverName: String?","type":"property"}],"path":"\/documentation\/hummingbirdcore\/serverconfiguration","title":"ServerConfiguration","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/serverchildchannel\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/serverchildchannel\/handle(value:logger:)","title":"func handle(value: Value, logger: Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdcore\/serverchildchannel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((any Channel) async -> Void)?, eventLoopGroup: any EventLoopGroup, logger: Logger) -> any Service","type":"method"},{"path":"\/documentation\/hummingbirdcore\/serverchildchannel\/setup(channel:logger:)","title":"func setup(channel: any Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"}],"path":"\/documentation\/hummingbirdcore\/serverchildchannel","title":"ServerChildChannel","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/serverchildchannelvalue\/channel","title":"var channel: any Channel","type":"property"}],"path":"\/documentation\/hummingbirdcore\/serverchildchannelvalue","title":"ServerChildChannelValue","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/bindaddress\/hostname(_:port:)","title":"static func hostname(String, port: Int) -> BindAddress","type":"method"},{"path":"\/documentation\/hummingbirdcore\/bindaddress\/unixdomainsocket(path:)","title":"static func unixDomainSocket(path: String) -> BindAddress","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/bindaddress\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/bindaddress\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/bindaddress","title":"BindAddress","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/init(delegate:)","title":"init(delegate: Delegate)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/init(maxconnections:)","title":"init(maxConnections: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelread(context:data:)","title":"func channelRead(context: ChannelHandlerContext, data: NIOAny)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/read(context:)","title":"func read(context: ChannelHandlerContext)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundin","title":"AvailableConnectionsChannelHandler.InboundIn","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundout","title":"AvailableConnectionsChannelHandler.InboundOut","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/outboundin","title":"AvailableConnectionsChannelHandler.OutboundIn","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/outboundout","title":"AvailableConnectionsChannelHandler.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/unwrapinboundin(_:)","title":"func unwrapInboundIn(NIOAny) -> Self.InboundIn","type":"method"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/unwrapoutboundin(_:)","title":"func unwrapOutboundIn(NIOAny) -> Self.OutboundIn","type":"method"}],"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","title":"AvailableConnectionsChannelHandler","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate\/connectionclosed()","title":"func connectionClosed()","type":"method"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate\/connectionopened()","title":"func connectionOpened()","type":"method"},{"path":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate\/isacceptingnewconnections()","title":"func isAcceptingNewConnections() -> Bool","type":"method"}],"path":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate","title":"AvailableConnectionsDelegate","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/maximumavailableconnections\/init(_:)","title":"init(Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/maximumavailableconnections\/connectionclosed()","title":"func connectionClosed()","type":"method"},{"path":"\/documentation\/hummingbirdcore\/maximumavailableconnections\/connectionopened()","title":"func connectionOpened()","type":"method"},{"path":"\/documentation\/hummingbirdcore\/maximumavailableconnections\/isacceptingnewconnections()","title":"func isAcceptingNewConnections() -> Bool","type":"method"}],"path":"\/documentation\/hummingbirdcore\/maximumavailableconnections","title":"MaximumAvailableConnections","type":"struct"},{"title":"HTTP Server","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/init(_:)","title":"init((HTTPChannelHandler.Responder) throws -> any ServerChildChannel)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/buildserver(configuration:eventloopgroup:logger:responder:onserverrunning:)","title":"func buildServer(configuration: ServerConfiguration, eventLoopGroup: any EventLoopGroup, logger: Logger, responder: HTTPChannelHandler.Responder, onServerRunning: ((any Channel) async -> Void)?) throws -> any Service","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1(additionalchannelhandlers:)","title":"static func http1(additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler]) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1(configuration:)","title":"static func http1(configuration: HTTP1Channel.Configuration) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(configuration:additionalchannelhandlers:shouldupgrade:)-3n8zf","title":"static func http1WebSocketUpgrade(configuration: WebSocketServerConfiguration, additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) async throws -> ShouldUpgradeResult<WebSocketDataHandler<HTTP1WebSocketUpgradeChannel.Context>>) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(configuration:additionalchannelhandlers:shouldupgrade:)-6siva","title":"static func http1WebSocketUpgrade(configuration: WebSocketServerConfiguration, additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) throws -> ShouldUpgradeResult<WebSocketDataHandler<HTTP1WebSocketUpgradeChannel.Context>>) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(websocketrouter:configuration:additionalchannelhandlers:)","title":"static func http1WebSocketUpgrade<WSResponderBuilder>(webSocketRouter: WSResponderBuilder, configuration: WebSocketServerConfiguration, additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler]) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http2upgrade(tlschannelconfiguration:configuration:)","title":"static func http2Upgrade(tlsChannelConfiguration: TLSChannelConfiguration, configuration: HTTP2UpgradeChannel.Configuration) throws -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http2upgrade(tlsconfiguration:additionalchannelhandlers:)","title":"static func http2Upgrade(tlsConfiguration: TLSConfiguration, additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler]) throws -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http2upgrade(tlsconfiguration:configuration:)","title":"static func http2Upgrade(tlsConfiguration: TLSConfiguration, configuration: HTTP2UpgradeChannel.Configuration) throws -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/plaintexthttp2(configuration:)","title":"static func plaintextHTTP2(configuration: HTTP2Channel.Configuration) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/tls(_:configuration:)","title":"static func tls(HTTPServerBuilder, configuration: TLSChannelConfiguration) throws -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/tls(_:tlsconfiguration:)","title":"static func tls(HTTPServerBuilder, tlsConfiguration: TLSConfiguration) throws -> HTTPServerBuilder","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpserverbuilder","title":"HTTPServerBuilder","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpchannelhandler\/responder-swift.property","title":"var responder: Responder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpchannelhandler\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpchannelhandler\/responder-swift.typealias","title":"HTTPChannelHandler.Responder","type":"typealias"}],"path":"\/documentation\/hummingbirdcore\/httpchannelhandler","title":"HTTPChannelHandler","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/configuration-swift.struct\/init(additionalchannelhandlers:idletimeout:)","title":"init(additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler], idleTimeout: TimeAmount?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/configuration-swift.struct\/additionalchannelhandlers","title":"var additionalChannelHandlers: () -> [any RemovableChannelHandler]","type":"property"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/configuration-swift.struct\/idletimeout","title":"var idleTimeout: TimeAmount?","type":"property"}],"path":"\/documentation\/hummingbirdcore\/http1channel\/configuration-swift.struct","title":"HTTP1Channel.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/init(responder:additionalchannelhandlers:)","title":"init(responder: HTTPChannelHandler.Responder, additionalChannelHandlers: () -> [any RemovableChannelHandler])","type":"init"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/init(responder:configuration:)","title":"init(responder: HTTPChannelHandler.Responder, configuration: Configuration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/configuration-swift.property","title":"let configuration: Configuration","type":"property"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/responder","title":"let responder: HTTPChannelHandler.Responder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/handle(value:logger:)","title":"func handle(value: NIOCore.NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logging.Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/setup(channel:logger:)","title":"func setup(channel: any Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/value","title":"HTTP1Channel.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdcore\/http1channel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((any Channel) async -> Void)?, eventLoopGroup: any EventLoopGroup, logger: Logger) -> any Service","type":"method"}],"path":"\/documentation\/hummingbirdcore\/http1channel\/serverchildchannel-implementations","title":"ServerChildChannel Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/http1channel","title":"HTTP1Channel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/init(logger:)","title":"init(logger: Logger)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channelread(context:data:)","title":"func channelRead(context: ChannelHandlerContext, data: NIOAny)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/userinboundeventtriggered(context:event:)","title":"func userInboundEventTriggered(context: ChannelHandlerContext, event: Any)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/write(context:data:promise:)","title":"func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/inboundin","title":"HTTPUserEventHandler.InboundIn","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/inboundout","title":"HTTPUserEventHandler.InboundOut","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/outboundin","title":"HTTPUserEventHandler.OutboundIn","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/outboundout","title":"HTTPUserEventHandler.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/unwrapinboundin(_:)","title":"func unwrapInboundIn(NIOAny) -> Self.InboundIn","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/unwrapoutboundin(_:)","title":"func unwrapOutboundIn(NIOAny) -> Self.OutboundIn","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/httpusereventhandler","title":"HTTPUserEventHandler","type":"class"},{"title":"Request","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/init(head:body:)","title":"init(head: HTTPRequest, body: RequestBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/body","title":"var body: RequestBody","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/cookies","title":"var cookies: Cookies","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/head","title":"let head: HTTPRequest","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/method","title":"var method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/uri","title":"let uri: URI","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/collectbody(upto:)","title":"func collectBody(upTo: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/decode(as:context:)","title":"func decode<Type>(as: Type.Type, context: some RequestContext) async throws -> Type","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/ifmatch(headers:etag:context:process:)","title":"func ifMatch(headers: HTTPFields, eTag: String, context: some RequestContext, process: () async throws -> some ResponseGenerator) async throws -> Response","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/ifmodifiedsince(headers:modificationdate:context:process:)","title":"func ifModifiedSince(headers: HTTPFields, modificationDate: Date, context: some RequestContext, process: () async throws -> some ResponseGenerator) async throws -> Response","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/ifnonematch(headers:etag:context:process:)","title":"func ifNoneMatch(headers: HTTPFields, eTag: String, context: some RequestContext, process: () async throws -> some ResponseGenerator) async throws -> Response","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/ifunmodifiedsince(headers:modificationdate:context:process:)","title":"func ifUnmodifiedSince(headers: HTTPFields, modificationDate: Date, context: some RequestContext, process: () async throws -> some ResponseGenerator) async throws -> Response","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/request\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/request","title":"Request","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/http","title":"static var http: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/http_unix","title":"static var http_unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/https","title":"static var https: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/https_unix","title":"static var https_unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/unix","title":"static var unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/ws","title":"static var ws: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/wss","title":"static var wss: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct","title":"URI.Scheme","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/uri\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/host","title":"var host: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/port","title":"var port: Int?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/queryparameters","title":"var queryParameters: FlatDictionary<Substring, Substring>","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.property","title":"var scheme: Scheme?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/string","title":"let string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/decodequery(as:context:)","title":"func decodeQuery<Type>(as: Type.Type, context: some RequestContext) throws -> Type","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdcore\/uri\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdcore\/uri\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/uri","title":"URI","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/source\/finish()","title":"func finish()","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/source\/finish(_:)","title":"func finish(any Error)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/source\/yield(_:)","title":"func yield(ByteBuffer) async","type":"method"}],"path":"\/documentation\/hummingbirdcore\/requestbody\/source","title":"RequestBody.Source","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/init(asyncsequence:)","title":"init<AS>(asyncSequence: AS)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/init(buffer:)","title":"init(buffer: ByteBuffer)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/consumewithcancellationoninboundclose(_:)","title":"func consumeWithCancellationOnInboundClose<Value>((RequestBody) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/consumewithinboundclosehandler(isolation:_:oninboundclosed:)","title":"func consumeWithInboundCloseHandler<Value>(isolation: isolated (any Actor)?, (RequestBody) async throws -> Value, onInboundClosed: () -> Void) async throws -> Value","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/makestream()","title":"static func makeStream() -> (RequestBody, Source)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/asynciterator\/next()","title":"func next() async throws -> ByteBuffer?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/asynciterator\/next()-7cgq1","title":"func next() async throws(Self.Failure) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/hummingbirdcore\/requestbody\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/requestbody\/asynciterator","title":"RequestBody.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(by:into:)-26e0t","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(by:into:)-77p0y","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:or:)-5c6go","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:or:)-eqob","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:or:into:)-6pa41","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:or:into:)-8bkkk","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/collect(upto:)","title":"func collect(upTo: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/collect(upto:into:)","title":"func collect(upTo: Int, into: inout ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/compactmap(_:)-9cm7g","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/compactmap(_:)-9nvqb","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/flatmap(_:)-12atf","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/flatmap(_:)-3mu7r","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/flatmap(_:)-4u8jd","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/flatmap(_:)-w8eu","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/interspersed(every:with:)-3knen","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/interspersed(every:with:)-4zinn","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/interspersed(every:with:)-5t3wz","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/interspersed(every:with:)-725gh","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/interspersed(every:with:)-96rse","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/map(_:)-9cjiw","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/map(_:)-r9yt","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reductions(_:_:)-3yrmx","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reductions(_:_:)-5dhf0","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reductions(into:_:)-6kxnp","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reductions(into:_:)-7j5yc","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/element","title":"RequestBody.Element","type":"typealias"}],"path":"\/documentation\/hummingbirdcore\/requestbody\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/requestbody","title":"RequestBody","type":"struct"},{"title":"Response","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/init(status:headers:body:)","title":"init(status: HTTPResponse.Status, headers: HTTPFields, body: ResponseBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/body","title":"var body: ResponseBody","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/head","title":"var head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/createheadresponse()","title":"func createHeadResponse() -> Response","type":"method"},{"path":"\/documentation\/hummingbirdcore\/response\/setcookie(_:)","title":"func setCookie(Cookie)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirect(to:type:)","title":"static func redirect(to: String, type: RedirectType) -> Response","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/found","title":"case found","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/permanent","title":"case permanent","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/temporary","title":"case temporary","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/response\/redirecttype","title":"Response.RedirectType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/response\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/response(from:context:)","title":"func response(from: Request, context: some RequestContext) -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcore\/response\/responsegenerator-implementations","title":"ResponseGenerator Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/response","title":"Response","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/init(asyncsequence:)","title":"init<BufferSequence>(asyncSequence: BufferSequence)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/init(bytebuffer:)","title":"init(byteBuffer: ByteBuffer)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)","title":"init(contentLength: Int?, (inout any ResponseBodyWriter) async throws -> Void)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/init(contentsof:)","title":"init<BufferSequence>(contentsOf: BufferSequence)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/contentlength","title":"let contentLength: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/map(_:)","title":"func map((ByteBuffer) async throws -> ByteBuffer) -> ResponseBody","type":"method"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/write(_:)","title":"func write(consuming any ResponseBodyWriter) async throws","type":"method"}],"path":"\/documentation\/hummingbirdcore\/responsebody","title":"ResponseBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsewriter\/init(outbound:)","title":"init(outbound: NIOAsyncChannelOutboundWriter<HTTPResponsePart>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsewriter\/writehead(_:)","title":"func writeHead(HTTPResponse) async throws -> some ResponseBodyWriter","type":"method"},{"path":"\/documentation\/hummingbirdcore\/responsewriter\/writeinformationalhead(_:)","title":"func writeInformationalHead(HTTPResponse) async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/responsewriter\/writeresponse(_:)","title":"func writeResponse(HTTPResponse) async throws","type":"method"}],"path":"\/documentation\/hummingbirdcore\/responsewriter","title":"ResponseWriter","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/compressed(algorithm:configuration:windowsize:logger:)","title":"func compressed(algorithm: ZlibAlgorithm, configuration: ZlibConfiguration, windowSize: Int, logger: Logger) throws -> some ResponseBodyWriter","type":"method"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/finish(_:)","title":"func finish(HTTPFields?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/map(_:)","title":"func map((ByteBuffer) async throws -> ByteBuffer) -> some ResponseBodyWriter","type":"method"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/write(_:)","title":"func write(ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/write(contentsof:)","title":"func write(contentsOf: some Sequence<ByteBuffer>) async throws","type":"method"}],"path":"\/documentation\/hummingbirdcore\/responsebodywriter","title":"ResponseBodyWriter","type":"protocol"},{"title":"Miscellaneous","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/init(_:)","title":"init([Element])","type":"init"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (Key, Value)...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/startindex","title":"var startIndex: Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/append(key:value:)","title":"func append(key: Key, value: Value)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:)","title":"func get(String) -> String?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:as:)-2owlj","title":"func get<T>(String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:as:)-3fdsi","title":"func get<T>(String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:as:)-4l1j2","title":"func get(String, as: UUID.Type) -> UUID?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:)","title":"func getAll(String) -> [String]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:as:)-261y8","title":"func getAll<T>(String, as: T.Type) -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:as:)-4h655","title":"func getAll<T>(String, as: T.Type) -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:as:)-ezmk","title":"func getAll(String, as: UUID.Type) -> [UUID]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()","title":"func getCatchAll() -> [Substring]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/has(_:)","title":"func has(Key) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/require(_:)","title":"func require(String) throws -> String","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/require(_:as:)-5htdq","title":"func require(String, as: UUID.Type) throws -> UUID","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/require(_:as:)-8wfem","title":"func require<T>(String, as: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/require(_:as:)-zo5p","title":"func require<T>(String, as: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/requireall(_:as:)-52rco","title":"func requireAll<T>(String, as: T.Type) throws -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/requireall(_:as:)-8n9if","title":"func requireAll<T>(String, as: T.Type) throws -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/requireall(_:as:)-9smzz","title":"func requireAll(String, as: UUID.Type) throws -> [UUID]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/setcatchall(_:)","title":"func setCatchAll(Substring)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-2eyqb","title":"subscript(Key) -> Value?","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-4wq5d","title":"subscript(Index) -> Element","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(values:)","title":"subscript(values _: Key) -> [Value]","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/element","title":"FlatDictionary.Element","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index","title":"FlatDictionary.Index","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/recursivecapturekey","title":"static let recursiveCaptureKey: Substring","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/indices(where:)","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/map(_:)-1wtdb","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-1tjum","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-3xw2x","title":"subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-4c4bj","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-5ino","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/hummingbirdcore\/flatdictionary\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/async","title":"var async: AsyncSyncSequence<Self>","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"deprecated":true,"path":"\/documentation\/hummingbirdcore\/flatdictionary\/flatmap(_:)-4fci6","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/flatmap(_:)-92qvw","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/map(_:)-1pio3","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/sorted(using:)-4jmlg","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/sorted(using:)-8nm8t","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/hummingbirdcore\/flatdictionary\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/flatdictionary","title":"FlatDictionary","type":"struct"}],"icon":"logo.png","path":"\/documentation\/hummingbirdcore","title":"HummingbirdCore","type":"module"},{"children":[{"title":"Request Contexts","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/init(source:)","title":"init(source: Source)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/corecontext","title":"var coreContext: CoreRequestContextStorage","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/identity","title":"var identity: Identity?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/requireidentity()","title":"func requireIdentity() throws -> Identity","type":"method"}],"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/authrequestcontext-implementations","title":"AuthRequestContext Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/requestdecoder","title":"var requestDecoder: JSONDecoder","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/responseencoder","title":"var responseEncoder: JSONEncoder","type":"property"}],"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/requestcontext-implementations","title":"RequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","title":"BasicAuthRequestContext","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/authrequestcontext\/identity-swift.associatedtype","title":"Identity","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/authrequestcontext\/identity-swift.property","title":"var identity: Identity?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/authrequestcontext\/requireidentity()","title":"func requireIdentity() throws -> Identity","type":"method"}],"path":"\/documentation\/hummingbirdauth\/authrequestcontext","title":"AuthRequestContext","type":"protocol"},{"title":"Authenticators","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/identity","title":"Identity","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)","title":"func authenticate(request: Request, context: Context) async throws -> Identity?","type":"method"}],"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware","title":"AuthenticatorMiddleware","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/closureauthenticator\/init(_:)","title":"init((Request, Context) async throws -> Context.Identity?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/closureauthenticator\/authenticate(request:context:)","title":"func authenticate(request: Request, context: Context) async throws -> Context.Identity?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/closureauthenticator\/identity","title":"ClosureAuthenticator.Identity","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/closureauthenticator\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdauth\/closureauthenticator\/authenticatormiddleware-implementations","title":"AuthenticatorMiddleware Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/closureauthenticator","title":"ClosureAuthenticator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","title":"IsAuthenticatedMiddleware","type":"struct"},{"title":"Header Authentication","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicauthentication\/password","title":"let password: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthentication\/username","title":"let username: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/basicauthentication","title":"BasicAuthentication","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/bearerauthentication\/token","title":"let token: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/bearerauthentication","title":"BearerAuthentication","type":"struct"},{"title":"Sessions","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/init(sessionstorage:defaultsessionexpiration:)","title":"init(sessionStorage: SessionStorage<Context.Session>, defaultSessionExpiration: Duration)","type":"init"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/init(storage:sessioncookie:defaultsessionexpiration:)","title":"init(storage: any PersistDriver, sessionCookie: String, defaultSessionExpiration: Duration)","type":"init"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/init(storage:sessioncookieparameters:defaultsessionexpiration:)","title":"init(storage: any PersistDriver, sessionCookieParameters: SessionCookieParameters, defaultSessionExpiration: Duration)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdauth\/sessionmiddleware","title":"SessionMiddleware","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionrequestcontext\/session","title":"Session","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionrequestcontext\/sessions","title":"var sessions: SessionContext<Session>","type":"property"}],"path":"\/documentation\/hummingbirdauth\/sessionrequestcontext","title":"SessionRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessioncontext\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessioncontext\/session","title":"var session: Session?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessioncontext\/clearsession()","title":"func clearSession()","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessioncontext\/setsession(_:expiresin:)","title":"func setSession(Session, expiresIn: Duration?)","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessioncontext\/withlockedsession(_:)","title":"func withLockedSession<Value>((inout SessionData<Session>?) -> Value) -> Value","type":"method"}],"path":"\/documentation\/hummingbirdauth\/sessioncontext","title":"SessionContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessiondata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessiondata\/expiresin","title":"var expiresIn: Duration?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessiondata\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessiondata\/subscript(dynamicmember:)","title":"subscript<T>(dynamicMember _: WritableKeyPath<Session, T>) -> T","type":"subscript"}],"path":"\/documentation\/hummingbirdauth\/sessiondata","title":"SessionData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/init(source:)","title":"init(source: Source)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/corecontext","title":"var coreContext: CoreRequestContextStorage","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/identity","title":"var identity: Identity?","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/sessions","title":"let sessions: SessionContext<Session>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/requireidentity()","title":"func requireIdentity() throws -> Identity","type":"method"}],"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/authrequestcontext-implementations","title":"AuthRequestContext Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/requestdecoder","title":"var requestDecoder: JSONDecoder","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/responseencoder","title":"var responseEncoder: JSONEncoder","type":"property"}],"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext\/requestcontext-implementations","title":"RequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext","title":"BasicSessionRequestContext","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/sessiondoesnotexist","title":"static var sessionDoesNotExist: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/sessioninvalidtype","title":"static var sessionInvalidType: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error","title":"SessionStorage.Error","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/init(_:sessioncookie:)","title":"init(any PersistDriver, sessionCookie: String)","type":"init"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/init(_:sessioncookieparameters:)","title":"init(any PersistDriver, sessionCookieParameters: SessionCookieParameters)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/delete(request:)","title":"func delete(request: Request) async throws -> Cookie","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/getid(request:)","title":"func getId(request: Request) -> String?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/load(request:)","title":"func load(request: Request) async throws -> SessionType?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/save(session:expiresin:)","title":"func save(session: SessionType, expiresIn: Duration) async throws -> Cookie","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/update(session:expiresin:request:)","title":"func update(session: SessionType, expiresIn: Duration?, request: Request) async throws","type":"method"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage","title":"SessionStorage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessioncookieparameters\/init(name:domain:path:secure:samesite:)","title":"init(name: String, domain: String?, path: String, secure: Bool, sameSite: Cookie.SameSite?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessioncookieparameters\/domain","title":"var domain: String?","type":"property"},{"path":"\/documentation\/hummingbirdauth\/sessioncookieparameters\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/sessioncookieparameters\/path","title":"var path: String?","type":"property"},{"path":"\/documentation\/hummingbirdauth\/sessioncookieparameters\/samesite","title":"var sameSite: Cookie.SameSite?","type":"property"},{"path":"\/documentation\/hummingbirdauth\/sessioncookieparameters\/secure","title":"var secure: Bool","type":"property"}],"path":"\/documentation\/hummingbirdauth\/sessioncookieparameters","title":"SessionCookieParameters","type":"struct"},{"title":"Session authenticator","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionauthenticator\/init(context:getuser:)","title":"init<Session>(context: Context.Type, getUser: (Session, UserRepositoryContext) async throws -> Context.Identity?)","type":"init"},{"path":"\/documentation\/hummingbirdauth\/sessionauthenticator\/init(users:context:)","title":"init(users: Repository, context: Context.Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionauthenticator\/users","title":"let users: Repository","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionauthenticator\/authenticate(request:context:)","title":"func authenticate(request: Request, context: Context) async throws -> Repository.User?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionauthenticator\/identity","title":"SessionAuthenticator.Identity","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionauthenticator\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdauth\/sessionauthenticator\/authenticatormiddleware-implementations","title":"AuthenticatorMiddleware Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/sessionauthenticator","title":"SessionAuthenticator","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/usersessionrepository\/identifier","title":"Identifier","type":"associatedtype"},{"path":"\/documentation\/hummingbirdauth\/usersessionrepository\/user","title":"User","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/usersessionrepository\/getuser(from:context:)","title":"func getUser(from: Identifier, context: UserRepositoryContext) async throws -> User?","type":"method"}],"path":"\/documentation\/hummingbirdauth\/usersessionrepository","title":"UserSessionRepository","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/usersessionclosurerepository\/init(_:)","title":"init((Identifier, UserRepositoryContext) async throws -> User?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/usersessionclosurerepository\/getuser(from:context:)","title":"func getUser(from: Identifier, context: UserRepositoryContext) async throws -> User?","type":"method"}],"path":"\/documentation\/hummingbirdauth\/usersessionclosurerepository","title":"UserSessionClosureRepository","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/userrepositorycontext\/init(logger:)","title":"init(logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/userrepositorycontext\/logger","title":"let logger: Logger","type":"property"}],"path":"\/documentation\/hummingbirdauth\/userrepositorycontext","title":"UserRepositoryContext","type":"struct"}],"icon":"logo.png","path":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","type":"module"},{"children":[{"title":"Request decompression","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware\/init(windowsize:)","title":"init(windowSize: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","title":"RequestDecompressionMiddleware","type":"struct"},{"title":"Response compression","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware\/init(windowsize:minimumresponsesizetocompress:zlibcompressionlevel:zlibmemorylevel:)","title":"init(windowSize: Int, minimumResponseSizeToCompress: Int, zlibCompressionLevel: ZlibConfiguration.CompressionLevel, zlibMemoryLevel: ZlibConfiguration.MemoryLevel)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","title":"ResponseCompressionMiddleware","type":"struct"}],"icon":"logo.png","path":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression","type":"module"},{"children":[{"title":"Fluent","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/init(eventloopgroupprovider:threadpool:logger:)","title":"init(eventLoopGroupProvider: EventLoopGroupProvider, threadPool: NIOThreadPool, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/databases","title":"let databases: Databases","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/eventloopgroup","title":"var eventLoopGroup: EventLoopGroup","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/migrations","title":"var migrations: FluentMigrations","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/db(_:logger:history:pagesizelimit:)","title":"func db(DatabaseID?, logger: Logger?, history: QueryHistory?, pageSizeLimit: Int?) -> Database","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/migrate()","title":"func migrate() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/revert()","title":"func revert() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluent","title":"Fluent","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/migrations","title":"let migrations: Migrations","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/add(_:to:)-2ovat","title":"func add([Migration], to: DatabaseID?)","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/add(_:to:)-2qcos","title":"func add(Migration..., to: DatabaseID?)","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/revertlast(databases:logger:)","title":"func revertLast(databases: Databases, logger: Logger) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/fluentmigrations","title":"FluentMigrations","type":"class"},{"title":"Storage","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/init(fluent:databaseid:tidyupfrequency:)","title":"init(fluent: Fluent, databaseID: DatabaseID?, tidyUpFrequency: Duration) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","title":"FluentPersistDriver","type":"class"}],"icon":"logo.png","path":"\/documentation\/hummingbirdfluent","title":"HummingbirdFluent","type":"module"},{"children":[{"title":"Lambda function","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(responder:event:output:services:logger:)","title":"init(responder: Responder, event: Event.Type, output: Output.Type, services: [Service], logger: Logger?)","type":"init"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(router:event:output:services:logger:)","title":"init<ResponderBuilder>(router: ResponderBuilder, event: Event.Type, output: Output.Type, services: [Service], logger: Logger?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/processesrunbeforelambdastart","title":"var processesRunBeforeLambdaStart: [() async throws -> Void]","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","title":"let responder: Responder","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/services","title":"var services: [any Service]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/addservices(_:)","title":"func addServices(any Service...)","type":"method"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/beforelambdastarts(perform:)","title":"func beforeLambdaStarts(perform: () async throws -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/runservice()","title":"func runService() async throws","type":"method"}],"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/lambdafunctionprotocol-implementations","title":"LambdaFunctionProtocol Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdlambda\/lambdafunction","title":"LambdaFunction","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/event","title":"Event","type":"associatedtype"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/output","title":"Output","type":"associatedtype"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/responder-swift.associatedtype","title":"Responder","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/logger-4ns1g","title":"var logger: Logger","type":"property"}],"title":"LambdaFunctionProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/logger","title":"var logger: Logger","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/processesrunbeforelambdastart-5f168","title":"var processesRunBeforeLambdaStart: [() async throws -> Void]","type":"property"}],"title":"LambdaFunctionProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/processesrunbeforelambdastart","title":"var processesRunBeforeLambdaStart: [() async throws -> Void]","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/responder-swift.property","title":"var responder: Responder","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/services-3auk7","title":"var services: [any Service]","type":"property"}],"title":"LambdaFunctionProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/services","title":"var services: [any Service]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/runservice()","title":"func runService() async throws","type":"method"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/test(loglevel:_:)","title":"func test<Value>(logLevel: Logger.Level, (LambdaTestClient<Self>) async throws -> Value) async throws -> Value","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/context","title":"LambdaFunctionProtocol.Context","type":"typealias"}],"path":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol","title":"LambdaFunctionProtocol","type":"protocol"},{"path":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","title":"APIGatewayLambdaFunction","type":"typealias"},{"path":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","title":"APIGatewayV2LambdaFunction","type":"typealias"},{"path":"\/documentation\/hummingbirdlambda\/functionurllambdafunction","title":"FunctionURLLambdaFunction","type":"typealias"},{"title":"Request context","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdarequestcontext\/event","title":"Event","type":"associatedtype"}],"path":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","title":"LambdaRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/init(source:)","title":"init(source: Source)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/corecontext","title":"var coreContext: CoreRequestContextStorage","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/event","title":"let event: Event","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/requestdecoder","title":"var requestDecoder: JSONDecoder","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/responseencoder","title":"var responseEncoder: JSONEncoder","type":"property"}],"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/requestcontext-implementations","title":"RequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","title":"BasicLambdaRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource\/init(event:lambdacontext:)","title":"init(event: Event, lambdaContext: LambdaContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource\/event","title":"let event: Event","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource\/lambdacontext","title":"let lambdaContext: LambdaContext","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource\/logger","title":"var logger: Logger","type":"property"}],"path":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource","title":"LambdaRequestContextSource","type":"struct"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdaevent\/request(context:)","title":"func request(context: LambdaContext) throws -> Request","type":"method"}],"path":"\/documentation\/hummingbirdlambda\/lambdaevent","title":"LambdaEvent","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdaoutput\/init(from:)","title":"init(from: Response) async throws","type":"init"}],"path":"\/documentation\/hummingbirdlambda\/lambdaoutput","title":"LambdaOutput","type":"protocol"}],"icon":"logo.png","path":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","type":"module"},{"children":[{"title":"Persist","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/init(client:migrations:tidyupfrequency:logger:)","title":"init(client: PostgresClient, migrations: DatabaseMigrations, tidyUpFrequency: Duration, logger: Logger) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver","title":"PostgresPersistDriver","type":"class"}],"icon":"logo.png","path":"\/documentation\/hummingbirdpostgres","title":"HummingbirdPostgres","type":"module"},{"children":[{"title":"Storage","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver\/init(client:)","title":"init(client: Client)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver","title":"ValkeyPersistDriver","type":"struct"}],"icon":"logo.png","path":"\/documentation\/hummingbirdvalkey","title":"HummingbirdValkey","type":"module"},{"children":[{"title":"Server","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(configuration:additionalchannelhandlers:shouldupgrade:)-3n8zf","title":"static func http1WebSocketUpgrade(configuration: WebSocketServerConfiguration, additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) async throws -> ShouldUpgradeResult<WebSocketDataHandler<HTTP1WebSocketUpgradeChannel.Context>>) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(configuration:additionalchannelhandlers:shouldupgrade:)-6siva","title":"static func http1WebSocketUpgrade(configuration: WebSocketServerConfiguration, additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) throws -> ShouldUpgradeResult<WebSocketDataHandler<HTTP1WebSocketUpgradeChannel.Context>>) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(websocketrouter:configuration:additionalchannelhandlers:)","title":"static func http1WebSocketUpgrade<WSResponderBuilder>(webSocketRouter: WSResponderBuilder, configuration: WebSocketServerConfiguration, additionalChannelHandlers: @autoclosure () -> [any RemovableChannelHandler]) -> HTTPServerBuilder","type":"method"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/context\/logger","title":"let logger: Logger","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/context","title":"HTTP1WebSocketUpgradeChannel.Context","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/value\/channel","title":"let channel: Channel","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/value","title":"HTTP1WebSocketUpgradeChannel.Value","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/init(responder:configuration:additionalchannelhandlers:shouldupgrade:)-4c3od","title":"init(responder: HTTPChannelHandler.Responder, configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) throws -> ShouldUpgradeResult<WebSocketDataHandler<Context>>)","type":"init"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/init(responder:configuration:additionalchannelhandlers:shouldupgrade:)-6xv22","title":"init(responder: HTTPChannelHandler.Responder, configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) async throws -> ShouldUpgradeResult<WebSocketDataHandler<Context>>)","type":"init"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/init(responder:websocketresponder:configuration:additionalchannelhandlers:)","title":"init<WSResponder>(responder: HTTPChannelHandler.Responder, webSocketResponder: WSResponder, configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/responder","title":"let responder: HTTPChannelHandler.Responder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/handle(value:logger:)","title":"func handle(value: Value, logger: Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/setup(channel:logger:)","title":"func setup(channel: Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/websocketchannelhandler","title":"HTTP1WebSocketUpgradeChannel.WebSocketChannelHandler","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult\/failedupgrade(_:_:)","title":"case failedUpgrade(NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, Logger)","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult\/notupgraded(_:)","title":"case notUpgraded(NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>)","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult\/websocket(_:_:_:)","title":"case websocket(NIOAsyncChannel<WebSocketFrame, WebSocketFrame>, WebSocketChannelHandler, Logger)","type":"case"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult","title":"HTTP1WebSocketUpgradeChannel.UpgradeResult","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((any Channel) async -> Void)?, eventLoopGroup: any EventLoopGroup, logger: Logger) -> any Service","type":"method"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/serverchildchannel-implementations","title":"ServerChildChannel Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel","title":"HTTP1WebSocketUpgradeChannel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/init(maxframesize:extensions:autoping:closetimeout:validateutf8:)","title":"init(maxFrameSize: Int, extensions: [WebSocketExtensionFactory], autoPing: AutoPingSetup, closeTimeout: Duration, validateUTF8: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/autoping","title":"var autoPing: AutoPingSetup","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/closetimeout","title":"var closeTimeout: Duration","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/extensions","title":"var extensions: [any WebSocketExtensionBuilder]","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/maxframesize","title":"var maxFrameSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/validateutf8","title":"var validateUTF8: Bool","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration","title":"WebSocketServerConfiguration","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/autopingsetup\/disabled","title":"static var disabled: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/autopingsetup\/enabled(timeperiod:)","title":"static func enabled(timePeriod: Duration) -> AutoPingSetup","type":"method"}],"path":"\/documentation\/wscore\/autopingsetup","title":"AutoPingSetup","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/shouldupgraderesult\/dontupgrade","title":"case dontUpgrade","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/shouldupgraderesult\/upgrade(_:_:)","title":"case upgrade(HTTPFields, Value)","type":"case"}],"path":"\/documentation\/hummingbirdwebsocket\/shouldupgraderesult","title":"ShouldUpgradeResult","type":"enum"},{"title":"Handler","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdatahandler","title":"WebSocketDataHandler","type":"typealias"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next()","title":"func next() async throws -> WebSocketDataFrame?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/nextmessage(maxsize:)","title":"func nextMessage(maxSize: Int) async throws -> WebSocketMessage?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next()-870vs","title":"func next() async throws(Self.Failure) -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator","title":"WebSocketInboundStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/messages(maxsize:)","title":"func messages(maxSize: Int) -> WebSocketInboundMessageStream","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/element","title":"WebSocketInboundStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:into:)-65k3a","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:into:)-8qozo","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:)-4e39y","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:)-96tu0","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:into:)-8od8r","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:into:)-9nhxm","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compactmap(_:)-854a5","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compactmap(_:)-wpjn","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-27v24","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-8olkv","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-mvh6","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-r32q","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-2jm2t","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-2k9on","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-370z2","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-5fj8q","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-7fxlp","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/map(_:)-5900d","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/map(_:)-vj9h","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:_:)-2zgwr","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:_:)-7tnon","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(into:_:)-3r0ml","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(into:_:)-4y3zo","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundstream","title":"WebSocketInboundStream","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-68lgw","title":"func callAsFunction(String) async throws","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-70t1d","title":"func callAsFunction(ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter","title":"WebSocketOutboundWriter.MessageWriter","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/close(_:reason:)","title":"func close(WebSocketErrorCode, reason: String?) async throws","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/withbinarymessagewriter(_:)","title":"func withBinaryMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/withtextmessagewriter(_:)","title":"func withTextMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/write(_:)","title":"func write(OutboundFrame) async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/custom(_:)","title":"case custom(WebSocketFrame)","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/pong","title":"case pong","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/text(_:)","title":"case text(String)","type":"case"}],"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe","title":"WebSocketOutboundWriter.OutboundFrame","type":"enum"}],"path":"\/documentation\/wscore\/websocketoutboundwriter","title":"WebSocketOutboundWriter","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/data","title":"var data: ByteBuffer","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/fin","title":"var fin: Bool","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.property","title":"var opcode: Opcode","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/binary","title":"case binary","type":"case"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/continuation","title":"case continuation","type":"case"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum","title":"WebSocketDataFrame.Opcode","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketdataframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketdataframe","title":"WebSocketDataFrame","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketcontext\/logger","title":"var logger: Logger","type":"property"}],"path":"\/documentation\/wscore\/websocketcontext","title":"WebSocketContext","type":"protocol"},{"title":"Messages","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/wscore\/websocketmessage\/text(_:)","title":"case text(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/wscore\/websocketmessage\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketmessage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketmessage","title":"WebSocketMessage","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next()-7jav4","title":"func next() async throws(Self.Failure) -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator","title":"WebSocketInboundMessageStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/element","title":"WebSocketInboundMessageStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:into:)-5w84o","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:into:)-iqig","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:)-1gm8s","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:)-gxum","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-35r09","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-9vnag","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compactmap(_:)-59im6","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compactmap(_:)-80gth","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-18hde","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-23k3a","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-6wte2","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-8btow","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-402es","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-45405","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-82gc0","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-9ilgv","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-h4k","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/map(_:)-3fjnx","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/map(_:)-9y6oy","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:_:)-5ykar","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:_:)-8cv4s","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(into:_:)-7z7qi","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(into:_:)-fxhb","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream","title":"WebSocketInboundMessageStream","type":"struct"},{"title":"Router","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext\/websocket","title":"var webSocket: WebSocketHandlerReference<Self>","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","title":"WebSocketRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/init(source:)","title":"init(source: Source)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/corecontext","title":"var coreContext: CoreRequestContextStorage","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/websocket","title":"let webSocket: WebSocketHandlerReference<`Self`>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/requestdecoder","title":"var requestDecoder: JSONDecoder","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/responseencoder","title":"var responseEncoder: JSONEncoder","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/requestcontext-implementations","title":"RequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","title":"BasicWebSocketRequestContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketroutercontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketroutercontext\/request","title":"let request: Request","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketroutercontext\/requestcontext","title":"let requestContext: Context","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketroutercontext","title":"WebSocketRouterContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websockethandlerreference\/init()","title":"init()","type":"init"}],"path":"\/documentation\/hummingbirdwebsocket\/websockethandlerreference","title":"WebSocketHandlerReference","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware\/init(shouldupgrade:onupgrade:)","title":"init(shouldUpgrade: (Request, Context) async throws -> RouterShouldUpgrade, onUpgrade: WebSocketDataHandler<WebSocketRouterContext<Context>>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware","title":"WebSocketUpgradeMiddleware","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/routershouldupgrade\/dontupgrade","title":"case dontUpgrade","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/routershouldupgrade\/upgrade(_:)","title":"case upgrade(HTTPFields)","type":"case"}],"path":"\/documentation\/hummingbirdwebsocket\/routershouldupgrade","title":"RouterShouldUpgrade","type":"enum"},{"title":"Extensions","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextension\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/wscore\/websocketextension\/reservedbits","title":"var reservedBits: WebSocketFrame.ReservedBits","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextension\/processframetosend(_:context:)","title":"func processFrameToSend(WebSocketFrame, context: WebSocketExtensionContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/wscore\/websocketextension\/processreceivedframe(_:context:)","title":"func processReceivedFrame(WebSocketFrame, context: WebSocketExtensionContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/wscore\/websocketextension\/shutdown()","title":"func shutdown() async","type":"method"}],"path":"\/documentation\/wscore\/websocketextension","title":"WebSocketExtension","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/clientextension(from:)","title":"func clientExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/clientrequestheader()","title":"func clientRequestHeader() -> String","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverextension(from:)","title":"func serverExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverreponseheader(to:)","title":"func serverReponseHeader(to: WebSocketExtensionHTTPParameters) -> String?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverresponseheader(to:)","title":"func serverResponseHeader(to: [WebSocketExtensionHTTPParameters]) -> String?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/name","title":"static var name: String","type":"property"}],"path":"\/documentation\/wscore\/websocketextensionbuilder","title":"WebSocketExtensionBuilder","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensioncontext\/logger","title":"let logger: Logger","type":"property"}],"path":"\/documentation\/wscore\/websocketextensioncontext","title":"WebSocketExtensionContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameters","title":"let parameters: [String : Parameter]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parseheaders(_:)","title":"static func parseHeaders(HTTPFields) -> [WebSocketExtensionHTTPParameters]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/null","title":"case null","type":"case"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/value(_:)","title":"case value(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/integer","title":"var integer: Int?","type":"property"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/optional","title":"var optional: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter","title":"WebSocketExtensionHTTPParameters.Parameter","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters","title":"WebSocketExtensionHTTPParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/init(_:)","title":"init(() -> any WebSocketExtensionBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/build","title":"let build: () -> any WebSocketExtensionBuilder","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/nonnegotiatedextension(_:)","title":"static func nonNegotiatedExtension(() -> some WebSocketExtension) -> WebSocketExtensionFactory","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(clientMaxWindow: Int?, clientNoContextTakeover: Bool, serverMaxWindow: Int?, serverNoContextTakeover: Bool, compressionLevel: Int?, memoryLevel: Int?, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(maxWindow: Int?, noContextTakeover: Bool, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"}],"path":"\/documentation\/wscore\/websocketextensionfactory","title":"WebSocketExtensionFactory","type":"struct"}],"icon":"logo.png","path":"\/documentation\/hummingbirdwebsocket","title":"HummingbirdWebSocket","type":"module"},{"children":[{"title":"Jobs","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobname\/init(_:parameters:)","title":"init(String, parameters: Parameters.Type)","type":"init"},{"path":"\/documentation\/jobs\/jobname\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobname\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/jobs\/jobname\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobs\/jobname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobname\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/jobs\/jobname\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobname\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/jobs\/jobname\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/jobname","title":"JobName","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobdefinition\/init(name:parameters:retrystrategy:timeout:execute:)","title":"init(name: JobName<Parameters>, parameters: Parameters.Type, retryStrategy: any JobRetryStrategy, timeout: Duration?, execute: (Parameters, JobExecutionContext) async throws -> Void)","type":"init"},{"path":"\/documentation\/jobs\/jobdefinition\/init(parameters:maxretrycount:execute:)","title":"init(parameters: Parameters.Type, maxRetryCount: Int, execute: (Parameters, JobExecutionContext) async throws -> Void)","type":"init"},{"path":"\/documentation\/jobs\/jobdefinition\/init(parameters:retrystrategy:timeout:execute:)","title":"init(parameters: Parameters.Type, retryStrategy: any JobRetryStrategy, timeout: Duration?, execute: (Parameters, JobExecutionContext) async throws -> Void)","type":"init"}],"path":"\/documentation\/jobs\/jobdefinition","title":"JobDefinition","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobparameters\/jobname","title":"static var jobName: String","type":"property"}],"path":"\/documentation\/jobs\/jobparameters","title":"JobParameters","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobexecutioncontext\/attempt","title":"let attempt: Int","type":"property"},{"path":"\/documentation\/jobs\/jobexecutioncontext\/jobid","title":"let jobID: String","type":"property"},{"path":"\/documentation\/jobs\/jobexecutioncontext\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/jobs\/jobexecutioncontext\/nextscheduledat","title":"let nextScheduledAt: Date?","type":"property"},{"path":"\/documentation\/jobs\/jobexecutioncontext\/queuedat","title":"let queuedAt: Date","type":"property"}],"path":"\/documentation\/jobs\/jobexecutioncontext","title":"JobExecutionContext","type":"struct"},{"title":"Queues","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueue\/init(_:logger:options:middleware:)","title":"init(Queue, logger: Logger, options: JobQueueOptions, middleware: () -> some JobMiddleware)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueue\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/jobs\/jobqueue\/options","title":"let options: JobQueueOptions","type":"property"},{"path":"\/documentation\/jobs\/jobqueue\/queue","title":"let queue: Queue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueue\/canceljob(jobid:)","title":"func cancelJob(jobID: Queue.JobID) async throws","type":"method"},{"path":"\/documentation\/jobs\/jobqueue\/pausejob(jobid:)","title":"func pauseJob(jobID: Queue.JobID) async throws","type":"method"},{"path":"\/documentation\/jobs\/jobqueue\/processor(options:)","title":"func processor(options: JobQueueProcessorOptions) -> any Service","type":"method"},{"path":"\/documentation\/jobs\/jobqueue\/push(jobrequest:options:)","title":"func push<Parameters>(jobRequest: JobRequest<Parameters>, options: Queue.JobOptions) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/jobs\/jobqueue\/registerjob(_:)","title":"func registerJob(JobDefinition<some Sendable & Codable>)","type":"method"},{"path":"\/documentation\/jobs\/jobqueue\/resumejob(jobid:)","title":"func resumeJob(jobID: Queue.JobID) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueue\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/jobs\/jobqueue\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueue\/push(_:)","title":"func push<Parameters>(Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/jobs\/jobqueue\/push(_:options:)","title":"func push<Parameters>(Parameters, options: Queue.JobOptions) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/jobs\/jobqueue\/push(_:parameters:)","title":"func push<Parameters>(JobName<Parameters>, parameters: Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/jobs\/jobqueue\/push(_:parameters:options:)","title":"func push<Parameters>(JobName<Parameters>, parameters: Parameters, options: Queue.JobOptions) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/jobs\/jobqueue\/registerjob(name:parameters:retrystrategy:timeout:execute:)","title":"func registerJob<Parameters>(name: JobName<Parameters>, parameters: Parameters.Type, retryStrategy: (any JobRetryStrategy)?, timeout: Duration?, execute: (Parameters, JobExecutionContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/jobs\/jobqueue\/registerjob(parameters:maxretrycount:execute:)","title":"func registerJob<Parameters>(parameters: Parameters.Type, maxRetryCount: Int, execute: (Parameters, JobExecutionContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/jobs\/jobqueue\/registerjob(parameters:retrystrategy:timeout:execute:)","title":"func registerJob<Parameters>(parameters: Parameters.Type, retryStrategy: (any JobRetryStrategy)?, timeout: Duration?, execute: (Parameters, JobExecutionContext) async throws -> Void)","type":"method"}],"path":"\/documentation\/jobs\/jobqueue\/jobqueueprotocol-implementations","title":"JobQueueProtocol Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/jobqueue","title":"JobQueue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueprocessor\/init(queue:logger:options:middleware:)","title":"init(queue: JobQueue<Queue>, logger: Logger, options: JobQueueProcessorOptions, middleware: () -> some JobMiddleware)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueprocessor\/run()","title":"func run() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueprocessor\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/jobs\/jobqueueprocessor\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/jobqueueprocessor","title":"JobQueueProcessor","type":"class"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/queue","title":"Queue","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/options","title":"var options: JobQueueOptions","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/processor(options:)","title":"func processor(options: JobQueueProcessorOptions) -> any Service","type":"method"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/push(_:)","title":"func push<Parameters>(Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/push(_:options:)","title":"func push<Parameters>(Parameters, options: Queue.JobOptions) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/push(_:parameters:)","title":"func push<Parameters>(JobName<Parameters>, parameters: Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/push(_:parameters:options:)","title":"func push<Parameters>(JobName<Parameters>, parameters: Parameters, options: Queue.JobOptions) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/push(jobrequest:options:)","title":"func push<Parameters>(jobRequest: JobRequest<Parameters>, options: Queue.JobOptions) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/registerjob(_:)","title":"func registerJob(JobDefinition<some Sendable & Codable>)","type":"method"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/registerjob(name:parameters:retrystrategy:timeout:execute:)","title":"func registerJob<Parameters>(name: JobName<Parameters>, parameters: Parameters.Type, retryStrategy: (any JobRetryStrategy)?, timeout: Duration?, execute: (Parameters, JobExecutionContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/registerjob(parameters:maxretrycount:execute:)","title":"func registerJob<Parameters>(parameters: Parameters.Type, maxRetryCount: Int, execute: (Parameters, JobExecutionContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/jobs\/jobqueueprotocol\/registerjob(parameters:retrystrategy:timeout:execute:)","title":"func registerJob<Parameters>(parameters: Parameters.Type, retryStrategy: (any JobRetryStrategy)?, timeout: Duration?, execute: (Parameters, JobExecutionContext) async throws -> Void)","type":"method"}],"path":"\/documentation\/jobs\/jobqueueprotocol","title":"JobQueueProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueoptions\/init(defaultretrystrategy:)","title":"init(defaultRetryStrategy: any JobRetryStrategy)","type":"init"}],"path":"\/documentation\/jobs\/jobqueueoptions","title":"JobQueueOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueprocessoroptions\/init(numworkers:gracefulshutdowntimeout:)","title":"init(numWorkers: Int, gracefulShutdownTimeout: Duration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueprocessoroptions\/gracefulshutdowntimeout","title":"var gracefulShutdownTimeout: Duration","type":"property"},{"path":"\/documentation\/jobs\/jobqueueprocessoroptions\/numworkers","title":"var numWorkers: Int","type":"property"}],"path":"\/documentation\/jobs\/jobqueueprocessoroptions","title":"JobQueueProcessorOptions","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueuedriver\/jobid","title":"JobID","type":"associatedtype"},{"path":"\/documentation\/jobs\/jobqueuedriver\/joboptions","title":"JobOptions","type":"associatedtype"},{"title":"Lifecycle","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/jobs\/jobqueuedriver\/waituntilready()-4nlyo","title":"func waitUntilReady() async throws","type":"method"}],"title":"JobQueueDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/jobs\/jobqueuedriver\/waituntilready()","title":"func waitUntilReady() async throws","type":"method"},{"path":"\/documentation\/jobs\/jobqueuedriver\/stop()","title":"func stop() async","type":"method"},{"path":"\/documentation\/jobs\/jobqueuedriver\/shutdowngracefully()","title":"func shutdownGracefully() async","type":"method"},{"title":"Jobs","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueuedriver\/registerjob(_:)","title":"func registerJob<Parameters>(JobDefinition<Parameters>)","type":"method"},{"path":"\/documentation\/jobs\/jobqueuedriver\/push(_:options:)","title":"func push<Parameters>(JobRequest<Parameters>, options: JobOptions) async throws -> JobID","type":"method"},{"path":"\/documentation\/jobs\/jobqueuedriver\/finished(jobid:)","title":"func finished(jobID: JobID) async throws","type":"method"},{"path":"\/documentation\/jobs\/jobqueuedriver\/failed(jobid:error:)","title":"func failed(jobID: JobID, error: any Error) async throws","type":"method"},{"path":"\/documentation\/jobs\/jobqueuedriver\/retry(_:jobrequest:options:)","title":"func retry<Parameters>(JobID, jobRequest: JobRequest<Parameters>, options: JobRetryOptions) async throws","type":"method"},{"title":"Implementations","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueuedriver\/memory","title":"static var memory: MemoryQueue","type":"property"},{"path":"\/documentation\/jobs\/jobqueuedriver\/valkey(_:configuration:logger:)","title":"static func valkey(ValkeyClient, configuration: ValkeyJobQueue.Configuration, logger: Logger) async throws -> Self","type":"method"},{"path":"\/documentation\/jobs\/jobqueuedriver\/postgres(client:migrations:configuration:logger:)","title":"static func postgres(client: PostgresClient, migrations: DatabaseMigrations, configuration: PostgresJobQueue.Configuration, logger: Logger) async -> Self","type":"method"}],"path":"\/documentation\/jobs\/jobqueuedriver","title":"JobQueueDriver","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/memoryqueue\/joboptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/jobs\/memoryqueue\/joboptions\/init(delayuntil:)","title":"init(delayUntil: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/memoryqueue\/joboptions\/delayuntil","title":"let delayUntil: Date","type":"property"}],"path":"\/documentation\/jobs\/memoryqueue\/joboptions","title":"MemoryQueue.JobOptions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/memoryqueue\/init(onfailedjob:)","title":"init(onFailedJob: (JobID, any Error) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/memoryqueue\/cancel(jobid:)","title":"func cancel(jobID: JobID) async throws","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/failed(jobid:error:)","title":"func failed(jobID: JobID, error: any Error) async throws","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/finished(jobid:)","title":"func finished(jobID: JobID) async throws","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/pause(jobid:)","title":"func pause(jobID: JobID) async throws","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/push(_:options:)","title":"func push<Parameters>(JobRequest<Parameters>, options: JobOptions) async throws -> JobID","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/registerjob(_:)","title":"func registerJob<Parameters>(JobDefinition<Parameters>)","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/resume(jobid:)","title":"func resume(jobID: JobID) async throws","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/retry(_:jobrequest:options:)","title":"func retry<Parameters>(JobID, jobRequest: JobRequest<Parameters>, options: JobRetryOptions) async throws","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/shutdowngracefully()","title":"func shutdownGracefully() async","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/stop()","title":"func stop() async","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/jobs\/memoryqueue\/element","title":"MemoryQueue.Element","type":"typealias"},{"path":"\/documentation\/jobs\/memoryqueue\/jobid","title":"MemoryQueue.JobID","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/memoryqueue\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/memoryqueue\/asynciterator\/next()-4a128","title":"func next() async throws(Self.Failure) -> Self.Element?","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/jobs\/memoryqueue\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/memoryqueue\/asynciterator","title":"MemoryQueue.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/memoryqueue\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunked(by:into:)-866vo","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunked(by:into:)-89n29","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunks(ofcount:or:)-45j2c","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunks(ofcount:or:)-5yvj5","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunks(ofcount:or:into:)-3scvw","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/chunks(ofcount:or:into:)-9a25d","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/compactmap(_:)-8pw20","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/compactmap(_:)-9iizt","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/flatmap(_:)-1oaab","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/flatmap(_:)-1te6s","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/flatmap(_:)-4k3a8","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/flatmap(_:)-96viz","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/interspersed(every:with:)-4c5se","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/interspersed(every:with:)-7cja7","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/interspersed(every:with:)-7f6lh","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/interspersed(every:with:)-8l7ab","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/interspersed(every:with:)-ej54","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/map(_:)-35whx","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/map(_:)-44jdq","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/reductions(_:_:)-67d7r","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/reductions(_:_:)-75azu","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/reductions(into:_:)-2u9qd","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/reductions(into:_:)-4vgbq","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/jobs\/memoryqueue\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/memoryqueue\/acquirelock(key:id:expiresin:)","title":"func acquireLock(key: String, id: ByteBuffer, expiresIn: TimeInterval) async -> Bool","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/getmetadata(_:)","title":"func getMetadata(String) async -> ByteBuffer?","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/releaselock(key:id:)","title":"func releaseLock(key: String, id: ByteBuffer) async","type":"method"},{"path":"\/documentation\/jobs\/memoryqueue\/setmetadata(key:value:)","title":"func setMetadata(key: String, value: ByteBuffer) async","type":"method"}],"path":"\/documentation\/jobs\/memoryqueue\/jobmetadatadriver-implementations","title":"JobMetadataDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/memoryqueue\/waituntilready()","title":"func waitUntilReady() async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/memoryqueue\/memory","title":"static var memory: MemoryQueue","type":"property"}],"path":"\/documentation\/jobs\/memoryqueue\/jobqueuedriver-implementations","title":"JobQueueDriver Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/memoryqueue","title":"MemoryQueue","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/joboptionsprotocol\/init()","title":"init()","type":"init"}],"path":"\/documentation\/jobs\/joboptionsprotocol","title":"JobOptionsProtocol","type":"protocol"},{"title":"Optional features","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/jobs\/cancellablejobqueue\/jobid","title":"JobID","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/cancellablejobqueue\/cancel(jobid:)","title":"func cancel(jobID: JobID) async throws","type":"method"}],"path":"\/documentation\/jobs\/cancellablejobqueue","title":"CancellableJobQueue","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/jobs\/resumablejobqueue\/jobid","title":"JobID","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/resumablejobqueue\/pause(jobid:)","title":"func pause(jobID: JobID) async throws","type":"method"},{"path":"\/documentation\/jobs\/resumablejobqueue\/resume(jobid:)","title":"func resume(jobID: JobID) async throws","type":"method"}],"path":"\/documentation\/jobs\/resumablejobqueue","title":"ResumableJobQueue","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobmetadatadriver\/acquirelock(key:id:expiresin:)","title":"func acquireLock(key: String, id: ByteBuffer, expiresIn: TimeInterval) async throws -> Bool","type":"method"},{"path":"\/documentation\/jobs\/jobmetadatadriver\/getmetadata(_:)","title":"func getMetadata(String) async throws -> ByteBuffer?","type":"method"},{"path":"\/documentation\/jobs\/jobmetadatadriver\/releaselock(key:id:)","title":"func releaseLock(key: String, id: ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/jobs\/jobmetadatadriver\/setmetadata(key:value:)","title":"func setMetadata(key: String, value: ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/jobs\/jobmetadatadriver","title":"JobMetadataDriver","type":"protocol"},{"title":"Scheduler","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/element\/init(_:parameters:schedule:accuracy:)","title":"init<Parameters>(JobName<Parameters>, parameters: Parameters, schedule: Schedule, accuracy: ScheduleAccuracy)","type":"init"},{"path":"\/documentation\/jobs\/jobschedule\/element\/init(job:schedule:accuracy:)","title":"init<Parameters>(job: Parameters, schedule: Schedule, accuracy: ScheduleAccuracy)","type":"init"}],"path":"\/documentation\/jobs\/jobschedule\/element","title":"JobSchedule.Element","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/scheduleaccuracy\/all","title":"static var all: `Self`","type":"property"},{"path":"\/documentation\/jobs\/jobschedule\/scheduleaccuracy\/latest","title":"static var latest: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/scheduleaccuracy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobs\/jobschedule\/scheduleaccuracy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/jobschedule\/scheduleaccuracy","title":"JobSchedule.ScheduleAccuracy","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/scheduler\/exclusivelock\/ignore","title":"static var ignore: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/scheduler\/exclusivelock\/acquire(every:for:)","title":"static func acquire(every: Duration, for: Duration) -> JobSchedule.Scheduler<Driver>.ExclusiveLock","type":"method"}],"path":"\/documentation\/jobs\/jobschedule\/scheduler\/exclusivelock","title":"JobSchedule.Scheduler.ExclusiveLock","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/scheduler\/options\/init(joboptions:schedulerlock:)","title":"init(jobOptions: Driver.JobOptions, schedulerLock: ExclusiveLock)","type":"init"}],"path":"\/documentation\/jobs\/jobschedule\/scheduler\/options","title":"JobSchedule.Scheduler.Options","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/scheduler\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/scheduler\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/scheduler\/runscheduler(_:)","title":"func runScheduler(ByteBuffer) async","type":"method"}],"path":"\/documentation\/jobs\/jobschedule\/scheduler","title":"JobSchedule.Scheduler","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/init()","title":"init()","type":"init"},{"path":"\/documentation\/jobs\/jobschedule\/init(_:)","title":"init([JobSchedule.Element])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/addjob(_:parameters:schedule:accuracy:)","title":"func addJob<Parameters>(JobName<Parameters>, parameters: Parameters, schedule: Schedule, accuracy: ScheduleAccuracy)","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/addjob(_:schedule:accuracy:)","title":"func addJob(some JobParameters, schedule: Schedule, accuracy: ScheduleAccuracy)","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/scheduler(on:named:options:)","title":"func scheduler<Queue>(on: JobQueue<Queue>, named: String, options: Scheduler<Queue>.Options) async -> Scheduler<Queue>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/jobs\/jobschedule\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/jobs\/jobschedule\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/jobs\/jobschedule\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/jobs\/jobschedule\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/jobs\/jobschedule\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/jobs\/jobschedule\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/indices(where:)","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/map(_:)-2ovet","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/index","title":"JobSchedule.Index","type":"typealias"}],"path":"\/documentation\/jobs\/jobschedule\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/movesubranges(_:to:)","title":"func moveSubranges(RangeSet<Self.Index>, to: Self.Index) -> Range<Self.Index>","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/partition(by:)","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/subscript(_:)","title":"subscript(Index) -> Element","type":"subscript"}],"path":"\/documentation\/jobs\/jobschedule\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/async","title":"var async: AsyncSyncSequence<Self>","type":"property"},{"path":"\/documentation\/jobs\/jobschedule\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobschedule\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/filter(_:)-26oo7","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/filter(_:)-3w2kq","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/flatmap(_:)-28lgk","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"deprecated":true,"path":"\/documentation\/jobs\/jobschedule\/flatmap(_:)-7wua5","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/map(_:)-2xcst","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/sorted(using:)-417zj","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/sorted(using:)-9u1w","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/jobs\/jobschedule\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/jobs\/jobschedule\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/jobschedule","title":"JobSchedule","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/scheduleerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/jobs\/schedule\/scheduleerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/schedule\/scheduleerror","title":"Schedule.ScheduleError","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/nextdate(after:)","title":"func nextDate(after: Date) -> Date?","type":"method"},{"path":"\/documentation\/jobs\/schedule\/setinitialnextdate(after:)","title":"func setInitialNextDate(after: Date) -> Date?","type":"method"},{"path":"\/documentation\/jobs\/schedule\/setinitialnextdatejustbefore(date:)","title":"func setInitialNextDateJustBefore(date: Date)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/crontab(_:timezone:)","title":"static func crontab(String, timeZone: TimeZone) throws -> Schedule","type":"method"},{"path":"\/documentation\/jobs\/schedule\/daily(hour:minute:timezone:)","title":"static func daily(hour: Int, minute: Int, timeZone: TimeZone) -> Schedule","type":"method"},{"path":"\/documentation\/jobs\/schedule\/everyminute(second:)","title":"static func everyMinute(second: Int) -> Schedule","type":"method"},{"path":"\/documentation\/jobs\/schedule\/hourly(minute:)","title":"static func hourly(minute: Int) -> Schedule","type":"method"},{"path":"\/documentation\/jobs\/schedule\/monthly(date:hour:minute:timezone:)","title":"static func monthly(date: Int, hour: Int, minute: Int, timeZone: TimeZone) -> Schedule","type":"method"},{"path":"\/documentation\/jobs\/schedule\/ondates(_:hour:minute:timezone:)","title":"static func onDates(some Collection<Int>, hour: Int, minute: Int, timeZone: TimeZone) -> Schedule","type":"method"},{"path":"\/documentation\/jobs\/schedule\/ondays(_:hour:minute:timezone:)","title":"static func onDays(some Collection<Day>, hour: Int, minute: Int, timeZone: TimeZone) -> Schedule","type":"method"},{"path":"\/documentation\/jobs\/schedule\/onhours(_:minute:timezone:)","title":"static func onHours(some Collection<Int>, minute: Int, timeZone: TimeZone) -> Schedule","type":"method"},{"path":"\/documentation\/jobs\/schedule\/onminutes(_:second:)","title":"static func onMinutes(some Collection<Int>, second: Int) -> Schedule","type":"method"},{"path":"\/documentation\/jobs\/schedule\/onmonths(_:date:hour:minute:timezone:)","title":"static func onMonths(some Collection<Month>, date: Int, hour: Int, minute: Int, timeZone: TimeZone) -> Schedule","type":"method"},{"path":"\/documentation\/jobs\/schedule\/weekly(day:hour:minute:timezone:)","title":"static func weekly(day: Day, hour: Int, minute: Int, timeZone: TimeZone) -> Schedule","type":"method"},{"path":"\/documentation\/jobs\/schedule\/yearly(month:date:hour:minute:timezone:)","title":"static func yearly(month: Month, date: Int, hour: Int, minute: Int, timeZone: TimeZone) -> Schedule","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/day\/_(_:_:)","title":"static func < (Schedule.Day, Schedule.Day) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/day\/friday","title":"case friday","type":"case"},{"path":"\/documentation\/jobs\/schedule\/day\/monday","title":"case monday","type":"case"},{"path":"\/documentation\/jobs\/schedule\/day\/saturday","title":"case saturday","type":"case"},{"path":"\/documentation\/jobs\/schedule\/day\/sunday","title":"case sunday","type":"case"},{"path":"\/documentation\/jobs\/schedule\/day\/thursday","title":"case thursday","type":"case"},{"path":"\/documentation\/jobs\/schedule\/day\/tuesday","title":"case tuesday","type":"case"},{"path":"\/documentation\/jobs\/schedule\/day\/wednesday","title":"case wednesday","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/day\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/day\/'...(_:)-4n4s0","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/jobs\/schedule\/day\/'...(_:)-5bil8","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/jobs\/schedule\/day\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/jobs\/schedule\/day\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/jobs\/schedule\/day\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/jobs\/schedule\/day\/_(_:_:)-9g9se","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/jobs\/schedule\/day\/_=(_:_:)-2cj6g","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/jobs\/schedule\/day\/_=(_:_:)-tjmj","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobs\/schedule\/day\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/day\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobs\/schedule\/day\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/day\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/day\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/jobs\/schedule\/day\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/schedule\/day","title":"Schedule.Day","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/month\/_(_:_:)","title":"static func < (Schedule.Month, Schedule.Month) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/month\/april","title":"case april","type":"case"},{"path":"\/documentation\/jobs\/schedule\/month\/august","title":"case august","type":"case"},{"path":"\/documentation\/jobs\/schedule\/month\/december","title":"case december","type":"case"},{"path":"\/documentation\/jobs\/schedule\/month\/february","title":"case february","type":"case"},{"path":"\/documentation\/jobs\/schedule\/month\/january","title":"case january","type":"case"},{"path":"\/documentation\/jobs\/schedule\/month\/july","title":"case july","type":"case"},{"path":"\/documentation\/jobs\/schedule\/month\/june","title":"case june","type":"case"},{"path":"\/documentation\/jobs\/schedule\/month\/march","title":"case march","type":"case"},{"path":"\/documentation\/jobs\/schedule\/month\/may","title":"case may","type":"case"},{"path":"\/documentation\/jobs\/schedule\/month\/november","title":"case november","type":"case"},{"path":"\/documentation\/jobs\/schedule\/month\/october","title":"case october","type":"case"},{"path":"\/documentation\/jobs\/schedule\/month\/september","title":"case september","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/month\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/month\/'...(_:)-7jz1z","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/jobs\/schedule\/month\/'...(_:)-8rr6v","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/jobs\/schedule\/month\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/jobs\/schedule\/month\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/jobs\/schedule\/month\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/jobs\/schedule\/month\/_(_:_:)-9fvzf","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/jobs\/schedule\/month\/_=(_:_:)-3pi9b","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/jobs\/schedule\/month\/_=(_:_:)-4ywiz","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobs\/schedule\/month\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/month\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobs\/schedule\/month\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/month\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/month\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/jobs\/schedule\/month\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/schedule\/month","title":"Schedule.Month","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobs\/schedule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobs\/schedule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/schedule","title":"Schedule","type":"struct"},{"title":"Middleware","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/jobs\/jobmiddleware\/handlejob(job:context:next:)-6igvb","title":"func handleJob(job: any JobInstanceProtocol, context: JobExecutionContext, next: (any JobInstanceProtocol, JobExecutionContext) async throws -> Void) async throws","type":"method"}],"title":"JobMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/jobs\/jobmiddleware\/handlejob(job:context:next:)","title":"func handleJob(job: any JobInstanceProtocol, context: JobExecutionContext, next: (any JobInstanceProtocol, JobExecutionContext) async throws -> Void) async throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/jobs\/jobmiddleware\/oncompletedjob(job:result:context:)-8qu1y","title":"func onCompletedJob(job: any JobInstanceProtocol, result: Result<Void, any Error>, context: JobCompletedQueueContext) async","type":"method"}],"title":"JobMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/jobs\/jobmiddleware\/oncompletedjob(job:result:context:)","title":"func onCompletedJob(job: any JobInstanceProtocol, result: Result<Void, any Error>, context: JobCompletedQueueContext) async","type":"method"},{"children":[{"children":[{"path":"\/documentation\/jobs\/jobmiddleware\/onpopjob(result:context:)-53zyb","title":"func onPopJob(result: Result<any JobInstanceProtocol, JobQueueError>, context: JobPopQueueContext) async","type":"method"}],"title":"JobMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/jobs\/jobmiddleware\/onpopjob(result:context:)","title":"func onPopJob(result: Result<any JobInstanceProtocol, JobQueueError>, context: JobPopQueueContext) async","type":"method"},{"children":[{"children":[{"path":"\/documentation\/jobs\/jobmiddleware\/onpushjob(name:parameters:context:)-8dut8","title":"func onPushJob<Parameters>(name: String, parameters: Parameters, context: JobPushQueueContext) async","type":"method"}],"title":"JobMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/jobs\/jobmiddleware\/onpushjob(name:parameters:context:)","title":"func onPushJob<Parameters>(name: String, parameters: Parameters, context: JobPushQueueContext) async","type":"method"}],"path":"\/documentation\/jobs\/jobmiddleware","title":"JobMiddleware","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/metricsjobmiddleware\/init(queuename:)","title":"init(queueName: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/metricsjobmiddleware\/handlejob(job:context:next:)","title":"func handleJob(job: any JobInstanceProtocol, context: JobExecutionContext, next: (any JobInstanceProtocol, JobExecutionContext) async throws -> Void) async throws","type":"method"},{"path":"\/documentation\/jobs\/metricsjobmiddleware\/oncompletedjob(job:result:context:)","title":"func onCompletedJob(job: any JobInstanceProtocol, result: Result<Void, any Error>, context: JobCompletedQueueContext) async","type":"method"},{"path":"\/documentation\/jobs\/metricsjobmiddleware\/onpopjob(result:context:)","title":"func onPopJob(result: Result<any JobInstanceProtocol, JobQueueError>, context: JobPopQueueContext) async","type":"method"},{"path":"\/documentation\/jobs\/metricsjobmiddleware\/onpushjob(name:parameters:context:)","title":"func onPushJob<Parameters>(name: String, parameters: Parameters, context: JobPushQueueContext) async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/metricsjobmiddleware\/onpushjob(name:parameters:context:)-mpve","title":"func onPushJob<Parameters>(name: String, parameters: Parameters, context: JobPushQueueContext) async","type":"method"}],"path":"\/documentation\/jobs\/metricsjobmiddleware\/jobmiddleware-implementations","title":"JobMiddleware Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/metricsjobmiddleware","title":"MetricsJobMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/tracingjobmiddleware\/init(queuename:)","title":"init(queueName: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/tracingjobmiddleware\/handlejob(job:context:next:)","title":"func handleJob(job: any JobInstanceProtocol, context: JobExecutionContext, next: (any JobInstanceProtocol, JobExecutionContext) async throws -> Void) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/tracingjobmiddleware\/oncompletedjob(job:result:context:)","title":"func onCompletedJob(job: any JobInstanceProtocol, result: Result<Void, any Error>, context: JobCompletedQueueContext) async","type":"method"},{"path":"\/documentation\/jobs\/tracingjobmiddleware\/onpopjob(result:context:)","title":"func onPopJob(result: Result<any JobInstanceProtocol, JobQueueError>, context: JobPopQueueContext) async","type":"method"},{"path":"\/documentation\/jobs\/tracingjobmiddleware\/onpushjob(name:parameters:context:)","title":"func onPushJob<Parameters>(name: String, parameters: Parameters, context: JobPushQueueContext) async","type":"method"}],"path":"\/documentation\/jobs\/tracingjobmiddleware\/jobmiddleware-implementations","title":"JobMiddleware Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/tracingjobmiddleware","title":"TracingJobMiddleware","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobmiddlewarebuilder\/buildblock(_:)","title":"static func buildBlock<Middleware>(Middleware) -> Middleware","type":"method"},{"path":"\/documentation\/jobs\/jobmiddlewarebuilder\/buildeither(first:)","title":"static func buildEither<Middleware>(first: Middleware) -> Middleware","type":"method"},{"path":"\/documentation\/jobs\/jobmiddlewarebuilder\/buildeither(second:)","title":"static func buildEither<Middleware>(second: Middleware) -> Middleware","type":"method"},{"path":"\/documentation\/jobs\/jobmiddlewarebuilder\/buildoptional(_:)","title":"static func buildOptional<Middleware>(Middleware?) -> some JobMiddleware","type":"method"},{"path":"\/documentation\/jobs\/jobmiddlewarebuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<Middleware1, Middleware2>(accumulated: Middleware1, next: Middleware2) -> some JobMiddleware","type":"method"},{"path":"\/documentation\/jobs\/jobmiddlewarebuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock<Middleware>(first: Middleware) -> Middleware","type":"method"}],"path":"\/documentation\/jobs\/jobmiddlewarebuilder","title":"JobMiddlewareBuilder","type":"enum"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobpushqueuecontext\/attempt","title":"let attempt: Int","type":"property"},{"path":"\/documentation\/jobs\/jobpushqueuecontext\/jobid","title":"let jobID: String","type":"property"}],"path":"\/documentation\/jobs\/jobpushqueuecontext","title":"JobPushQueueContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobpopqueuecontext\/jobid","title":"let jobID: String","type":"property"}],"path":"\/documentation\/jobs\/jobpopqueuecontext","title":"JobPopQueueContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobcompletedqueuecontext\/jobid","title":"let jobID: String","type":"property"}],"path":"\/documentation\/jobs\/jobcompletedqueuecontext","title":"JobCompletedQueueContext","type":"struct"},{"title":"Error","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueerror\/errorcode\/description","title":"var description: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueerror\/errorcode\/decodejobfailed","title":"static var decodeJobFailed: `Self`","type":"property"},{"path":"\/documentation\/jobs\/jobqueueerror\/errorcode\/dequeueerror","title":"static var dequeueError: `Self`","type":"property"},{"path":"\/documentation\/jobs\/jobqueueerror\/errorcode\/jobtimedout","title":"static var jobTimedOut: `Self`","type":"property"},{"path":"\/documentation\/jobs\/jobqueueerror\/errorcode\/unrecognisedjobid","title":"static var unrecognisedJobId: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueerror\/errorcode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobs\/jobqueueerror\/errorcode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/jobqueueerror\/errorcode","title":"JobQueueError.ErrorCode","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueerror\/init(code:jobname:details:)","title":"init(code: ErrorCode, jobName: String?, details: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueerror\/code","title":"let code: ErrorCode","type":"property"},{"path":"\/documentation\/jobs\/jobqueueerror\/details","title":"let details: String?","type":"property"},{"path":"\/documentation\/jobs\/jobqueueerror\/jobname","title":"let jobName: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobs\/jobqueueerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/jobs\/jobqueueerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/jobqueueerror","title":"JobQueueError","type":"struct"},{"title":"JobQueue Drivers","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/anydecodablejob\/init(from:configuration:)","title":"init(from: Decoder, configuration: DecodingConfiguration) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/anydecodablejob\/job","title":"let job: any JobInstanceProtocol","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/jobs\/anydecodablejob\/decodingconfiguration","title":"AnyDecodableJob.DecodingConfiguration","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/anydecodablejob\/psqlformat","title":"static var psqlFormat: PostgresFormat","type":"property"},{"path":"\/documentation\/jobs\/anydecodablejob\/psqltype","title":"static var psqlType: PostgresDataType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/anydecodablejob\/init(from:type:format:context:)","title":"init<JSONDecoder>(from: inout ByteBuffer, type: PostgresDataType, format: PostgresFormat, context: PostgresDecodingContext<JSONDecoder>) throws","type":"init"},{"path":"\/documentation\/jobs\/anydecodablejob\/init(from:type:format:context:)-2t1c1","title":"init<JSONDecoder>(from: inout ByteBuffer, type: PostgresDataType, format: PostgresFormat, context: PostgresDecodingContext<JSONDecoder>) throws","type":"init"}],"path":"\/documentation\/jobs\/anydecodablejob\/postgresdecodable-implementations","title":"PostgresDecodable Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/anydecodablejob","title":"AnyDecodableJob","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/parameters-swift.associatedtype","title":"Parameters","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/attempt","title":"var attempt: Int","type":"property"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/nextscheduledat","title":"var nextScheduledAt: Date?","type":"property"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/parameters-swift.property","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/queuedat","title":"var queuedAt: Date","type":"property"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/retrystrategy","title":"var retryStrategy: any JobRetryStrategy","type":"property"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/timeout","title":"var timeout: Duration?","type":"property"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/tracecontext","title":"var traceContext: [String : String]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/execute(context:)","title":"func execute(context: JobExecutionContext) async throws","type":"method"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/servicecontext()","title":"func serviceContext() -> ServiceContext?","type":"method"},{"path":"\/documentation\/jobs\/jobinstanceprotocol\/shouldretry(error:)","title":"func shouldRetry(error: Error) -> Bool","type":"method"}],"path":"\/documentation\/jobs\/jobinstanceprotocol","title":"JobInstanceProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobinstancedata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/jobs\/jobinstancedata","title":"JobInstanceData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueresult\/init(id:result:)","title":"init(id: JobID, result: Result<any JobInstanceProtocol, JobQueueError>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobqueueresult\/id","title":"let id: JobID","type":"property"},{"path":"\/documentation\/jobs\/jobqueueresult\/result","title":"let result: Result<any JobInstanceProtocol, JobQueueError>","type":"property"}],"path":"\/documentation\/jobs\/jobqueueresult","title":"JobQueueResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobregistry\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobregistry\/decode(_:)","title":"func decode(ByteBuffer) throws -> any JobInstanceProtocol","type":"method"},{"path":"\/documentation\/jobs\/jobregistry\/encode(jobrequest:)","title":"func encode<Parameters>(jobRequest: JobRequest<Parameters>) throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/jobs\/jobregistry\/registerjob(_:)","title":"func registerJob<Parameters>(JobDefinition<Parameters>)","type":"method"}],"path":"\/documentation\/jobs\/jobregistry","title":"JobRegistry","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobrequest\/data","title":"let data: JobInstanceData<Parameters>","type":"property"},{"path":"\/documentation\/jobs\/jobrequest\/name","title":"let name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobrequest\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/jobs\/jobrequest\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobrequest\/psqlformat","title":"static var psqlFormat: PostgresFormat","type":"property"},{"path":"\/documentation\/jobs\/jobrequest\/psqltype","title":"static var psqlType: PostgresDataType","type":"property"}],"path":"\/documentation\/jobs\/jobrequest\/postgresencodable-implementations","title":"PostgresEncodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobrequest\/psqlformat-swift.property","title":"var psqlFormat: PostgresFormat","type":"property"},{"path":"\/documentation\/jobs\/jobrequest\/psqltype-swift.property","title":"var psqlType: PostgresDataType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobrequest\/encode(into:context:)","title":"func encode<JSONEncoder>(into: inout ByteBuffer, context: PostgresEncodingContext<JSONEncoder>) throws","type":"method"},{"path":"\/documentation\/jobs\/jobrequest\/encode(into:context:)-11l8s","title":"func encode<JSONEncoder>(into: inout ByteBuffer, context: PostgresEncodingContext<JSONEncoder>) throws","type":"method"}],"path":"\/documentation\/jobs\/jobrequest\/postgresthrowingdynamictypeencodable-implementations","title":"PostgresThrowingDynamicTypeEncodable Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/jobrequest","title":"JobRequest","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobretryoptions\/delayuntil","title":"let delayUntil: Date","type":"property"}],"path":"\/documentation\/jobs\/jobretryoptions","title":"JobRetryOptions","type":"struct"},{"title":"Retry","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobretrystrategy\/calculatebackoff(attempt:)","title":"func calculateBackoff(attempt: Int) -> Duration","type":"method"},{"path":"\/documentation\/jobs\/jobretrystrategy\/shouldretry(attempt:error:)","title":"func shouldRetry(attempt: Int, error: Error) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobretrystrategy\/dontretry","title":"static var dontRetry: Self","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/jobretrystrategy\/exponentialjitter(maxattempts:maxbackoff:minjitter:maxjitter:)","title":"static func exponentialJitter(maxAttempts: Int, maxBackoff: Duration, minJitter: Double, maxJitter: Double) -> Self","type":"method"}],"path":"\/documentation\/jobs\/jobretrystrategy","title":"JobRetryStrategy","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobs\/exponentialjitterjobretrystrategy\/init(maxattempts:maxbackoff:minjitter:maxjitter:)","title":"init(maxAttempts: Int, maxBackoff: Duration, minJitter: Double, maxJitter: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/exponentialjitterjobretrystrategy\/maxattempts","title":"var maxAttempts: Int","type":"property"},{"path":"\/documentation\/jobs\/exponentialjitterjobretrystrategy\/maxbackoff","title":"var maxBackoff: Duration","type":"property"},{"path":"\/documentation\/jobs\/exponentialjitterjobretrystrategy\/maxjitter","title":"var maxJitter: Double","type":"property"},{"path":"\/documentation\/jobs\/exponentialjitterjobretrystrategy\/minjitter","title":"var minJitter: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/exponentialjitterjobretrystrategy\/calculatebackoff(attempt:)","title":"func calculateBackoff(attempt: Int) -> Duration","type":"method"},{"path":"\/documentation\/jobs\/exponentialjitterjobretrystrategy\/shouldretry(attempt:error:)","title":"func shouldRetry(attempt: Int, error: any Error) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/exponentialjitterjobretrystrategy\/exponentialjitter(maxattempts:maxbackoff:minjitter:maxjitter:)","title":"static func exponentialJitter(maxAttempts: Int, maxBackoff: Duration, minJitter: Double, maxJitter: Double) -> Self","type":"method"}],"path":"\/documentation\/jobs\/exponentialjitterjobretrystrategy\/jobretrystrategy-implementations","title":"JobRetryStrategy Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/exponentialjitterjobretrystrategy","title":"ExponentialJitterJobRetryStrategy","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobs\/noretryjobretrystrategy\/calculatebackoff(attempt:)","title":"func calculateBackoff(attempt: Int) -> Duration","type":"method"},{"path":"\/documentation\/jobs\/noretryjobretrystrategy\/shouldretry(attempt:error:)","title":"func shouldRetry(attempt: Int, error: Error) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobs\/noretryjobretrystrategy\/dontretry","title":"static var dontRetry: Self","type":"property"}],"path":"\/documentation\/jobs\/noretryjobretrystrategy\/jobretrystrategy-implementations","title":"JobRetryStrategy Implementations","type":"symbol"}],"path":"\/documentation\/jobs\/noretryjobretrystrategy","title":"NoRetryJobRetryStrategy","type":"struct"}],"icon":"logo.png","path":"\/documentation\/jobs","title":"Jobs","type":"module"},{"children":[{"title":"Template Library","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelibrary\/parsererror\/context","title":"let context: MustacheParserContext","type":"property"},{"path":"\/documentation\/mustache\/mustachelibrary\/parsererror\/error","title":"let error: Error","type":"property"},{"path":"\/documentation\/mustache\/mustachelibrary\/parsererror\/filename","title":"let filename: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelibrary\/parsererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mustache\/mustachelibrary\/parsererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mustache\/mustachelibrary\/parsererror","title":"MustacheLibrary.ParserError","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelibrary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mustache\/mustachelibrary\/init(directory:withextension:)","title":"init(directory: String, withExtension: String) async throws","type":"init"},{"path":"\/documentation\/mustache\/mustachelibrary\/init(templates:)","title":"init(templates: [String : MustacheTemplate])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelibrary\/gettemplate(named:)","title":"func getTemplate(named: String) -> MustacheTemplate?","type":"method"},{"path":"\/documentation\/mustache\/mustachelibrary\/register(_:named:)-3g2vh","title":"func register(MustacheTemplate, named: String)","type":"method"},{"path":"\/documentation\/mustache\/mustachelibrary\/register(_:named:)-5yzy0","title":"func register(String, named: String) throws","type":"method"},{"path":"\/documentation\/mustache\/mustachelibrary\/render(_:withtemplate:)","title":"func render(Any, withTemplate: String) -> String?","type":"method"},{"path":"\/documentation\/mustache\/mustachelibrary\/render(_:withtemplate:reload:)","title":"func render(Any, withTemplate: String, reload: Bool) -> String?","type":"method"}],"path":"\/documentation\/mustache\/mustachelibrary","title":"MustacheLibrary","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/parsererror\/context","title":"let context: MustacheParserContext","type":"property"},{"path":"\/documentation\/mustache\/mustachetemplate\/parsererror\/error","title":"let error: Swift.Error","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/parsererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mustache\/mustachetemplate\/parsererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mustache\/mustachetemplate\/parsererror","title":"MustacheTemplate.ParserError","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/init(string:)","title":"init(string: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/render(_:library:)","title":"func render(Any, library: MustacheLibrary?) -> String","type":"method"},{"path":"\/documentation\/mustache\/mustachetemplate\/render(_:library:reload:)","title":"func render(Any, library: MustacheLibrary?, reload: Bool) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/expectedsectionend","title":"case expectedSectionEnd","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/illegaltokeninsideinheritsection","title":"case illegalTokenInsideInheritSection","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/invalidconfigvariablesyntax","title":"case invalidConfigVariableSyntax","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/invalidsetdelimiter","title":"case invalidSetDelimiter","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/sectionclosenameincorrect","title":"case sectionCloseNameIncorrect","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/textinsideinheritsection","title":"case textInsideInheritSection","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/transformappliedtoinheritancesection","title":"case transformAppliedToInheritanceSection","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/unfinishedname","title":"case unfinishedName","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/unrecognisedconfigvariable","title":"case unrecognisedConfigVariable","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mustache\/mustachetemplate\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mustache\/mustachetemplate\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mustache\/mustachetemplate\/error","title":"MustacheTemplate.Error","type":"enum"}],"path":"\/documentation\/mustache\/mustachetemplate","title":"MustacheTemplate","type":"struct"},{"title":"Rendering","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachecustomrenderable\/isnull","title":"var isNull: Bool","type":"property"},{"path":"\/documentation\/mustache\/mustachecustomrenderable\/rendertext","title":"var renderText: String","type":"property"}],"path":"\/documentation\/mustache\/mustachecustomrenderable","title":"MustacheCustomRenderable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustacheparent\/child(named:)","title":"func child(named: String) -> Any?","type":"method"}],"path":"\/documentation\/mustache\/mustacheparent","title":"MustacheParent","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetransformable\/transform(_:)","title":"func transform(String) -> Any?","type":"method"}],"path":"\/documentation\/mustache\/mustachetransformable","title":"MustacheTransformable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelambda\/init(_:)-20tuc","title":"init(() -> Any?)","type":"init"},{"path":"\/documentation\/mustache\/mustachelambda\/init(_:)-4ksrf","title":"init(Callback)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelambda\/callback","title":"MustacheLambda.Callback","type":"typealias"}],"path":"\/documentation\/mustache\/mustachelambda","title":"MustacheLambda","type":"struct"},{"title":"Content Types","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachecontenttype\/escapetext(_:)","title":"func escapeText(String) -> String","type":"method"}],"path":"\/documentation\/mustache\/mustachecontenttype","title":"MustacheContentType","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachecontenttypes\/register(_:named:)","title":"static func register(MustacheContentType, named: String)","type":"method"}],"path":"\/documentation\/mustache\/mustachecontenttypes","title":"MustacheContentTypes","type":"enum"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachesequence","title":"MustacheSequence","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustacheparsercontext\/columnnumber","title":"let columnNumber: Int","type":"property"},{"path":"\/documentation\/mustache\/mustacheparsercontext\/line","title":"let line: String","type":"property"},{"path":"\/documentation\/mustache\/mustacheparsercontext\/linenumber","title":"let lineNumber: Int","type":"property"}],"path":"\/documentation\/mustache\/mustacheparsercontext","title":"MustacheParserContext","type":"struct"}],"icon":"logo.png","path":"\/documentation\/mustache","title":"Mustache","type":"module"},{"children":[{"title":"Articles","type":"groupMarker"},{"icon":"logo.png","path":"\/documentation\/hummingbird\/migrationsguide","title":"Postgres Migrations","type":"article"},{"title":"Migrations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/ignoreunknownmigrations","title":"static var ignoreUnknownMigrations: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/init(_:)-2oqle","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/init(_:)-8ijnk","title":"init<Source>(Source) async rethrows","type":"init"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/applyoptions","title":"DatabaseMigrations.ApplyOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/disablerevertsfollowingrevert","title":"static var disableRevertsFollowingRevert: `Self`","type":"property"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/ignoreunknownmigrations","title":"static var ignoreUnknownMigrations: `Self`","type":"property"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/removeunknownmigrations","title":"static var removeUnknownMigrations: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/init(_:)-6q0hd","title":"init<Source>(Source) async rethrows","type":"init"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/init(_:)-ohtq","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistentoptions","title":"DatabaseMigrations.RevertInconsistentOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/ignoreunknownmigrations","title":"static var ignoreUnknownMigrations: `Self`","type":"property"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/removeunknownmigrations","title":"static var removeUnknownMigrations: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/init(_:)-3eeyx","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/init(_:)-5yrsf","title":"init<Source>(Source) async rethrows","type":"init"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertoptions","title":"DatabaseMigrations.RevertOptions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/add(_:skipduplicates:)","title":"func add(any DatabaseMigration, skipDuplicates: Bool)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/add(contentsof:skipduplicates:)","title":"func add(contentsOf: some Collection<any DatabaseMigration>, skipDuplicates: Bool)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/apply(client:groups:options:logger:dryrun:)","title":"func apply(client: PostgresClient, groups: [DatabaseMigrationGroup], options: ApplyOptions, logger: Logger, dryRun: Bool) async throws","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/register(_:)","title":"func register(any DatabaseMigration)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revert(client:groups:options:logger:dryrun:)","title":"func revert(client: PostgresClient, groups: [DatabaseMigrationGroup], options: RevertOptions, logger: Logger, dryRun: Bool) async throws","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistent(client:groups:options:logger:dryrun:)","title":"func revertInconsistent(client: PostgresClient, groups: [DatabaseMigrationGroup], options: RevertInconsistentOptions, logger: Logger, dryRun: Bool) async throws","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/waituntilcompleted()","title":"func waitUntilCompleted() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigrations\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/postgresmigrations\/databasemigrations\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/postgresmigrations\/databasemigrations","title":"DatabaseMigrations","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/postgresmigrations\/databasemigration\/group-934ms","title":"var group: DatabaseMigrationGroup","type":"property"}],"title":"DatabaseMigration Implementations","type":"groupMarker"}],"path":"\/documentation\/postgresmigrations\/databasemigration\/group","title":"var group: DatabaseMigrationGroup","type":"property"},{"children":[{"children":[{"path":"\/documentation\/postgresmigrations\/databasemigration\/name-7tf3k","title":"var name: String","type":"property"}],"title":"DatabaseMigration Implementations","type":"groupMarker"}],"path":"\/documentation\/postgresmigrations\/databasemigration\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigration\/apply(connection:logger:)","title":"func apply(connection: PostgresConnection, logger: Logger) async throws","type":"method"},{"path":"\/documentation\/postgresmigrations\/databasemigration\/revert(connection:logger:)","title":"func revert(connection: PostgresConnection, logger: Logger) async throws","type":"method"}],"path":"\/documentation\/postgresmigrations\/databasemigration","title":"DatabaseMigration","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrationgroup\/init(_:)","title":"init(String)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrationgroup\/default","title":"static var `default`: `Self`","type":"property"},{"path":"\/documentation\/postgresmigrations\/databasemigrationgroup\/jobqueue","title":"static var jobQueue: `Self`","type":"property"},{"path":"\/documentation\/postgresmigrations\/databasemigrationgroup\/persist","title":"static var persist: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrationgroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresmigrations\/databasemigrationgroup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/postgresmigrations\/databasemigrationgroup","title":"DatabaseMigrationGroup","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrationerror\/appliedmigrationsinconsistent","title":"static var appliedMigrationsInconsistent: `Self`","type":"property"},{"path":"\/documentation\/postgresmigrations\/databasemigrationerror\/cannotrevertmigration","title":"static var cannotRevertMigration: `Self`","type":"property"},{"path":"\/documentation\/postgresmigrations\/databasemigrationerror\/dupicatenames","title":"static var dupicateNames: `Self`","type":"property"},{"path":"\/documentation\/postgresmigrations\/databasemigrationerror\/requireschanges","title":"static var requiresChanges: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrationerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/postgresmigrations\/databasemigrationerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresmigrations\/databasemigrationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/postgresmigrations\/databasemigrationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/postgresmigrations\/databasemigrationerror","title":"DatabaseMigrationError","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrationservice\/init(client:migrations:groups:logger:dryrun:)","title":"init(client: PostgresClient, migrations: DatabaseMigrations, groups: [DatabaseMigrationGroup], logger: Logger, dryRun: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresmigrations\/databasemigrationservice\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/postgresmigrations\/databasemigrationservice","title":"DatabaseMigrationService","type":"struct"}],"icon":"logo.png","path":"\/documentation\/postgresmigrations","title":"PostgresMigrations","type":"module"},{"children":[{"title":"Client","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wsclient\/websocketclient\/context\/logger","title":"let logger: Logger","type":"property"}],"path":"\/documentation\/wsclient\/websocketclient\/context","title":"WebSocketClient.Context","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/wsclient\/websocketclient\/init(url:configuration:tlsconfiguration:eventloopgroup:logger:handler:)","title":"init(url: String, configuration: WebSocketClientConfiguration, tlsConfiguration: TLSConfiguration?, eventLoopGroup: EventLoopGroup, logger: Logger, handler: WebSocketDataHandler<Context>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wsclient\/websocketclient\/run()","title":"func run() async throws -> WebSocketCloseFrame?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wsclient\/websocketclient\/connect(url:configuration:tlsconfiguration:eventloopgroup:logger:handler:)","title":"static func connect(url: String, configuration: WebSocketClientConfiguration, tlsConfiguration: TLSConfiguration?, eventLoopGroup: EventLoopGroup, logger: Logger, handler: WebSocketDataHandler<Context>) async throws -> WebSocketCloseFrame?","type":"method"}],"path":"\/documentation\/wsclient\/websocketclient","title":"WebSocketClient","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/wsclient\/websocketclientconfiguration\/init(maxframesize:additionalheaders:extensions:closetimeout:autoping:validateutf8:snihostname:)","title":"init(maxFrameSize: Int, additionalHeaders: HTTPFields, extensions: [WebSocketExtensionFactory], closeTimeout: Duration, autoPing: AutoPingSetup, validateUTF8: Bool, sniHostname: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wsclient\/websocketclientconfiguration\/additionalheaders","title":"var additionalHeaders: HTTPFields","type":"property"},{"path":"\/documentation\/wsclient\/websocketclientconfiguration\/autoping","title":"var autoPing: AutoPingSetup","type":"property"},{"path":"\/documentation\/wsclient\/websocketclientconfiguration\/closetimeout","title":"var closeTimeout: Duration","type":"property"},{"path":"\/documentation\/wsclient\/websocketclientconfiguration\/extensions","title":"var extensions: [any WebSocketExtensionBuilder]","type":"property"},{"path":"\/documentation\/wsclient\/websocketclientconfiguration\/maxframesize","title":"var maxFrameSize: Int","type":"property"},{"path":"\/documentation\/wsclient\/websocketclientconfiguration\/snihostname","title":"var sniHostname: String?","type":"property"},{"path":"\/documentation\/wsclient\/websocketclientconfiguration\/validateutf8","title":"var validateUTF8: Bool","type":"property"}],"path":"\/documentation\/wsclient\/websocketclientconfiguration","title":"WebSocketClientConfiguration","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/autopingsetup\/disabled","title":"static var disabled: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/autopingsetup\/enabled(timeperiod:)","title":"static func enabled(timePeriod: Duration) -> AutoPingSetup","type":"method"}],"path":"\/documentation\/wscore\/autopingsetup","title":"AutoPingSetup","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketcloseframe\/closecode","title":"let closeCode: WebSocketErrorCode","type":"property"},{"path":"\/documentation\/wscore\/websocketcloseframe\/reason","title":"let reason: String?","type":"property"}],"path":"\/documentation\/wscore\/websocketcloseframe","title":"WebSocketCloseFrame","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/wsclient\/websocketclienterror\/invalidurl","title":"static var invalidURL: `Self`","type":"property"},{"path":"\/documentation\/wsclient\/websocketclienterror\/websocketupgradefailed","title":"static var webSocketUpgradeFailed: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wsclient\/websocketclienterror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/wsclient\/websocketclienterror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wsclient\/websocketclienterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wsclient\/websocketclienterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wsclient\/websocketclienterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/wsclient\/websocketclienterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/wsclient\/websocketclienterror","title":"WebSocketClientError","type":"struct"},{"title":"Handler","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdatahandler","title":"WebSocketDataHandler","type":"typealias"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next()","title":"func next() async throws -> WebSocketDataFrame?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/nextmessage(maxsize:)","title":"func nextMessage(maxSize: Int) async throws -> WebSocketMessage?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next()-870vs","title":"func next() async throws(Self.Failure) -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator","title":"WebSocketInboundStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/messages(maxsize:)","title":"func messages(maxSize: Int) -> WebSocketInboundMessageStream","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/element","title":"WebSocketInboundStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:into:)-65k3a","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:into:)-8qozo","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:)-4e39y","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:)-96tu0","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:into:)-8od8r","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:into:)-9nhxm","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compactmap(_:)-854a5","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compactmap(_:)-wpjn","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-27v24","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-8olkv","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-mvh6","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-r32q","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-2jm2t","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-2k9on","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-370z2","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-5fj8q","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-7fxlp","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/map(_:)-5900d","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/map(_:)-vj9h","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:_:)-2zgwr","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:_:)-7tnon","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(into:_:)-3r0ml","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(into:_:)-4y3zo","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundstream","title":"WebSocketInboundStream","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-68lgw","title":"func callAsFunction(String) async throws","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-70t1d","title":"func callAsFunction(ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter","title":"WebSocketOutboundWriter.MessageWriter","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/close(_:reason:)","title":"func close(WebSocketErrorCode, reason: String?) async throws","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/withbinarymessagewriter(_:)","title":"func withBinaryMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/withtextmessagewriter(_:)","title":"func withTextMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/write(_:)","title":"func write(OutboundFrame) async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/custom(_:)","title":"case custom(WebSocketFrame)","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/pong","title":"case pong","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/text(_:)","title":"case text(String)","type":"case"}],"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe","title":"WebSocketOutboundWriter.OutboundFrame","type":"enum"}],"path":"\/documentation\/wscore\/websocketoutboundwriter","title":"WebSocketOutboundWriter","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/data","title":"var data: ByteBuffer","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/fin","title":"var fin: Bool","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.property","title":"var opcode: Opcode","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/binary","title":"case binary","type":"case"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/continuation","title":"case continuation","type":"case"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum","title":"WebSocketDataFrame.Opcode","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketdataframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketdataframe","title":"WebSocketDataFrame","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketcontext\/logger","title":"var logger: Logger","type":"property"}],"path":"\/documentation\/wscore\/websocketcontext","title":"WebSocketContext","type":"protocol"},{"title":"Messages","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/wscore\/websocketmessage\/text(_:)","title":"case text(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/wscore\/websocketmessage\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketmessage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketmessage","title":"WebSocketMessage","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next()-7jav4","title":"func next() async throws(Self.Failure) -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator","title":"WebSocketInboundMessageStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/element","title":"WebSocketInboundMessageStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:into:)-5w84o","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:into:)-iqig","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:)-1gm8s","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:)-gxum","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-35r09","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-9vnag","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compactmap(_:)-59im6","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compactmap(_:)-80gth","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-18hde","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-23k3a","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-6wte2","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-8btow","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-402es","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-45405","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-82gc0","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-9ilgv","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-h4k","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/map(_:)-3fjnx","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/map(_:)-9y6oy","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:_:)-5ykar","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:_:)-8cv4s","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(into:_:)-7z7qi","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(into:_:)-fxhb","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream","title":"WebSocketInboundMessageStream","type":"struct"},{"title":"Extensions","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextension\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/wscore\/websocketextension\/reservedbits","title":"var reservedBits: WebSocketFrame.ReservedBits","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextension\/processframetosend(_:context:)","title":"func processFrameToSend(WebSocketFrame, context: WebSocketExtensionContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/wscore\/websocketextension\/processreceivedframe(_:context:)","title":"func processReceivedFrame(WebSocketFrame, context: WebSocketExtensionContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/wscore\/websocketextension\/shutdown()","title":"func shutdown() async","type":"method"}],"path":"\/documentation\/wscore\/websocketextension","title":"WebSocketExtension","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/clientextension(from:)","title":"func clientExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/clientrequestheader()","title":"func clientRequestHeader() -> String","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverextension(from:)","title":"func serverExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverreponseheader(to:)","title":"func serverReponseHeader(to: WebSocketExtensionHTTPParameters) -> String?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverresponseheader(to:)","title":"func serverResponseHeader(to: [WebSocketExtensionHTTPParameters]) -> String?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/name","title":"static var name: String","type":"property"}],"path":"\/documentation\/wscore\/websocketextensionbuilder","title":"WebSocketExtensionBuilder","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameters","title":"let parameters: [String : Parameter]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parseheaders(_:)","title":"static func parseHeaders(HTTPFields) -> [WebSocketExtensionHTTPParameters]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/null","title":"case null","type":"case"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/value(_:)","title":"case value(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/integer","title":"var integer: Int?","type":"property"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/optional","title":"var optional: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter","title":"WebSocketExtensionHTTPParameters.Parameter","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters","title":"WebSocketExtensionHTTPParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/init(_:)","title":"init(() -> any WebSocketExtensionBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/build","title":"let build: () -> any WebSocketExtensionBuilder","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/nonnegotiatedextension(_:)","title":"static func nonNegotiatedExtension(() -> some WebSocketExtension) -> WebSocketExtensionFactory","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(clientMaxWindow: Int?, clientNoContextTakeover: Bool, serverMaxWindow: Int?, serverNoContextTakeover: Bool, compressionLevel: Int?, memoryLevel: Int?, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(maxWindow: Int?, noContextTakeover: Bool, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"}],"path":"\/documentation\/wscore\/websocketextensionfactory","title":"WebSocketExtensionFactory","type":"struct"}],"icon":"logo.png","path":"\/documentation\/wsclient","title":"WSClient","type":"module"}],"icon":"logo.png","path":"\/documentation\/index","title":"Hummingbird Documentation","type":"module"},{"children":[{"title":"Authenticator","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/basicauthenticator\/init(passwordhashverifier:context:getuser:)","title":"init(passwordHashVerifier: Verifier, context: Context.Type, getUser: (String, UserRepositoryContext) async throws -> Context.Identity?)","type":"init"},{"path":"\/documentation\/hummingbirdbasicauth\/basicauthenticator\/init(users:passwordhashverifier:context:)","title":"init(users: Repository, passwordHashVerifier: Verifier, context: Context.Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/basicauthenticator\/passwordhashverifier","title":"let passwordHashVerifier: Verifier","type":"property"},{"path":"\/documentation\/hummingbirdbasicauth\/basicauthenticator\/users","title":"let users: Repository","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/basicauthenticator\/authenticate(request:context:)","title":"func authenticate(request: Request, context: Context) async throws -> Repository.User?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/basicauthenticator\/identity","title":"BasicAuthenticator.Identity","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/basicauthenticator\/handle(_:context:next:)","title":"func handle(Request, context: Self.Context, next: (Request, Self.Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdbasicauth\/basicauthenticator\/authenticatormiddleware-implementations","title":"AuthenticatorMiddleware Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdbasicauth\/basicauthenticator","title":"BasicAuthenticator","type":"struct"},{"title":"Storage","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/userpasswordrepository\/user","title":"User","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/userpasswordrepository\/getuser(named:context:)","title":"func getUser(named: String, context: UserRepositoryContext) async throws -> User?","type":"method"}],"path":"\/documentation\/hummingbirdbasicauth\/userpasswordrepository","title":"UserPasswordRepository","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/passwordauthenticatable\/passwordhash","title":"var passwordHash: String?","type":"property"}],"path":"\/documentation\/hummingbirdbasicauth\/passwordauthenticatable","title":"PasswordAuthenticatable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/userpasswordclosurerepository\/init(_:)","title":"init((String, UserRepositoryContext) async throws -> User?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/userpasswordclosurerepository\/getuser(named:context:)","title":"func getUser(named: String, context: UserRepositoryContext) async throws -> User?","type":"method"}],"path":"\/documentation\/hummingbirdbasicauth\/userpasswordclosurerepository","title":"UserPasswordClosureRepository","type":"struct"},{"title":"Passwords","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/passwordhashverifier\/verifypassword(_:createshash:)","title":"func verifyPassword(String, createsHash: String) async throws -> Bool","type":"method"}],"path":"\/documentation\/hummingbirdbasicauth\/passwordhashverifier","title":"PasswordHashVerifier","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/bcryptpasswordverifier\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbasicauth\/bcryptpasswordverifier\/verifypassword(_:createshash:)","title":"func verifyPassword(String, createsHash: String) async throws -> Bool","type":"method"}],"path":"\/documentation\/hummingbirdbasicauth\/bcryptpasswordverifier","title":"BcryptPasswordVerifier","type":"struct"}],"icon":"logo.png","path":"\/documentation\/hummingbirdbasicauth","title":"HummingbirdBasicAuth","type":"module"},{"children":[{"title":"Encryption","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdbcrypt\/bcrypt\/hash(_:cost:)","title":"static func hash(String, cost: UInt8) -> String","type":"method"},{"path":"\/documentation\/hummingbirdbcrypt\/bcrypt\/verify(_:hash:)","title":"static func verify(String, hash: String) -> Bool","type":"method"}],"path":"\/documentation\/hummingbirdbcrypt\/bcrypt","title":"Bcrypt","type":"enum"}],"icon":"logo.png","path":"\/documentation\/hummingbirdbcrypt","title":"HummingbirdBcrypt","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirddocs\/hummingbird_docs\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirddocs\/hummingbird_docs\/text","title":"var text: String","type":"property"}],"path":"\/documentation\/hummingbirddocs\/hummingbird_docs","title":"hummingbird_docs","type":"struct"}],"path":"\/documentation\/hummingbirddocs","title":"HummingbirdDocs","type":"module"},{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambdatesting\/lambdatestableevent\/init(uri:method:headers:body:)","title":"init(uri: String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?) throws","type":"init"}],"path":"\/documentation\/hummingbirdlambdatesting\/lambdatestableevent","title":"LambdaTestableEvent","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambdatesting\/lambdatestclient\/execute(uri:method:headers:body:testcallback:)","title":"func execute<Return>(uri: String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?, testCallback: (Lambda.Output) async throws -> Return) async throws -> Return","type":"method"}],"path":"\/documentation\/hummingbirdlambdatesting\/lambdatestclient","title":"LambdaTestClient","type":"struct"}],"path":"\/documentation\/hummingbirdlambdatesting","title":"HummingbirdLambdaTesting","type":"module"},{"children":[{"title":"OTP","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdotp\/hotp\/init(secret:length:hashfunction:)","title":"init(secret: String, length: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdotp\/hotp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdotp\/hotp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdotp\/hotp\/secret","title":"let secret: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdotp\/hotp\/compute(counter:)","title":"func compute(counter: UInt64) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdotp\/hotp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdotp\/hotp","title":"HOTP","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdotp\/totp\/init(secret:length:timestep:hashfunction:)","title":"init(secret: String, length: Int, timeStep: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdotp\/totp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdotp\/totp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdotp\/totp\/secret","title":"let secret: String","type":"property"},{"path":"\/documentation\/hummingbirdotp\/totp\/timestep","title":"let timeStep: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdotp\/totp\/compute(date:)","title":"func compute(date: Date) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdotp\/totp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdotp\/totp","title":"TOTP","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdotp\/otphashfunction\/sha1","title":"case sha1","type":"case"},{"path":"\/documentation\/hummingbirdotp\/otphashfunction\/sha256","title":"case sha256","type":"case"},{"path":"\/documentation\/hummingbirdotp\/otphashfunction\/sha512","title":"case sha512","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdotp\/otphashfunction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdotp\/otphashfunction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdotp\/otphashfunction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdotp\/otphashfunction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdotp\/otphashfunction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdotp\/otphashfunction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdotp\/otphashfunction","title":"OTPHashFunction","type":"enum"}],"icon":"logo.png","path":"\/documentation\/hummingbirdotp","title":"HummingbirdOTP","type":"module"},{"children":[{"title":"RouterBuilder","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/init(context:options:builder:)","title":"init(context: Context.Type, options: RouterBuilderOptions, builder: () -> Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/input","title":"RouterBuilder.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/output","title":"RouterBuilder.Output","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)","title":"func respond(to: Input, context: Context) async throws -> Output","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/httpresponder-implementations","title":"HTTPResponder Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/buildresponder()","title":"func buildResponder() -> RouterBuilder<Context, Handler>","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/httpresponderbuilder-implementations","title":"HTTPResponderBuilder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder","title":"RouterBuilder","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routercontroller\/body-swift.associatedtype","title":"Body","type":"associatedtype"},{"path":"\/documentation\/hummingbirdrouter\/routercontroller\/context","title":"Context","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routercontroller\/body-swift.property","title":"var body: Body","type":"property"}],"path":"\/documentation\/hummingbirdrouter\/routercontroller","title":"RouterController","type":"protocol"},{"title":"Request Context","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerrequestcontext\/routercontext","title":"var routerContext: RouterBuilderContext","type":"property"}],"path":"\/documentation\/hummingbirdrouter\/routerrequestcontext","title":"RouterRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/init(source:)","title":"init(source: Source)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/corecontext","title":"var coreContext: CoreRequestContextStorage","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/routercontext","title":"var routerContext: RouterBuilderContext","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/requestdecoder","title":"var requestDecoder: JSONDecoder","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/responseencoder","title":"var responseEncoder: JSONEncoder","type":"property"}],"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/requestcontext-implementations","title":"RequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","title":"BasicRouterRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuildercontext\/init()","title":"init()","type":"init"}],"path":"\/documentation\/hummingbirdrouter\/routerbuildercontext","title":"RouterBuilderContext","type":"struct"},{"title":"Result Builder","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/init(context:options:builder:)","title":"init(context: Context.Type, options: RouterBuilderOptions, builder: () -> Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/input","title":"RouterBuilder.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/output","title":"RouterBuilder.Output","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)","title":"func respond(to: Input, context: Context) async throws -> Output","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/httpresponder-implementations","title":"HTTPResponder Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/buildresponder()","title":"func buildResponder() -> RouterBuilder<Context, Handler>","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/httpresponderbuilder-implementations","title":"HTTPResponderBuilder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder","title":"RouterBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/init(_:builder:)","title":"init(RouterPath, builder: () -> Handler)","type":"init"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/init(_:context:builder:)","title":"init<ChildHandler, ChildContext>(RouterPath, context: ChildContext.Type, builder: () -> ChildHandler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/input","title":"RouteGroup.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/output","title":"RouteGroup.Output","type":"typealias"}],"path":"\/documentation\/hummingbirdrouter\/routegroup","title":"RouteGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/route\/init(_:_:builder:)","title":"init<M0>(HTTPRequest.Method, RouterPath, builder: () -> M0)","type":"init"},{"path":"\/documentation\/hummingbirdrouter\/route\/init(_:_:handler:)","title":"init<RouteOutput>(HTTPRequest.Method, RouterPath, handler: (Input, Context) async throws -> RouteOutput)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/route\/fullpath","title":"let fullPath: String","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/route\/handler","title":"let handler: Handler","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/route\/method","title":"let method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/route\/routerpath","title":"let routerPath: RouterPath","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/route\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/route","title":"Route","type":"struct"},{"path":"\/documentation\/hummingbirdrouter\/get(_:builder:)","title":"func Get<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/get(_:handler:)","title":"func Get<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/head(_:builder:)","title":"func Head<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/head(_:handler:)","title":"func Head<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/put(_:builder:)","title":"func Put<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/put(_:handler:)","title":"func Put<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/post(_:builder:)","title":"func Post<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/post(_:handler:)","title":"func Post<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/patch(_:builder:)","title":"func Patch<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/patch(_:handler:)","title":"func Patch<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/delete(_:builder:)","title":"func Delete<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/delete(_:handler:)","title":"func Delete<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/handle\/init(_:)","title":"init(Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/handle\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/handle\/handler","title":"Handle.Handler","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/handle\/input","title":"Handle.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/handle\/output","title":"Handle.Output","type":"typealias"}],"path":"\/documentation\/hummingbirdrouter\/handle","title":"Handle","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/contexttransform\/init(to:builder:)","title":"init(to: HandlerContext.Type, builder: () -> Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/contexttransform\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/contexttransform\/input","title":"ContextTransform.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/contexttransform\/output","title":"ContextTransform.Output","type":"typealias"}],"path":"\/documentation\/hummingbirdrouter\/contexttransform","title":"ContextTransform","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/caseinsensitive","title":"static var caseInsensitive: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/init(_:)-2jny6","title":"init<Source>(Source) async rethrows","type":"init"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/init(_:)-32y6j","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilderoptions","title":"RouterBuilderOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/throwingcontexttransform\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/throwingcontexttransform\/input","title":"ThrowingContextTransform.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/throwingcontexttransform\/output","title":"ThrowingContextTransform.Output","type":"typealias"}],"path":"\/documentation\/hummingbirdrouter\/throwingcontexttransform","title":"ThrowingContextTransform","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildblock(_:)","title":"static func buildBlock<RouteOutput>(Handle<RouteOutput, Context>) -> Handle<RouteOutput, Context>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildexpression(_:)-1z59f","title":"static func buildExpression<M0>(M0) -> M0","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildexpression(_:)-330hz","title":"static func buildExpression<HandlerOutput>((Request, Context) async throws -> HandlerOutput) -> Handle<HandlerOutput, Context>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildfinalresult(_:)-2hb10","title":"static func buildFinalResult<RouteOutput>(Handle<RouteOutput, Context>) -> Handle<RouteOutput, Context>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildfinalresult(_:)-6tdsd","title":"static func buildFinalResult<M0, RouteOutput>(_Middleware2<M0, Handle<RouteOutput, M0.Context>>) -> _Middleware2<M0, Handle<RouteOutput, M0.Context>>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<M0, M1>(accumulated: M0, next: M1) -> _Middleware2<M0, M1>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock<M0>(first: M0) -> M0","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routebuilder","title":"RouteBuilder","type":"enum"}],"icon":"logo.png","path":"\/documentation\/hummingbirdrouter","title":"HummingbirdRouter","type":"module"},{"children":[{"title":"Test Setup","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testingsetup\/live","title":"static var live: TestingSetup","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testingsetup\/router","title":"static var router: TestingSetup","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testingsetup\/ahc(_:)","title":"static func ahc(TestHTTPScheme) -> TestingSetup","type":"method"}],"path":"\/documentation\/hummingbirdtesting\/testingsetup","title":"TestingSetup","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/http","title":"case http","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/https","title":"case https","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdtesting\/testhttpscheme","title":"TestHTTPScheme","type":"enum"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","title":"func test<Value>(TestingSetup, (any TestClientProtocol) async throws -> Value) async throws -> Value","type":"method"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclientprotocol\/port","title":"var port: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclientprotocol\/execute(uri:method:headers:body:testcallback:)","title":"func execute<Return>(uri: String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?, testCallback: (TestResponse) async throws -> Return) async throws -> Return","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclientprotocol\/executerequest(uri:method:headers:body:)","title":"func executeRequest(uri: String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?) async throws -> TestResponse","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","title":"func ws(String, configuration: WebSocketClientConfiguration, logger: Logger, handler: WebSocketDataHandler<WebSocketClient.Context>) async throws -> WebSocketCloseFrame?","type":"method"}],"path":"\/documentation\/hummingbirdtesting\/testclientprotocol","title":"TestClientProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/configuration\/init(tlsconfiguration:timeout:servername:)","title":"init(tlsConfiguration: TLSConfiguration?, timeout: Duration, serverName: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/configuration\/servername","title":"let serverName: String?","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/configuration\/timeout","title":"let timeout: Duration","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/configuration\/tlsconfiguration","title":"let tlsConfiguration: TLSConfiguration?","type":"property"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/configuration","title":"TestClient.Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/request\/init(_:method:authority:headers:body:)","title":"init(String, method: HTTPRequest.Method, authority: String?, headers: HTTPFields, body: ByteBuffer?)","type":"init"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/request\/init(_:method:headers:body:)","title":"init(String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/request\/body","title":"var body: ByteBuffer?","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/request\/head","title":"var head: HTTPRequest","type":"property"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/request","title":"TestClient.Request","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/init(head:body:trailerheaders:)","title":"init(head: HTTPResponse, body: ByteBuffer?, trailerHeaders: HTTPFields?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/body","title":"var body: ByteBuffer?","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/head","title":"var head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/status","title":"var status: HTTPResponse.Status","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/trailerheaders","title":"var trailerHeaders: HTTPFields?","type":"property"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/response","title":"TestClient.Response","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/init(host:port:configuration:eventloopgroupprovider:)","title":"init(host: String, port: Int, configuration: Configuration, eventLoopGroupProvider: NIOEventLoopGroupProvider)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/channelpromise","title":"let channelPromise: EventLoopPromise<any Channel>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/close(mode:)","title":"func close(mode: CloseMode) async throws","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/connect()","title":"func connect()","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/delete(_:headers:body:)","title":"func delete(String, headers: HTTPFields, body: ByteBuffer) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/execute(_:)","title":"func execute(TestClient.Request) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/executeanddontwaitforresponse(_:)","title":"func executeAndDontWaitForResponse(TestClient.Request) async throws","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/get(_:headers:)","title":"func get(String, headers: HTTPFields) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/getchannel()","title":"func getChannel() async throws -> any Channel","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/head(_:headers:)","title":"func head(String, headers: HTTPFields) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/post(_:headers:body:)","title":"func post(String, headers: HTTPFields, body: ByteBuffer) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/put(_:headers:body:)","title":"func put(String, headers: HTTPFields, body: ByteBuffer) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/shutdown()","title":"func shutdown() async throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/withclient(host:port:configuration:eventloopgroupprovider:operation:)","title":"static func withClient<Value>(host: String, port: Int, configuration: Configuration, eventLoopGroupProvider: NIOEventLoopGroupProvider, operation: (`Self`) async throws -> Value) async throws -> Value","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/connectionclosing","title":"case connectionClosing","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/connectionnotopen","title":"case connectionNotOpen","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/invalidurl","title":"case invalidURL","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/malformedresponse","title":"case malformedResponse","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/noresponse","title":"case noResponse","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/readtimeout","title":"case readTimeout","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/tlssetupfailed","title":"case tlsSetupFailed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/error","title":"TestClient.Error","type":"enum"}],"path":"\/documentation\/hummingbirdtesting\/testclient","title":"TestClient","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testresponse\/body","title":"let body: ByteBuffer","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testresponse\/head","title":"let head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testresponse\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testresponse\/status","title":"var status: HTTPResponse.Status","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testresponse\/trailerheaders","title":"let trailerHeaders: HTTPFields?","type":"property"}],"path":"\/documentation\/hummingbirdtesting\/testresponse","title":"TestResponse","type":"struct"}],"icon":"logo.png","path":"\/documentation\/hummingbirdtesting","title":"HummingbirdTesting","type":"module"},{"path":"\/documentation\/hummingbirdwsclient","title":"HummingbirdWSClient","type":"module"},{"children":[{"title":"Testing","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","title":"func ws(String, configuration: WebSocketClientConfiguration, logger: Logger, handler: WebSocketDataHandler<WebSocketClient.Context>) async throws -> WebSocketCloseFrame?","type":"method"}],"icon":"logo.png","path":"\/documentation\/hummingbirdwstesting","title":"HummingbirdWSTesting","type":"module"},{"children":[{"title":"Job Queue","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/configuration-swift.struct\/init(polltime:queuename:retentionpolicy:)","title":"init(pollTime: Duration, queueName: String, retentionPolicy: RetentionPolicy)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/configuration-swift.struct\/polltime","title":"var pollTime: Duration","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/configuration-swift.struct\/queuename","title":"var queueName: String","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/configuration-swift.struct\/retentionpolicy","title":"var retentionPolicy: RetentionPolicy","type":"property"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/configuration-swift.struct","title":"PostgresJobQueue.Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobcleanup\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobcleanup\/donothing","title":"static var doNothing: `Self`","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobcleanup\/remove","title":"static var remove: `Self`","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobcleanup\/rerun","title":"static var rerun: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobcleanup\/remove(maxage:)","title":"static func remove(maxAge: Duration) -> PostgresJobQueue.JobCleanup","type":"method"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobcleanup","title":"PostgresJobQueue.JobCleanup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/joboptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/joboptions\/init(delayuntil:priority:)","title":"init(delayUntil: Date, priority: JobPriority)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/joboptions\/delayuntil","title":"var delayUntil: Date","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/joboptions\/priority","title":"var priority: JobPriority","type":"property"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/joboptions","title":"PostgresJobQueue.JobOptions","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobpriority\/higher","title":"static let higher: JobPriority","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobpriority\/highest","title":"static let highest: JobPriority","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobpriority\/lower","title":"static let lower: JobPriority","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobpriority\/lowest","title":"static let lowest: JobPriority","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobpriority\/normal","title":"static let normal: JobPriority","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobpriority\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobpriority\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobpriority","title":"PostgresJobQueue.JobPriority","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/retentionpolicy\/retaindata\/donotretain","title":"static var doNotRetain: RetainData","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/retentionpolicy\/retaindata\/retain","title":"static var retain: RetainData","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/retentionpolicy\/retaindata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/retentionpolicy\/retaindata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/retentionpolicy\/retaindata","title":"PostgresJobQueue.RetentionPolicy.RetainData","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/retentionpolicy\/init(completedjobs:failedjobs:cancelledjobs:)","title":"init(completedJobs: RetainData, failedJobs: RetainData, cancelledJobs: RetainData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/retentionpolicy\/cancelledjobs","title":"var cancelledJobs: RetainData","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/retentionpolicy\/completedjobs","title":"var completedJobs: RetainData","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/retentionpolicy\/failedjobs","title":"var failedJobs: RetainData","type":"property"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/retentionpolicy","title":"PostgresJobQueue.RetentionPolicy","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/init(client:migrations:configuration:logger:)","title":"init(client: PostgresClient, migrations: DatabaseMigrations, configuration: Configuration, logger: Logger) async","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/cleanupjob","title":"var cleanupJob: JobName<PostgresJobCleanupParameters>","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/client","title":"let client: PostgresClient","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/configuration-swift.property","title":"let configuration: Configuration","type":"property"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/logger","title":"let logger: Logger","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/cancel(jobid:)","title":"func cancel(jobID: JobID) async throws","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/cleanup(pendingjobs:processingjobs:completedjobs:failedjobs:cancelledjobs:pausedjobs:logger:)","title":"func cleanup(pendingJobs: JobCleanup, processingJobs: JobCleanup, completedJobs: JobCleanup, failedJobs: JobCleanup, cancelledJobs: JobCleanup, pausedJobs: JobCleanup, logger: Logger?) async throws","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/failed(jobid:error:)","title":"func failed(jobID: JobID, error: Error) async throws","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/finished(jobid:)","title":"func finished(jobID: JobID) async throws","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/pause(jobid:)","title":"func pause(jobID: UUID) async throws","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/push(_:options:)","title":"func push<Parameters>(JobRequest<Parameters>, options: JobOptions) async throws -> JobID","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/registerjob(_:)","title":"func registerJob<Parameters>(JobDefinition<Parameters>)","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/resume(jobid:)","title":"func resume(jobID: JobID) async throws","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/retry(_:jobrequest:options:)","title":"func retry<Parameters>(JobID, jobRequest: JobRequest<Parameters>, options: JobRetryOptions) async throws","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/shutdowngracefully()","title":"func shutdownGracefully() async","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/stop()","title":"func stop() async","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/waituntilready()","title":"func waitUntilReady() async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobid","title":"PostgresJobQueue.JobID","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/postgresqueueerror\/failedtoadd","title":"case failedToAdd","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/postgresqueueerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/postgresqueueerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/postgresqueueerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/postgresqueueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/postgresqueueerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/postgresqueueerror","title":"PostgresJobQueue.PostgresQueueError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/asynciterator\/element","title":"PostgresJobQueue.AsyncIterator.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/asynciterator","title":"PostgresJobQueue.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunked(by:into:)-7g7d2","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunked(by:into:)-9jife","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunks(ofcount:or:)-2gkna","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunks(ofcount:or:)-3dcnd","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunks(ofcount:or:into:)-21oxn","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/chunks(ofcount:or:into:)-3v6pq","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/compactmap(_:)-3syxn","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/compactmap(_:)-9bnfq","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/flatmap(_:)-1fstu","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/flatmap(_:)-6p1ta","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/flatmap(_:)-8a6xy","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/flatmap(_:)-8dpyd","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/interspersed(every:with:)-1zj7y","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/interspersed(every:with:)-3izdo","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/interspersed(every:with:)-4yk5n","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/interspersed(every:with:)-6x5pf","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/interspersed(every:with:)-9qv2l","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/map(_:)-1ngif","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/map(_:)-2pcqz","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/reductions(_:_:)-1nn68","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/reductions(_:_:)-5flet","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/reductions(into:_:)-3tzyw","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/reductions(into:_:)-81qj4","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/acquirelock(key:id:expiresin:)","title":"func acquireLock(key: String, id: ByteBuffer, expiresIn: TimeInterval) async throws -> Bool","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/getmetadata(_:)","title":"func getMetadata(String) async throws -> ByteBuffer?","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/releaselock(key:id:)","title":"func releaseLock(key: String, id: ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/setmetadata(key:value:)","title":"func setMetadata(key: String, value: ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobmetadatadriver-implementations","title":"JobMetadataDriver Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobqueue\/postgres(client:migrations:configuration:logger:)","title":"static func postgres(client: PostgresClient, migrations: DatabaseMigrations, configuration: PostgresJobQueue.Configuration, logger: Logger) async -> Self","type":"method"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue\/jobqueuedriver-implementations","title":"JobQueueDriver Implementations","type":"symbol"}],"path":"\/documentation\/jobspostgres\/postgresjobqueue","title":"PostgresJobQueue","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobspostgres\/postgresjobcleanupparameters\/init(completedjobs:failedjobs:cancelledjobs:pausedjobs:)","title":"init(completedJobs: PostgresJobQueue.JobCleanup, failedJobs: PostgresJobQueue.JobCleanup, cancelledJobs: PostgresJobQueue.JobCleanup, pausedJobs: PostgresJobQueue.JobCleanup)","type":"init"},{"path":"\/documentation\/jobspostgres\/postgresjobcleanupparameters\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/jobspostgres\/postgresjobcleanupparameters","title":"PostgresJobCleanupParameters","type":"struct"}],"icon":"logo.png","path":"\/documentation\/jobspostgres","title":"JobsPostgres","type":"module"},{"children":[{"title":"Job Queue","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration\/init(queuename:polltime:retentionpolicy:)","title":"init(queueName: String, pollTime: Duration, retentionPolicy: RetentionPolicy)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration\/cancelledqueuekey","title":"let cancelledQueueKey: ValkeyKey","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration\/completedqueuekey","title":"let completedQueueKey: ValkeyKey","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration\/failedqueuekey","title":"let failedQueueKey: ValkeyKey","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration\/metadatakeyprefix","title":"let metadataKeyPrefix: String","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration\/pausedqueuekey","title":"let pausedQueueKey: ValkeyKey","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration\/pendingqueuekey","title":"let pendingQueueKey: ValkeyKey","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration\/polltime","title":"let pollTime: Duration","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration\/processingqueuekey","title":"let processingQueueKey: ValkeyKey","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration\/queuename","title":"let queueName: String","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration\/retentionpolicy","title":"let retentionPolicy: RetentionPolicy","type":"property"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/configuration","title":"ValkeyJobQueue.Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobcleanup\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobcleanup\/donothing","title":"static var doNothing: `Self`","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobcleanup\/remove","title":"static var remove: `Self`","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobcleanup\/rerun","title":"static var rerun: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobcleanup\/remove(maxage:)","title":"static func remove(maxAge: Duration) -> ValkeyJobQueue.JobCleanup","type":"method"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobcleanup","title":"ValkeyJobQueue.JobCleanup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobid\/init(fromresp:)","title":"init(fromRESP: RESPToken) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobid\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobid\/respentries","title":"var respEntries: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobid\/encode(into:)","title":"func encode(into: inout ValkeyCommandEncoder)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobid","title":"ValkeyJobQueue.JobID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/joboptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/joboptions\/init(delayuntil:)","title":"init(delayUntil: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/joboptions\/delayuntil","title":"var delayUntil: Date?","type":"property"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/joboptions","title":"ValkeyJobQueue.JobOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/pendingjobcleanup\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/pendingjobcleanup\/donothing","title":"static var doNothing: `Self`","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/pendingjobcleanup\/remove","title":"static var remove: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/pendingjobcleanup\/remove(maxage:)","title":"static func remove(maxAge: Duration) -> ValkeyJobQueue.PendingJobCleanup","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/pendingjobcleanup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/pendingjobcleanup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/pendingjobcleanup","title":"ValkeyJobQueue.PendingJobCleanup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/processingjobcleanup\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/processingjobcleanup\/donothing","title":"static var doNothing: `Self`","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/processingjobcleanup\/remove","title":"static var remove: `Self`","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/processingjobcleanup\/rerun","title":"static var rerun: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/processingjobcleanup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/processingjobcleanup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/processingjobcleanup","title":"ValkeyJobQueue.ProcessingJobCleanup","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/retentionpolicy\/retaindata\/donotretain","title":"static var doNotRetain: RetainData","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/retentionpolicy\/retaindata\/retain","title":"static var retain: RetainData","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/retentionpolicy\/retaindata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/retentionpolicy\/retaindata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/retentionpolicy\/retaindata","title":"ValkeyJobQueue.RetentionPolicy.RetainData","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/retentionpolicy\/init(completedjobs:failedjobs:cancelledjobs:)","title":"init(completedJobs: RetainData, failedJobs: RetainData, cancelledJobs: RetainData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/retentionpolicy\/cancelledjobs","title":"var cancelledJobs: RetainData","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/retentionpolicy\/completedjobs","title":"var completedJobs: RetainData","type":"property"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/retentionpolicy\/failedjobs","title":"var failedJobs: RetainData","type":"property"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/retentionpolicy","title":"ValkeyJobQueue.RetentionPolicy","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/init(_:configuration:logger:)","title":"init(ValkeyClient, configuration: Configuration, logger: Logger) async throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/cleanupjob","title":"var cleanupJob: JobName<ValkeyJobCleanupParameters>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/cleanup(pendingjobs:processingjobs:completedjobs:failedjobs:cancelledjobs:pausedjobs:)","title":"func cleanup(pendingJobs: PendingJobCleanup, processingJobs: ProcessingJobCleanup, completedJobs: JobCleanup, failedJobs: JobCleanup, cancelledJobs: JobCleanup, pausedJobs: JobCleanup) async throws","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/failed(jobid:error:)","title":"func failed(jobID: JobID, error: Error) async throws","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/finished(jobid:)","title":"func finished(jobID: JobID) async throws","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/loadfunctions()","title":"func loadFunctions() async throws","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/push(_:options:)","title":"func push<Parameters>(JobRequest<Parameters>, options: JobOptions) async throws -> JobID","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/registerjob(_:)","title":"func registerJob<Parameters>(JobDefinition<Parameters>)","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/retry(_:jobrequest:options:)","title":"func retry<Parameters>(JobID, jobRequest: JobRequest<Parameters>, options: JobRetryOptions) async throws","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/shutdowngracefully()","title":"func shutdownGracefully() async","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/stop()","title":"func stop() async","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/waituntilready()","title":"func waitUntilReady() async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/valkeyqueueerror\/jobmissing(_:)","title":"case jobMissing(JobID)","type":"case"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/valkeyqueueerror\/unexpectedvalkeykeytype","title":"case unexpectedValkeyKeyType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/valkeyqueueerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/valkeyqueueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/valkeyqueueerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/valkeyqueueerror","title":"ValkeyJobQueue.ValkeyQueueError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/asynciterator","title":"ValkeyJobQueue.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunked(by:into:)-39zig","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunked(by:into:)-65tyb","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunks(ofcount:or:)-3y735","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunks(ofcount:or:)-8u9q3","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunks(ofcount:or:into:)-3ga2m","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/chunks(ofcount:or:into:)-6nlba","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/compactmap(_:)-13zwc","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/compactmap(_:)-5t304","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/flatmap(_:)-2u5d7","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/flatmap(_:)-37r5w","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/flatmap(_:)-6s6kf","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/flatmap(_:)-8xmfo","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/interspersed(every:with:)-4xvlk","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/interspersed(every:with:)-8bc1u","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/interspersed(every:with:)-hsyy","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/interspersed(every:with:)-rjjm","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/interspersed(every:with:)-ws9w","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/map(_:)-8gfgi","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/map(_:)-9y93j","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/reductions(_:_:)-2cgqp","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/reductions(_:_:)-9dn9w","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/reductions(into:_:)-7p16e","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/reductions(into:_:)-8tgsv","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/element","title":"ValkeyJobQueue.Element","type":"typealias"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/cancel(jobid:)","title":"func cancel(jobID: JobID) async throws","type":"method"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/cancellablejobqueue-implementations","title":"CancellableJobQueue Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/acquirelock(key:id:expiresin:)","title":"func acquireLock(key: String, id: ByteBuffer, expiresIn: TimeInterval) async throws -> Bool","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/getmetadata(_:)","title":"func getMetadata(String) async throws -> ByteBuffer?","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/releaselock(key:id:)","title":"func releaseLock(key: String, id: ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/setmetadata(key:value:)","title":"func setMetadata(key: String, value: ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobmetadatadriver-implementations","title":"JobMetadataDriver Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/valkey(_:configuration:logger:)","title":"static func valkey(ValkeyClient, configuration: ValkeyJobQueue.Configuration, logger: Logger) async throws -> Self","type":"method"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/jobqueuedriver-implementations","title":"JobQueueDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/pause(jobid:)","title":"func pause(jobID: JobID) async throws","type":"method"},{"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/resume(jobid:)","title":"func resume(jobID: JobID) async throws","type":"method"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue\/resumablejobqueue-implementations","title":"ResumableJobQueue Implementations","type":"symbol"}],"path":"\/documentation\/jobsvalkey\/valkeyjobqueue","title":"ValkeyJobQueue","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/jobsvalkey\/valkeyjobcleanupparameters\/init(completedjobs:failedjobs:cancelledjobs:pausedjobs:)","title":"init(completedJobs: ValkeyJobQueue.JobCleanup, failedJobs: ValkeyJobQueue.JobCleanup, cancelledJobs: ValkeyJobQueue.JobCleanup, pausedJobs: ValkeyJobQueue.JobCleanup)","type":"init"},{"path":"\/documentation\/jobsvalkey\/valkeyjobcleanupparameters\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/jobsvalkey\/valkeyjobcleanupparameters","title":"ValkeyJobCleanupParameters","type":"struct"}],"icon":"logo.png","path":"\/documentation\/jobsvalkey","title":"JobsValkey","type":"module"},{"children":[{"title":"Compression extension","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(clientMaxWindow: Int?, clientNoContextTakeover: Bool, serverMaxWindow: Int?, serverNoContextTakeover: Bool, compressionLevel: Int?, memoryLevel: Int?, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(maxWindow: Int?, noContextTakeover: Bool, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"}],"icon":"logo.png","path":"\/documentation\/wscompression","title":"WSCompression","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next()","title":"func next() async throws -> WebSocketDataFrame?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/nextmessage(maxsize:)","title":"func nextMessage(maxSize: Int) async throws -> WebSocketMessage?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next()-870vs","title":"func next() async throws(Self.Failure) -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asynciterator","title":"WebSocketInboundStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/messages(maxsize:)","title":"func messages(maxSize: Int) -> WebSocketInboundMessageStream","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/element","title":"WebSocketInboundStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundstream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:into:)-65k3a","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(by:into:)-8qozo","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:)-4e39y","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:)-96tu0","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:into:)-8od8r","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/chunks(ofcount:or:into:)-9nhxm","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compactmap(_:)-854a5","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compactmap(_:)-wpjn","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-27v24","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-8olkv","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-mvh6","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/flatmap(_:)-r32q","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-2jm2t","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-2k9on","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-370z2","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-5fj8q","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/interspersed(every:with:)-7fxlp","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/map(_:)-5900d","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/map(_:)-vj9h","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:_:)-2zgwr","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(_:_:)-7tnon","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(into:_:)-3r0ml","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/reductions(into:_:)-4y3zo","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundstream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundstream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundstream","title":"WebSocketInboundStream","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketcontext\/logger","title":"var logger: Logger","type":"property"}],"path":"\/documentation\/wscore\/websocketcontext","title":"WebSocketContext","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextension\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/wscore\/websocketextension\/reservedbits","title":"var reservedBits: WebSocketFrame.ReservedBits","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextension\/processframetosend(_:context:)","title":"func processFrameToSend(WebSocketFrame, context: WebSocketExtensionContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/wscore\/websocketextension\/processreceivedframe(_:context:)","title":"func processReceivedFrame(WebSocketFrame, context: WebSocketExtensionContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/wscore\/websocketextension\/shutdown()","title":"func shutdown() async","type":"method"}],"path":"\/documentation\/wscore\/websocketextension","title":"WebSocketExtension","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/clientextension(from:)","title":"func clientExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/clientrequestheader()","title":"func clientRequestHeader() -> String","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverextension(from:)","title":"func serverExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverreponseheader(to:)","title":"func serverReponseHeader(to: WebSocketExtensionHTTPParameters) -> String?","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/serverresponseheader(to:)","title":"func serverResponseHeader(to: [WebSocketExtensionHTTPParameters]) -> String?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionbuilder\/name","title":"static var name: String","type":"property"}],"path":"\/documentation\/wscore\/websocketextensionbuilder","title":"WebSocketExtensionBuilder","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/autopingsetup\/disabled","title":"static var disabled: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/autopingsetup\/enabled(timeperiod:)","title":"static func enabled(timePeriod: Duration) -> AutoPingSetup","type":"method"}],"path":"\/documentation\/wscore\/autopingsetup","title":"AutoPingSetup","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketcloseframe\/closecode","title":"let closeCode: WebSocketErrorCode","type":"property"},{"path":"\/documentation\/wscore\/websocketcloseframe\/reason","title":"let reason: String?","type":"property"}],"path":"\/documentation\/wscore\/websocketcloseframe","title":"WebSocketCloseFrame","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/data","title":"var data: ByteBuffer","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/fin","title":"var fin: Bool","type":"property"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.property","title":"var opcode: Opcode","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/binary","title":"case binary","type":"case"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/continuation","title":"case continuation","type":"case"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketdataframe\/opcode-swift.enum","title":"WebSocketDataFrame.Opcode","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdataframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketdataframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketdataframe","title":"WebSocketDataFrame","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensioncontext\/logger","title":"let logger: Logger","type":"property"}],"path":"\/documentation\/wscore\/websocketextensioncontext","title":"WebSocketExtensionContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/init(_:)","title":"init(() -> any WebSocketExtensionBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/build","title":"let build: () -> any WebSocketExtensionBuilder","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/nonnegotiatedextension(_:)","title":"static func nonNegotiatedExtension(() -> some WebSocketExtension) -> WebSocketExtensionFactory","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(clientMaxWindow: Int?, clientNoContextTakeover: Bool, serverMaxWindow: Int?, serverNoContextTakeover: Bool, compressionLevel: Int?, memoryLevel: Int?, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"},{"path":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(maxWindow: Int?, noContextTakeover: Bool, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"}],"path":"\/documentation\/wscore\/websocketextensionfactory","title":"WebSocketExtensionFactory","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameters","title":"let parameters: [String : Parameter]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parseheaders(_:)","title":"static func parseHeaders(HTTPFields) -> [WebSocketExtensionHTTPParameters]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/null","title":"case null","type":"case"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/value(_:)","title":"case value(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/integer","title":"var integer: Int?","type":"property"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/optional","title":"var optional: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/parameter","title":"WebSocketExtensionHTTPParameters.Parameter","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketextensionhttpparameters","title":"WebSocketExtensionHTTPParameters","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next()-7jav4","title":"func next() async throws(Self.Failure) -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/next(isolation:)","title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asynciterator","title":"WebSocketInboundMessageStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/element","title":"WebSocketInboundMessageStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:into:)-5w84o","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(by:into:)-iqig","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:)-1gm8s","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:)-gxum","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-35r09","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-9vnag","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compactmap(_:)-59im6","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compactmap(_:)-80gth","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-18hde","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-23k3a","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-6wte2","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/flatmap(_:)-8btow","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-402es","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-45405","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-82gc0","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-9ilgv","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/interspersed(every:with:)-h4k","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/map(_:)-3fjnx","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/map(_:)-9y6oy","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:_:)-5ykar","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(_:_:)-8cv4s","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(into:_:)-7z7qi","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/reductions(into:_:)-fxhb","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/wscore\/websocketinboundmessagestream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketinboundmessagestream","title":"WebSocketInboundMessageStream","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder\/build()","title":"func build() -> Extension","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder\/name","title":"static var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder\/clientextension(from:)","title":"func clientExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder\/clientrequestheader()","title":"func clientRequestHeader() -> String","type":"method"},{"path":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder\/serverextension(from:)","title":"func serverExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder\/serverreponseheader(to:)","title":"func serverReponseHeader(to: WebSocketExtensionHTTPParameters) -> String?","type":"method"},{"path":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder\/serverresponseheader(to:)","title":"func serverResponseHeader(to: [WebSocketExtensionHTTPParameters]) -> String?","type":"method"}],"path":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder\/websocketextensionbuilder-implementations","title":"WebSocketExtensionBuilder Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder","title":"WebSocketNonNegotiableExtensionBuilder","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-68lgw","title":"func callAsFunction(String) async throws","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-70t1d","title":"func callAsFunction(ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/wscore\/websocketoutboundwriter\/messagewriter","title":"WebSocketOutboundWriter.MessageWriter","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/close(_:reason:)","title":"func close(WebSocketErrorCode, reason: String?) async throws","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/withbinarymessagewriter(_:)","title":"func withBinaryMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/withtextmessagewriter(_:)","title":"func withTextMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/write(_:)","title":"func write(OutboundFrame) async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/custom(_:)","title":"case custom(WebSocketFrame)","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/pong","title":"case pong","type":"case"},{"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe\/text(_:)","title":"case text(String)","type":"case"}],"path":"\/documentation\/wscore\/websocketoutboundwriter\/outboundframe","title":"WebSocketOutboundWriter.OutboundFrame","type":"enum"}],"path":"\/documentation\/wscore\/websocketoutboundwriter","title":"WebSocketOutboundWriter","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketdatahandler","title":"WebSocketDataHandler","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/wscore\/websocketmessage\/text(_:)","title":"case text(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/wscore\/websocketmessage\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websocketmessage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websocketmessage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websocketmessage","title":"WebSocketMessage","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/wscore\/websockettype\/client","title":"case client","type":"case"},{"path":"\/documentation\/wscore\/websockettype\/server","title":"case server","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/wscore\/websockettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/wscore\/websockettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/wscore\/websockettype","title":"WebSocketType","type":"enum"}],"path":"\/documentation\/wscore","title":"WSCore","type":"module"}]},"references":{"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]}},"schemaVersion":{"major":0,"minor":1,"patch":2}}