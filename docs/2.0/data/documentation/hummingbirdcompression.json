{"sections":[],"abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"},"seeAlsoSections":[{"generated":true,"anchor":"Reference-Documentation","title":"Reference Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"]}],"topicSections":[{"anchor":"Request-decompression","title":"Request decompression","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware"],"anchor":"Response-compression","title":"Response compression"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdcompression"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"anchor":"Usage","text":"Usage","type":"heading","level":2},{"code":["let router = Router()","router.middlewares.add(RequestDecompressionMiddleware())","router.middlewares.add(ResponseCompressionMiddleware(minimumResponseSizeToCompress: 512))"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Adding request decompression middleware means when a request comes in with header "},{"type":"codeVoice","code":"content-encoding"},{"text":" set to ","type":"text"},{"code":"gzip","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"deflate"},{"type":"text","text":" the server will attempt to decompress the request body. Adding response compression means when a request comes in with header "},{"code":"accept-encoding","type":"codeVoice"},{"text":" set to ","type":"text"},{"code":"gzip","type":"codeVoice"},{"type":"text","text":" or "},{"code":"deflate","type":"codeVoice"},{"type":"text","text":" the server will compression the response body."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"name":"HummingbirdCompression"}],"symbolKind":"module","role":"collection","externalID":"HummingbirdCompression","title":"HummingbirdCompression","roleHeading":"Framework","images":[{"type":"icon","identifier":"logo.png"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"type":"topic","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","url":"\/documentation\/jobs","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"kind":"symbol","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"title":"HummingbirdPostgres","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"title":"WSClient","kind":"symbol","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"type":"topic","url":"\/documentation\/wsclient","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","images":[{"type":"icon","identifier":"logo.png"}]},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"role":"symbol","abstract":[{"type":"text","text":"Middleware for compressing response bodies"}],"url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"kind":"symbol","title":"ResponseCompressionMiddleware","navigatorTitle":[{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"role":"collection","type":"topic","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird Documentation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","type":"topic","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"role":"collection","type":"topic","abstract":[{"text":"Mustache template engine.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/mustache","title":"Mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"role":"collection","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdcompression","type":"topic","kind":"symbol","title":"HummingbirdCompression","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","abstract":[{"type":"text","text":"Middleware for decompressing request bodies"}],"kind":"symbol","navigatorTitle":[{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"title":"RequestDecompressionMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestDecompressionMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"title":"HummingbirdWebSocket","kind":"symbol","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdwebsocket","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"kind":"symbol","url":"\/documentation\/hummingbirdredis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"title":"HummingbirdFluent","type":"topic","url":"\/documentation\/hummingbirdfluent"}}}