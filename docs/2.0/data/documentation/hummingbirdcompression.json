{"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcompression"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"},"seeAlsoSections":[{"title":"Reference Documentation","anchor":"Reference-Documentation","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"]}],"sections":[],"metadata":{"roleHeading":"Framework","role":"collection","modules":[{"name":"HummingbirdCompression"}],"externalID":"HummingbirdCompression","symbolKind":"module","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdCompression"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Usage","anchor":"Usage","level":2},{"type":"codeListing","code":["let router = Router()","router.middlewares.add(RequestDecompressionMiddleware())","router.middlewares.add(ResponseCompressionMiddleware(minimumResponseSizeToCompress: 512))"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding request decompression middleware means when a request comes in with header "},{"type":"codeVoice","code":"content-encoding"},{"type":"text","text":" set to "},{"type":"codeVoice","code":"gzip"},{"type":"text","text":" or "},{"type":"codeVoice","code":"deflate"},{"type":"text","text":" the server will attempt to decompress the request body. Adding response compression means when a request comes in with header "},{"type":"codeVoice","code":"accept-encoding"},{"type":"text","text":" set to "},{"type":"codeVoice","code":"gzip"},{"type":"text","text":" or "},{"type":"codeVoice","code":"deflate"},{"type":"text","text":" the server will compression the response body."}]}]}],"abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"topicSections":[{"title":"Request decompression","anchor":"Request-decompression","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware"]},{"title":"Response compression","anchor":"Response-compression","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware"]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"url":"\/documentation\/hummingbirdauth","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdAuth","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"navigatorTitle":[{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"kind":"symbol","title":"ResponseCompressionMiddleware","url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware for compressing response bodies"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"url":"\/documentation\/hummingbirdredis","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"url":"\/documentation\/wsclient","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"title":"WSClient","abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"type":"topic","title":"Jobs","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","url":"\/documentation\/jobs","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","role":"collection","type":"topic","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","title":"HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","role":"collection","type":"topic","abstract":[{"type":"text","text":"Working with Postgres databases."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","role":"collection","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"title":"HummingbirdFluent","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Integration with Vaporâ€™s Fluent ORM framework."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"type":"topic","url":"\/documentation\/hummingbirdlambda","role":"collection","title":"HummingbirdLambda","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware":{"role":"symbol","url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","title":"RequestDecompressionMiddleware","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware for decompressing request bodies"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"abstract":[{"type":"text","text":"Mustache template engine."}],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"title":"Mustache","url":"\/documentation\/mustache"}}}