{"topicSections":[{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)"]}],"abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustachetransformable"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"text":"The syntax for applying transforms is ","type":"text"},{"type":"codeVoice","code":"{{transform(variable)}}"},{"text":". Transforms can be applied to both","type":"text"},{"text":" ","type":"text"},{"text":"variables, sections and inverted sections.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"A simple example would be ensuring a string is lowercase.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["{{lowercased(myString)}}"]},{"inlineContent":[{"type":"text","text":"If applying a transform to a sequence then the closing element of the sequence should include the"},{"type":"text","text":" "},{"type":"text","text":"transform name eg"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["{{#reversed(sequence)}}{{.}}{{\\reversed(sequence)}}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"sections":[],"metadata":{"navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"externalID":"s:8Mustache0A13TransformableP","modules":[{"name":"Mustache"}],"symbolKind":"protocol","title":"MustacheTransformable","roleHeading":"Protocol"},"kind":"symbol","seeAlsoSections":[{"title":"Rendering","anchor":"Rendering","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"role":"symbol","kind":"symbol","url":"\/documentation\/mustache\/mustacheparent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","type":"topic","navigatorTitle":[{"text":"MustacheParent","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"title":"MustacheParent"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"title":"Mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","url":"\/documentation\/mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable/transform(_:)":{"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transform"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"type":"topic","title":"transform(_:)","url":"\/documentation\/mustache\/mustachetransformable\/transform(_:)","abstract":[],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","title":"MustacheLambda","type":"topic","url":"\/documentation\/mustache\/mustachelambda","navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLambda"}]},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"role":"symbol","kind":"symbol","url":"\/documentation\/mustache\/mustachecustomrenderable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","type":"topic","navigatorTitle":[{"text":"MustacheCustomRenderable","kind":"identifier"}],"abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheCustomRenderable"}],"title":"MustacheCustomRenderable"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"role":"symbol","kind":"symbol","url":"\/documentation\/mustache\/mustachetransformable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","type":"topic","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"title":"MustacheTransformable"}}}