{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"topicSections":[{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)"],"generated":true}],"metadata":{"role":"symbol","roleHeading":"Protocol","symbolKind":"protocol","modules":[{"name":"Mustache"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"title":"MustacheTransformable","externalID":"s:8Mustache0A13TransformableP","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}]},"seeAlsoSections":[{"anchor":"Rendering","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"title":"Rendering"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MustacheTransformable"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The syntax for applying transforms is "},{"type":"codeVoice","code":"{{transform(variable)}}"},{"type":"text","text":". Transforms can be applied to both"},{"text":" ","type":"text"},{"type":"text","text":"variables, sections and inverted sections."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A simple example would be ensuring a string is lowercase."}],"type":"paragraph"},{"code":["{{lowercased(myString)}}"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"If applying a transform to a sequence then the closing element of the sequence should include the"},{"type":"text","text":" "},{"type":"text","text":"transform name eg"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["{{#reversed(sequence)}}{{.}}{{\\reversed(sequence)}}"]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustachetransformable"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"title":"MustacheCustomRenderable","type":"topic","url":"\/documentation\/mustache\/mustachecustomrenderable","role":"symbol","abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MustacheCustomRenderable"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"type":"topic","url":"\/documentation\/mustache\/mustachetransformable","title":"MustacheTransformable","role":"symbol","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","kind":"symbol","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"title":"MustacheLambda","type":"topic","url":"\/documentation\/mustache\/mustachelambda","role":"symbol","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLambda"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"},"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"title":"Mustache","role":"collection","abstract":[{"type":"text","text":"Mustache template engine."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/mustache","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable/transform(_:)":{"url":"\/documentation\/mustache\/mustachetransformable\/transform(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)","title":"transform(_:)","abstract":[],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transform","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"?","kind":"text"}],"required":true},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","role":"collection","abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/index","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"url":"\/documentation\/mustache\/mustacheparent","type":"topic","title":"MustacheParent","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MustacheParent"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"kind":"symbol"}}}