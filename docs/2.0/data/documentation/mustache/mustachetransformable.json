{"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)"],"generated":true,"anchor":"Instance-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustachetransformable"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"metadata":{"title":"MustacheTransformable","modules":[{"name":"Mustache"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}],"symbolKind":"protocol","role":"symbol","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MustacheTransformable","kind":"identifier"}],"externalID":"s:8Mustache0A13TransformableP"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"generated":true,"anchor":"Rendering","title":"Rendering"}],"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MustacheTransformable","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The syntax for applying transforms is "},{"type":"codeVoice","code":"{{transform(variable)}}"},{"text":". Transforms can be applied to both","type":"text"},{"text":" ","type":"text"},{"text":"variables, sections and inverted sections.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A simple example would be ensuring a string is lowercase."}]},{"code":["{{lowercased(myString)}}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"If applying a transform to a sequence then the closing element of the sequence should include the"},{"type":"text","text":" "},{"text":"transform name eg","type":"text"}]},{"syntax":null,"type":"codeListing","code":["{{#reversed(sequence)}}{{.}}{{\\reversed(sequence)}}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"references":{"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"kind":"article","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"text":" ","type":"text"},{"type":"text","text":"of using Mirror"}],"url":"\/documentation\/mustache\/mustacheparent","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"title":"MustacheParent","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"code":"String(describing)","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheCustomRenderable","kind":"identifier"}],"type":"topic","title":"MustacheCustomRenderable","kind":"symbol","url":"\/documentation\/mustache\/mustachecustomrenderable"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"type":"text","text":" "},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"url":"\/documentation\/mustache\/mustachetransformable","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"title":"MustacheTransformable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable/transform(_:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)","abstract":[],"title":"transform(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"transform","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol","url":"\/documentation\/mustache\/mustachetransformable\/transform(_:)","required":true},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MustacheLambda"}],"type":"topic","title":"MustacheLambda","kind":"symbol","url":"\/documentation\/mustache\/mustachelambda"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Mustache template engine."}],"title":"Mustache","url":"\/documentation\/mustache","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","kind":"symbol"}}}