{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda\/init(_:)-20tuc"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"]]},"metadata":{"roleHeading":"Initializer","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?)"}],"externalID":"s:8Mustache0A6LambdaVyACypSgyccfc","symbolKind":"init","title":"init(_:)","modules":[{"name":"Mustache"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"cb","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" () -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":"?)"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"Function to be called by lambda","type":"text"}],"type":"paragraph"}],"name":"cb"}]}],"abstract":[{"text":"Initialize ","type":"text"},{"type":"codeVoice","code":"MustacheLambda"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustachelambda\/init(_:)-20tuc"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MustacheLambda","kind":"identifier"}],"abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"title":"MustacheLambda","url":"\/documentation\/mustache\/mustachelambda","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"},"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda/init(_:)-20tuc":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda\/init(_:)-20tuc","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(() -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Initialize "},{"code":"MustacheLambda","type":"codeVoice"}],"title":"init(_:)","url":"\/documentation\/mustache\/mustachelambda\/init(_:)-20tuc"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"title":"Hummingbird Documentation","url":"\/documentation\/index","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Mustache template engine.","type":"text"}],"kind":"symbol","type":"topic","title":"Mustache","role":"collection","url":"\/documentation\/mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"}}}