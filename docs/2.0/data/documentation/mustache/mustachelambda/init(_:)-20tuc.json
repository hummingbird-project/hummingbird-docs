{"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda\/init(_:)-20tuc","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initialize "},{"type":"codeVoice","code":"MustacheLambda"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustachelambda\/init(_:)-20tuc"]}],"metadata":{"modules":[{"name":"Mustache"}],"title":"init(_:)","roleHeading":"Initializer","symbolKind":"init","externalID":"s:8Mustache0A6LambdaVyACypSgyccfc","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"text":"Any","kind":"keyword"},{"text":"?)","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cb"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?)"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"cb","content":[{"inlineContent":[{"type":"text","text":"Function to be called by lambda"}],"type":"paragraph"}]}],"kind":"parameters"}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","url":"\/documentation\/mustache","type":"topic","role":"collection","abstract":[{"text":"Mustache template engine.","type":"text"}],"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"type":"topic","url":"\/documentation\/mustache\/mustachelambda","navigatorTitle":[{"text":"MustacheLambda","kind":"identifier"}],"title":"MustacheLambda","abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLambda","kind":"identifier"}]},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda/init(_:)-20tuc":{"type":"topic","url":"\/documentation\/mustache\/mustachelambda\/init(_:)-20tuc","kind":"symbol","abstract":[{"text":"Initialize ","type":"text"},{"code":"MustacheLambda","type":"codeVoice"}],"title":"init(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda\/init(_:)-20tuc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?)"}],"role":"symbol"}}}