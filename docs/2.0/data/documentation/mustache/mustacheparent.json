{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent"},"metadata":{"role":"symbol","symbolKind":"protocol","roleHeading":"Protocol","externalID":"s:8Mustache0A6ParentP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"title":"MustacheParent","modules":[{"name":"Mustache"}],"navigatorTitle":[{"text":"MustacheParent","kind":"identifier"}]},"topicSections":[{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)"],"title":"Instance Methods"}],"kind":"symbol","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"seeAlsoSections":[{"anchor":"Rendering","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"title":"Rendering"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustacheparent"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"languages":["swift"]}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"title":"MustacheParent","navigatorTitle":[{"text":"MustacheParent","kind":"identifier"}],"type":"topic","url":"\/documentation\/mustache\/mustacheparent","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","url":"\/documentation\/mustache\/mustachelambda","title":"MustacheLambda","navigatorTitle":[{"text":"MustacheLambda","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLambda","kind":"identifier"}],"type":"topic","abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent/child(named:)":{"title":"child(named:)","type":"topic","url":"\/documentation\/mustache\/mustacheparent\/child(named:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"child","kind":"identifier"},{"text":"(","kind":"text"},{"text":"named","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"role":"symbol","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)","required":true},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheCustomRenderable","kind":"identifier"}],"title":"MustacheCustomRenderable","navigatorTitle":[{"text":"MustacheCustomRenderable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","url":"\/documentation\/mustache\/mustachecustomrenderable","abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String(describing)"},{"text":".","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"kind":"symbol","title":"Mustache","url":"\/documentation\/mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","type":"topic","abstract":[{"text":"Mustache template engine.","type":"text"}]},"logo.png":{"identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"title":"MustacheTransformable","navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","url":"\/documentation\/mustache\/mustachetransformable","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}]}}}