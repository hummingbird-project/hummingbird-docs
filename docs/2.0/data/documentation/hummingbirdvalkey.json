{"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdValkey provides a driver for the Hummingbird persist framework to store key, value pairs between requests.","type":"text"}]},{"type":"codeListing","code":["let valkeyClient = ValkeyClient(","    .hostname(Self.valkeyHostname, port: 6379),","    logger: Logger(label: \"Valkey\")",")","let persist = ValkeyPersistDriver(client: valkeyClient)","let router = Router()","\/\/ return value from valkey database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in valkey database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add Valkey client as service to manage its lifecycle","app.addServices(valkeyClient)","try await app.runService()"],"syntax":"swift"}],"kind":"content"}],"topicSections":[{"title":"Storage","anchor":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey\/ValkeyPersistDriver"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdvalkey"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"abstract":[{"type":"text","text":"Add Valkey\/Redis support to Hummingbird server with valkey-swift."}],"hierarchy":{"paths":[[]]},"metadata":{"symbolKind":"module","modules":[{"name":"HummingbirdValkey"}],"title":"HummingbirdValkey","images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Framework","role":"collection","externalID":"HummingbirdValkey"},"kind":"symbol","seeAlsoSections":[{"title":"Related Documentation","anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsValkey"]},{"title":"Reference Documentation","generated":true,"anchor":"Reference-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"type":"topic","title":"Jobs","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"url":"\/documentation\/jobs","role":"collection"},"logo.png":{"alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdValkey":{"type":"topic","title":"HummingbirdValkey","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Add Valkey\/Redis support to Hummingbird server with valkey-swift."}],"url":"\/documentation\/hummingbirdvalkey","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"type":"topic","title":"HummingbirdLambda","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"url":"\/documentation\/hummingbirdlambda","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"type":"topic","title":"WSClient","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"url":"\/documentation\/wsclient","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"type":"topic","title":"HummingbirdCompression","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"url":"\/documentation\/hummingbirdcompression","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/JobsValkey":{"title":"JobsValkey","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsValkey","url":"\/documentation\/jobsvalkey","type":"topic","abstract":[{"type":"text","text":"Valkey\/Redis implementation for Hummingbird jobs framework"}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"type":"topic","title":"Mustache","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Mustache template engine."}],"url":"\/documentation\/mustache","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdValkey/ValkeyPersistDriver":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey\/ValkeyPersistDriver","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValkeyPersistDriver"}],"navigatorTitle":[{"kind":"identifier","text":"ValkeyPersistDriver"}],"title":"ValkeyPersistDriver","url":"\/documentation\/hummingbirdvalkey\/valkeypersistdriver","abstract":[{"text":"Valkey\/Redis driver for persist system for storing persistent cross request key\/value pairs","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"type":"topic","title":"HummingbirdFluent","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Integration with Vaporâ€™s Fluent ORM framework.","type":"text"}],"url":"\/documentation\/hummingbirdfluent","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"type":"topic","title":"HummingbirdPostgres","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Working with Postgres databases.","type":"text"}],"url":"\/documentation\/hummingbirdpostgres","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"type":"topic","kind":"symbol","role":"collection","title":"HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","images":[{"identifier":"logo.png","type":"icon"}]}}}