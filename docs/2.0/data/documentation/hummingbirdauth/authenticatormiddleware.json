{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware"},"sections":[],"metadata":{"title":"AuthenticatorMiddleware","externalID":"s:15HummingbirdAuth23AuthenticatorMiddlewareP","symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"modules":[{"name":"HummingbirdAuth"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AuthenticatorMiddleware"}],"roleHeading":"Protocol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/hummingbirdauth\/authenticatormiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"anchor":"Authenticators","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"],"generated":true,"title":"Authenticators"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AuthenticatorMiddleware"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16RouterMiddlewareP","text":"RouterMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"AuthRequestContext","preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Requires an ","type":"text"},{"code":"authenticate","type":"codeVoice"},{"text":" function that returns authentication data when successful.","type":"text"},{"type":"text","text":" "},{"text":"If it is unsuccessful then nil should be returned so middleware further down the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"middleware chain can do authentication. If you donâ€™t want any further middleware to"},{"text":" ","type":"text"},{"text":"run then throw an error.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use an authenticator middleware it is required that your request context conform to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext"},{"type":"text","text":" so the middleware can attach authentication data to"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/identity-swift.property"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"A simple username, password authenticator could be implemented as follows. If the","type":"text"},{"text":" ","type":"text"},{"text":"authenticator is successful it returns a ","type":"text"},{"type":"codeVoice","code":"User"},{"text":" struct, otherwise it returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct BasicAuthenticator<Context: AuthRequestContext>: AuthenticatorMiddleware {","    func authenticate(request: Request, context: Context) async throws -> User? {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.headers.basic","        guard let basic = request.headers.basic else { return nil }","        \/\/ check if user exists in the database","        guard let user = try await database.getUserWithUsername(basic.username) else {","            return nil","        }","        \/\/ verify password against password hash stored in database. If valid","        \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","        \/\/ This should be run on the thread pool as it is a long process.","        return try await context.threadPool.runIfActive {","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","    }","}"]}]}],"abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"kind":"symbol","topicSections":[{"title":"Associated Types","anchor":"Associated-Types","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Identity"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true}],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]},{"title":"Conforming Types","kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"title":"MiddlewareProtocol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/ClosureAuthenticator":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClosureAuthenticator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","url":"\/documentation\/hummingbirdauth\/closureauthenticator","kind":"symbol","navigatorTitle":[{"text":"ClosureAuthenticator","kind":"identifier"}],"type":"topic","title":"ClosureAuthenticator","abstract":[{"type":"text","text":"Authenticator that uses a closure to return authentication state"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthenticatorMiddleware"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}],"title":"AuthenticatorMiddleware","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware","abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","abstract":[{"text":"Middleware returning 401 for unauthenticated requests","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"title":"IsAuthenticatedMiddleware","url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Context","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","title":"Context","url":"\/documentation\/hummingbird\/middlewareprotocol\/context","type":"topic","required":true,"abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"kind":"article","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"title":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","url":"\/documentation\/hummingbirdcore\/response","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/Identity":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Identity","required":true,"abstract":[{"text":"Type to be authenticated","type":"text"}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Identity","kind":"identifier"}],"title":"Identity","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/identity","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdBasicAuth/BasicAuthenticator":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicAuthenticator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"BasicAuthenticator"}],"url":"\/documentation\/hummingbirdbasicauth\/basicauthenticator","kind":"symbol","title":"BasicAuthenticator","abstract":[{"text":"Basic password authenticator","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext/identity-swift.property":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/identity-swift.property","kind":"symbol","required":true,"abstract":[{"type":"text","text":"The authenticated identity"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"identity"},{"text":": ","kind":"text"},{"text":"Identity","preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP8IdentityQa","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"identity","type":"topic","url":"\/documentation\/hummingbirdauth\/authrequestcontext\/identity-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/authenticate(request:context:)":{"type":"topic","kind":"symbol","title":"authenticate(request:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)","abstract":[{"text":"Called by middleware to see if request can authenticate.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"authenticate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Identity","preciseIdentifier":"s:15HummingbirdAuth23AuthenticatorMiddlewareP8IdentityQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionAuthenticator":{"type":"topic","title":"SessionAuthenticator","navigatorTitle":[{"kind":"identifier","text":"SessionAuthenticator"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SessionAuthenticator","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/sessionauthenticator","role":"symbol","abstract":[{"type":"text","text":"Session authenticator"}]},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AuthRequestContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AuthRequestContext"}],"url":"\/documentation\/hummingbirdauth\/authrequestcontext","kind":"symbol","title":"AuthRequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"text":" ","type":"text"},{"type":"text","text":"authentication middleware"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"role":"symbol","type":"topic","abstract":[{"text":"Version of ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true,"type":"reference"},{"text":" whose Input is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":" and output is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"text":".","type":"text"}],"title":"RouterMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","url":"\/documentation\/hummingbird\/routermiddleware","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMiddleware"}],"navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"kind":"symbol"}}}