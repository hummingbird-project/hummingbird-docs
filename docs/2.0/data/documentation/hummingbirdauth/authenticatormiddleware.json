{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"],"title":"Authenticators","anchor":"Authenticators","generated":true}],"metadata":{"roleHeading":"Protocol","externalID":"s:15HummingbirdAuth23AuthenticatorMiddlewareP","symbolKind":"protocol","modules":[{"name":"HummingbirdAuth"}],"title":"AuthenticatorMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AuthenticatorMiddleware"}]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom"},{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator"],"title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/authenticatormiddleware"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"]]},"abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Identity"],"title":"Associated Types","anchor":"Associated-Types","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird16RouterMiddlewareP","text":"RouterMiddleware","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","text":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP","kind":"typeIdentifier","text":"AuthRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Requires an "},{"type":"codeVoice","code":"authenticate"},{"type":"text","text":" function that returns authentication data when successful."},{"type":"text","text":" "},{"type":"text","text":"If it is unsuccessful then nil should be returned so middleware further down the"},{"type":"text","text":" "},{"type":"text","text":"middleware chain can do authentication. If you donâ€™t want any further middleware to"},{"type":"text","text":" "},{"type":"text","text":"run then throw an error."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use an authenticator middleware it is required that your request context conform to"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","type":"reference","isActive":true},{"type":"text","text":" so the middleware can attach authentication data to"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/identity-swift.property","type":"reference","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A simple username, password authenticator could be implemented as follows. If the"},{"type":"text","text":" "},{"type":"text","text":"authenticator is successful it returns a "},{"type":"codeVoice","code":"User"},{"type":"text","text":" struct, otherwise it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"syntax":"swift","type":"codeListing","code":["struct BasicAuthenticator<Context: AuthRequestContext>: AuthenticatorMiddleware {","    func authenticate(request: Request, context: Context) async throws -> User? {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.headers.basic","        guard let basic = request.headers.basic else { return nil }","        \/\/ check if user exists in the database","        guard let user = try await database.getUserWithUsername(basic.username) else {","            return nil","        }","        \/\/ verify password against password hash stored in database. If valid","        \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","        \/\/ This should be run on the thread pool as it is a long process.","        return try await context.threadPool.runIfActive {","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","    }","}"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","title":"Request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"url":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"title":"RouterMiddleware","url":"\/documentation\/hummingbird\/routermiddleware","abstract":[{"type":"text","text":"Version of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},{"type":"text","text":" whose Input is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":" and output is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionAuthenticator":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"SessionAuthenticator","kind":"identifier"}],"title":"SessionAuthenticator","url":"\/documentation\/hummingbirdauth\/sessionauthenticator","abstract":[{"type":"text","text":"Session authenticator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionAuthenticator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/authenticate(request:context:)":{"title":"authenticate(request:context:)","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)","required":true,"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"authenticate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Identity","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth23AuthenticatorMiddlewareP8IdentityQa"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol","abstract":[{"text":"Called by middleware to see if request can authenticate.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/Identity":{"title":"Identity","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/identity","required":true,"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Identity","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Identity","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Type to be authenticated"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"title":"Context","url":"\/documentation\/hummingbird\/middlewareprotocol\/context","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[]},"logo.png":{"alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"title":"MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AuthenticatorMiddleware"}],"title":"AuthenticatorMiddleware","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware","abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthenticatorMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"title":"IsAuthenticatedMiddleware","url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"Middleware returning 401 for unauthenticated requests","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdBasicAuth/BasicAuthenticator":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"BasicAuthenticator","kind":"identifier"}],"title":"BasicAuthenticator","url":"\/documentation\/hummingbirdbasicauth\/basicauthenticator","abstract":[{"text":"Basic password authenticator","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicAuthenticator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext/identity-swift.property":{"type":"topic","role":"symbol","title":"identity","url":"\/documentation\/hummingbirdauth\/authrequestcontext\/identity-swift.property","required":true,"abstract":[{"text":"The authenticated identity","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/identity-swift.property","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"identity","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Identity","preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP8IdentityQa","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"url":"\/documentation\/hummingbirdauth\/authrequestcontext","title":"AuthRequestContext","navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthRequestContext","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"url":"\/documentation\/hummingbirdcore\/response","title":"Response","navigatorTitle":[{"text":"Response","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/ClosureAuthenticator":{"url":"\/documentation\/hummingbirdauth\/closureauthenticator","title":"ClosureAuthenticator","navigatorTitle":[{"text":"ClosureAuthenticator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClosureAuthenticator","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Authenticator that uses a closure to return authentication state"}]}}}