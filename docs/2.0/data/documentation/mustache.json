{"metadata":{"modules":[{"name":"Mustache"}],"externalID":"Mustache","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"symbolKind":"module","title":"Mustache","roleHeading":"Framework"},"sections":[],"kind":"symbol","seeAlsoSections":[{"generated":true,"anchor":"Reference-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"title":"Reference Documentation"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Mustache template engine.","type":"text"}],"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","interfaceLanguage":"swift"},"primaryContentSections":[{"mentions":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OTPAuthenticationExample","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TodosAuthExample"],"kind":"mentions"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Mustache is a “logic-less” templating language commonly used in web and mobile platforms. You can find out more about it from the ","type":"text"},{"isActive":true,"identifier":"http:\/\/mustache.github.io\/mustache.5.html","type":"reference"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"While swift-mustache has been designed to be used with the Hummingbird server framework, it has no dependencies and can be used as a standalone library.","type":"text"}]},{"type":"heading","text":"Usage","level":2,"anchor":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Load your templates from the filesystem"}]},{"type":"codeListing","code":["let library = MustacheLibrary(\"folder\/my\/templates\/are\/in\")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This will look for all the files with the extension ","type":"text"},{"code":".mustache","type":"codeVoice"},{"text":" in the specified folder and subfolders and attempt to load them. Each file is registered with the name of the file (with subfolder, if inside a subfolder) minus the ","type":"text"},{"code":".mustache","type":"codeVoice"},{"text":" extension.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following code shows how to render an object with a template:"}]},{"type":"codeListing","code":["let output = library.render(object, withTemplate: \"myTemplate\")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"code":"Mustache","type":"codeVoice"},{"text":" treats an object as a set of key\/value pairs when rendering and renders both dictionaries and objects via ","type":"text"},{"code":"Mirror","type":"codeVoice"},{"text":" reflection.","type":"text"}]},{"type":"heading","text":"Support","level":2,"anchor":"Support"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mustache supports all standard Mustache tags and is fully compliant with the Mustache "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/mustache\/spec"},{"type":"text","text":" with the exception of the Lambda support."}]}],"kind":"content"}],"topicSections":[{"anchor":"Template-Library","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLibrary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTemplate"],"title":"Template Library"},{"anchor":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"title":"Rendering"},{"anchor":"Content-Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentTypes"],"title":"Content Types"},{"generated":true,"anchor":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheSequence"],"title":"Protocols"},{"generated":true,"anchor":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParserContext"],"title":"Structures"}],"variants":[{"paths":["\/documentation\/mustache"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TodosAuthExample":{"role":"article","type":"topic","title":"Todos with Authentication Example","url":"\/documentation\/hummingbird\/todosauthexample","abstract":[{"type":"text","text":"Example combining Authentication with CRUD operations using fluent-kit"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TodosAuthExample","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","type":"topic","role":"collection","abstract":[{"type":"text","text":"Working with Postgres databases."}],"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLibrary":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLibrary","kind":"symbol","abstract":[{"type":"text","text":"Class holding a collection of mustache templates."}],"title":"MustacheLibrary","type":"topic","navigatorTitle":[{"text":"MustacheLibrary","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLibrary","kind":"identifier"}],"url":"\/documentation\/mustache\/mustachelibrary"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheContentType":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentType","kind":"symbol","abstract":[{"text":"Protocol for content types","type":"text"}],"type":"topic","title":"MustacheContentType","navigatorTitle":[{"text":"MustacheContentType","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheContentType","kind":"identifier"}],"url":"\/documentation\/mustache\/mustachecontenttype"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"kind":"symbol","abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheCustomRenderable"}],"type":"topic","url":"\/documentation\/mustache\/mustachecustomrenderable","navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"title":"MustacheCustomRenderable"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","role":"symbol","title":"MustacheTransformable","kind":"symbol","url":"\/documentation\/mustache\/mustachetransformable","abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}]},"http://mustache.github.io/mustache.5.html":{"identifier":"http:\/\/mustache.github.io\/mustache.5.html","titleInlineContent":[{"type":"text","text":"mustache manual"}],"type":"link","title":"mustache manual","url":"http:\/\/mustache.github.io\/mustache.5.html"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheContentTypes":{"title":"MustacheContentTypes","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentTypes","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheContentTypes"}],"kind":"symbol","abstract":[{"type":"text","text":"Map of strings to content types."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheContentTypes"}],"url":"\/documentation\/mustache\/mustachecontenttypes"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"type":"topic","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdwebsocket","kind":"symbol","title":"HummingbirdWebSocket","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheSequence":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheSequence","role":"symbol","title":"MustacheSequence","kind":"symbol","url":"\/documentation\/mustache\/mustachesequence","abstract":[{"text":"Protocol for objects that can be rendered as a sequence in Mustache","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheSequence"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheSequence"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParserContext":{"role":"symbol","type":"topic","abstract":[{"text":"context used in parser error","type":"text"}],"url":"\/documentation\/mustache\/mustacheparsercontext","title":"MustacheParserContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParserContext","kind":"identifier"}],"navigatorTitle":[{"text":"MustacheParserContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParserContext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTemplate":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTemplate","title":"MustacheTemplate","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheTemplate"}],"kind":"symbol","abstract":[{"text":"Class holding Mustache template","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTemplate"}],"url":"\/documentation\/mustache\/mustachetemplate"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"role":"symbol","type":"topic","title":"MustacheParent","url":"\/documentation\/mustache\/mustacheparent","abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"type":"topic","url":"\/documentation\/mustache\/mustachelambda","navigatorTitle":[{"text":"MustacheLambda","kind":"identifier"}],"title":"MustacheLambda","abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLambda","kind":"identifier"}]},"https://github.com/mustache/spec":{"type":"link","titleInlineContent":[{"text":"spec","type":"text"}],"identifier":"https:\/\/github.com\/mustache\/spec","title":"spec","url":"https:\/\/github.com\/mustache\/spec"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdcore","kind":"symbol","title":"HummingbirdCore","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/OTPAuthenticationExample":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OTPAuthenticationExample","url":"\/documentation\/hummingbird\/otpauthenticationexample","type":"topic","role":"article","abstract":[{"type":"text","text":"Example demonstrating how to setup one time passwords, using sessions."}],"kind":"article","title":"OTP Authentication Example"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","url":"\/documentation\/wsclient","type":"topic","role":"collection","abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"WSClient"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","url":"\/documentation\/mustache","type":"topic","role":"collection","abstract":[{"text":"Mustache template engine.","type":"text"}],"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","url":"\/documentation\/hummingbirdauth","type":"topic","role":"collection","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"type":"topic","role":"collection","title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection","url":"\/documentation\/jobs","title":"Jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","url":"\/documentation\/postgresmigrations","type":"topic","role":"collection","abstract":[{"type":"text","text":"Postgres database migration service"}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"PostgresMigrations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","url":"\/documentation\/hummingbirdcompression","type":"topic","role":"collection","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdCompression"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"type":"topic","abstract":[{"type":"text","text":"Integration with Vapor’s Fluent ORM framework."}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdfluent","kind":"symbol","title":"HummingbirdFluent","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdValkey":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","url":"\/documentation\/hummingbirdvalkey","type":"topic","role":"collection","abstract":[{"type":"text","text":"Add Valkey\/Redis support to Hummingbird server with valkey-swift."}],"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdValkey"}}}