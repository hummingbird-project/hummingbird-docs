{"hierarchy":{"paths":[[]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Mustache template engine.","type":"text"}],"metadata":{"modules":[{"name":"Mustache"}],"externalID":"Mustache","title":"Mustache","symbolKind":"module","roleHeading":"Framework","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLibrary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTemplate"],"anchor":"Template-Library","title":"Template Library"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"anchor":"Rendering","title":"Rendering"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentTypes"],"anchor":"Content-Types","title":"Content Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheSequence"],"anchor":"Protocols","generated":true,"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParserContext"],"anchor":"Structures","generated":true,"title":"Structures"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"},"kind":"symbol","sections":[],"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mustache is a “logic-less” templating language commonly used in web and mobile platforms. You can find out more about Mustache "},{"type":"reference","identifier":"http:\/\/mustache.github.io\/mustache.5.html","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"While swift-mustache has been designed to be used with the Hummingbird server framework it has no dependencies and can be used as a standalone library.","type":"text"}]},{"type":"heading","level":2,"text":"Usage","anchor":"Usage"},{"type":"paragraph","inlineContent":[{"text":"Load your templates from the filesystem","type":"text"}]},{"type":"codeListing","code":["let library = MustacheLibrary(\"folder\/my\/templates\/are\/in\")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will look for all the files with the extension “.mustache” in the specified folder and subfolders and attempt to load them. Each file is registed with the name of the file (with subfolder, if inside a subfolder) minus the “mustache” extension."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Render an object with a template"}]},{"type":"codeListing","code":["let output = library.render(object, withTemplate: \"myTemplate\")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Mustache"},{"type":"text","text":" treats an object as a set of key\/value pairs when rendering and will render both dictionaries and objects via "},{"type":"codeVoice","code":"Mirror"},{"type":"text","text":" reflection."}]},{"type":"heading","level":2,"text":"Support","anchor":"Support"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mustache supports all standard Mustache tags and is fully compliant with the Mustache "},{"type":"reference","identifier":"https:\/\/github.com\/mustache\/spec","isActive":true},{"type":"text","text":" with the exception of the Lambda support."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"anchor":"Reference-Documentation","generated":true,"title":"Reference Documentation"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"type":"topic","title":"HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheContentType":{"title":"MustacheContentType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheContentType"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentType","url":"\/documentation\/mustache\/mustachecontenttype","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheContentType"}],"abstract":[{"type":"text","text":"Protocol for content types"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"abstract":[{"type":"text","text":"Mustache template engine."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/mustache","role":"collection","title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"title":"MustacheParent","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"url":"\/documentation\/mustache\/mustacheparent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"http://mustache.github.io/mustache.5.html":{"identifier":"http:\/\/mustache.github.io\/mustache.5.html","title":"here","titleInlineContent":[{"type":"text","text":"here"}],"url":"http:\/\/mustache.github.io\/mustache.5.html","type":"link"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"abstract":[{"text":"Working with Postgres databases.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdpostgres","role":"collection","title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"type":"topic","title":"HummingbirdWebSocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheSequence":{"url":"\/documentation\/mustache\/mustachesequence","abstract":[{"type":"text","text":"Protocol for objects that can be rendered as a sequence in Mustache"}],"role":"symbol","navigatorTitle":[{"text":"MustacheSequence","kind":"identifier"}],"title":"MustacheSequence","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheSequence","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheSequence","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"title":"HummingbirdCompression","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdcompression","role":"collection","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParserContext":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParserContext"}],"kind":"symbol","url":"\/documentation\/mustache\/mustacheparsercontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParserContext","navigatorTitle":[{"kind":"identifier","text":"MustacheParserContext"}],"abstract":[{"text":"context used in parser error","type":"text"}],"title":"MustacheParserContext","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"role":"symbol","abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String(describing)"},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheCustomRenderable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"url":"\/documentation\/mustache\/mustachecustomrenderable","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","type":"topic","title":"MustacheCustomRenderable"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"type":"topic","title":"WSClient","url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheContentTypes":{"title":"MustacheContentTypes","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheContentTypes"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentTypes","type":"topic","url":"\/documentation\/mustache\/mustachecontenttypes","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheContentTypes"}],"abstract":[{"type":"text","text":"Map of strings to content types."}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"role":"symbol","abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"url":"\/documentation\/mustache\/mustachetransformable","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","type":"topic","title":"MustacheTransformable"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"type":"topic","title":"MustacheLambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","url":"\/documentation\/mustache\/mustachelambda","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLambda"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdredis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"type":"topic","title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTemplate":{"role":"symbol","abstract":[{"type":"text","text":"Class holding Mustache template"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTemplate","kind":"identifier"}],"navigatorTitle":[{"text":"MustacheTemplate","kind":"identifier"}],"url":"\/documentation\/mustache\/mustachetemplate","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTemplate","type":"topic","title":"MustacheTemplate"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/jobs","title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdlambda","role":"collection","title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLibrary":{"role":"symbol","abstract":[{"text":"Class holding a collection of mustache templates.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLibrary","kind":"identifier"}],"navigatorTitle":[{"text":"MustacheLibrary","kind":"identifier"}],"url":"\/documentation\/mustache\/mustachelibrary","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLibrary","type":"topic","title":"MustacheLibrary"},"https://github.com/mustache/spec":{"identifier":"https:\/\/github.com\/mustache\/spec","titleInlineContent":[{"text":"spec","type":"text"}],"title":"spec","type":"link","url":"https:\/\/github.com\/mustache\/spec"}}}