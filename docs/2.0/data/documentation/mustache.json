{"sections":[],"abstract":[{"type":"text","text":"Mustache template engine."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"},"hierarchy":{"paths":[[]]},"metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","title":"Mustache","roleHeading":"Framework","modules":[{"name":"Mustache"}],"symbolKind":"module","externalID":"Mustache"},"kind":"symbol","seeAlsoSections":[{"generated":true,"anchor":"Reference-Documentation","title":"Reference Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"]}],"topicSections":[{"anchor":"Template-Library","title":"Template Library","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLibrary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTemplate"]},{"anchor":"Rendering","title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"]},{"anchor":"Content-Types","title":"Content Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentTypes"]},{"generated":true,"anchor":"Protocols","title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheSequence"]},{"generated":true,"anchor":"Structures","title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParserContext"]}],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"text":"Mustache is a “logic-less” templating language commonly used in web and mobile platforms. You can find out more about it from the ","type":"text"},{"type":"reference","isActive":true,"identifier":"http:\/\/mustache.github.io\/mustache.5.html"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"While swift-mustache has been designed to be used with the Hummingbird server framework, it has no dependencies and can be used as a standalone library.","type":"text"}],"type":"paragraph"},{"text":"Usage","type":"heading","level":2,"anchor":"Usage"},{"inlineContent":[{"type":"text","text":"Load your templates from the filesystem"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let library = MustacheLibrary(\"folder\/my\/templates\/are\/in\")"]},{"inlineContent":[{"type":"text","text":"This will look for all the files with the extension "},{"code":".mustache","type":"codeVoice"},{"type":"text","text":" in the specified folder and subfolders and attempt to load them. Each file is registered with the name of the file (with subfolder, if inside a subfolder) minus the "},{"code":".mustache","type":"codeVoice"},{"type":"text","text":" extension."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The following code shows how to render an object with a template:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let output = library.render(object, withTemplate: \"myTemplate\")"]},{"inlineContent":[{"type":"codeVoice","code":"Mustache"},{"type":"text","text":" treats an object as a set of key\/value pairs when rendering and renders both dictionaries and objects via "},{"type":"codeVoice","code":"Mirror"},{"type":"text","text":" reflection."}],"type":"paragraph"},{"text":"Support","type":"heading","level":2,"anchor":"Support"},{"inlineContent":[{"type":"text","text":"Mustache supports all standard Mustache tags and is fully compliant with the Mustache "},{"identifier":"https:\/\/github.com\/mustache\/spec","type":"reference","isActive":true},{"type":"text","text":" with the exception of the Lambda support."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"kind":"symbol","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","title":"WSClient"},"logo.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"role":"collection","abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","title":"HummingbirdFluent","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"role":"collection","abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","url":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheContentType":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentType","title":"MustacheContentType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheContentType"}],"abstract":[{"type":"text","text":"Protocol for content types"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"MustacheContentType"}],"url":"\/documentation\/mustache\/mustachecontenttype"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","kind":"symbol","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"url":"\/documentation\/jobs","title":"Jobs","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","url":"\/documentation\/mustache\/mustacheparent","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"type":"topic","title":"MustacheParent","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParserContext":{"kind":"symbol","abstract":[{"text":"context used in parser error","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParserContext"}],"type":"topic","role":"symbol","url":"\/documentation\/mustache\/mustacheparsercontext","navigatorTitle":[{"kind":"identifier","text":"MustacheParserContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParserContext","title":"MustacheParserContext"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheSequence":{"abstract":[{"type":"text","text":"Protocol for objects that can be rendered as a sequence in Mustache"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheSequence","kind":"identifier"}],"navigatorTitle":[{"text":"MustacheSequence","kind":"identifier"}],"title":"MustacheSequence","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheSequence","url":"\/documentation\/mustache\/mustachesequence","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"role":"collection","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","title":"HummingbirdPostgres","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"url":"\/documentation\/mustache\/mustachetransformable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"title":"MustacheTransformable","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"role":"collection","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","url":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"http://mustache.github.io/mustache.5.html":{"titleInlineContent":[{"type":"text","text":"mustache manual"}],"url":"http:\/\/mustache.github.io\/mustache.5.html","type":"link","identifier":"http:\/\/mustache.github.io\/mustache.5.html","title":"mustache manual"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"role":"collection","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","title":"HummingbirdWebSocket","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTemplate":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTemplate","title":"MustacheTemplate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTemplate","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/mustache\/mustachetemplate","navigatorTitle":[{"text":"MustacheTemplate","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Class holding Mustache template"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheContentTypes":{"type":"topic","title":"MustacheContentTypes","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheContentTypes","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/mustache\/mustachecontenttypes","navigatorTitle":[{"text":"MustacheContentTypes","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Map of strings to content types."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentTypes"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","url":"\/documentation\/mustache\/mustachecustomrenderable","abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheCustomRenderable"}],"type":"topic","title":"MustacheCustomRenderable","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","url":"\/documentation\/hummingbirdredis","title":"HummingbirdRedis","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"role":"collection","abstract":[{"type":"text","text":"Mustache template engine."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","url":"\/documentation\/mustache","title":"Mustache","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLambda"}],"role":"symbol","type":"topic","url":"\/documentation\/mustache\/mustachelambda","navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","kind":"symbol","title":"MustacheLambda","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLibrary":{"navigatorTitle":[{"kind":"identifier","text":"MustacheLibrary"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLibrary","abstract":[{"text":"Class holding a collection of mustache templates.","type":"text"}],"url":"\/documentation\/mustache\/mustachelibrary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLibrary"}],"type":"topic","title":"MustacheLibrary","kind":"symbol"},"https://github.com/mustache/spec":{"type":"link","identifier":"https:\/\/github.com\/mustache\/spec","title":"spec","titleInlineContent":[{"type":"text","text":"spec"}],"url":"https:\/\/github.com\/mustache\/spec"}}}