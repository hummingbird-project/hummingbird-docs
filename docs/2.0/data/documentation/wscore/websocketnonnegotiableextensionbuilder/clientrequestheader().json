{"abstract":[{"text":"construct client request header","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketNonNegotiableExtensionBuilder\/clientRequestHeader()","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wscore\/websocketnonnegotiableextensionbuilder\/clientrequestheader()"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketNonNegotiableExtensionBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketNonNegotiableExtensionBuilder\/WebSocketExtensionBuilder-Implementations"]]},"metadata":{"extendedModule":"WSCore","externalID":"s:6WSCore38WebSocketNonNegotiableExtensionBuilderV19clientRequestHeaderSSyF","symbolKind":"method","roleHeading":"Instance Method","conformance":{"constraints":[{"type":"codeVoice","code":"Extension"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"WebSocketExtension"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"clientRequestHeader","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"modules":[{"name":"WSCore"}],"role":"symbol","title":"clientRequestHeader()"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clientRequestHeader","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]}],"kind":"declarations"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketNonNegotiableExtensionBuilder/WebSocketExtensionBuilder-Implementations":{"kind":"article","role":"collectionGroup","url":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder\/websocketextensionbuilder-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketNonNegotiableExtensionBuilder\/WebSocketExtensionBuilder-Implementations","title":"WebSocketExtensionBuilder Implementations","abstract":[],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/WSCore":{"url":"\/documentation\/wscore","type":"topic","abstract":[],"title":"WSCore","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketNonNegotiableExtensionBuilder":{"url":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketNonNegotiableExtensionBuilder","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WebSocketNonNegotiableExtensionBuilder"}],"type":"topic","abstract":[{"text":"A WebSocket extension that is applied without any negotiation with the other side","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"WebSocketNonNegotiableExtensionBuilder"}],"title":"WebSocketNonNegotiableExtensionBuilder"},"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketNonNegotiableExtensionBuilder/clientRequestHeader()":{"url":"\/documentation\/wscore\/websocketnonnegotiableextensionbuilder\/clientrequestheader()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketNonNegotiableExtensionBuilder\/clientRequestHeader()","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Extension"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"WebSocketExtension"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clientRequestHeader","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"construct client request header","type":"text"}],"title":"clientRequestHeader()"}}}