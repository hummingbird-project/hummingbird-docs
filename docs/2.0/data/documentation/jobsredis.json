{"kind":"symbol","metadata":{"title":"JobsRedis","externalID":"JobsRedis","modules":[{"name":"JobsRedis"}],"images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","roleHeading":"Framework","symbolKind":"module"},"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]},{"anchor":"Reference","title":"Reference","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],"generated":true}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Hummingbird Jobs Queue driver using ","type":"text"},{"identifier":"https:\/\/github.com\/swift-server\/redistack","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"heading","anchor":"Setup","text":"Setup","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Currently "},{"type":"codeVoice","code":"RediStack"},{"type":"text","text":" is not setup to use "},{"type":"codeVoice","code":"ServiceLifecycle"},{"type":"text","text":". So to ensure clean shutdown of "},{"type":"codeVoice","code":"RediStack"},{"type":"text","text":" you either need to use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"},{"type":"text","text":" that is part of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},{"type":"text","text":" or write your own "},{"type":"codeVoice","code":"Service"},{"type":"text","text":" type that will manage the shutdown of a "},{"type":"codeVoice","code":"RedisConnectionPool"},{"type":"text","text":"."}]},{"type":"heading","anchor":"Using-HummingbirdRedis","text":"Using HummingbirdRedis","level":4},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you choose to use "},{"code":"HummingbirdRedis","type":"codeVoice"},{"type":"text","text":" you can setup a JobQueue using "},{"code":"RediStack","type":"codeVoice"},{"type":"text","text":" as follows"}]},{"type":"codeListing","code":["let redisService = try RedisConnectionPoolService(","    .init(hostname: redisHost, port: 6379),","    logger: logger",")","let jobQueue = JobQueue(","    .redis(","        redisService.pool, ","        configuration: .init(","            queueKey: \"MyJobQueue\", ","            pollTime: .milliseconds(50)","        )","    ),","    numWorkers: 10,","    logger: logger",")","let serviceGroup = ServiceGroup(","    configuration: .init(","        services: [redisService, jobQueue],","        gracefulShutdownSignals: [.sigterm, .sigint],","        logger: logger","    )",")","try await serviceGroup.run()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The Redis job queue configuration includes two values.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"queueKey","type":"codeVoice"},{"type":"text","text":": Prefix to all the Redis keys used to store queues."}]}]},{"content":[{"inlineContent":[{"code":"pollTime","type":"codeVoice"},{"text":": This is the amount of time between the last time the queue was empty and the next time the driver starts looking for pending jobs.","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Write-RedisConnectionPool-Service","text":"Write RedisConnectionPool Service","level":4},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively you can write your own "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" to manage the lifecycle of the "},{"code":"RedisConnectionPool","type":"codeVoice"},{"type":"text","text":". This basically keeps a reference to the "},{"code":"RedisConnectionPool","type":"codeVoice"},{"type":"text","text":" and waits for graceful shutdown. At graceful shutdown it will close the connection pool. Unfortunately "},{"code":"RedisConnectionPool","type":"codeVoice"},{"type":"text","text":" is not "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" so we either have to add an "},{"code":"@unchecked Sendable","type":"codeVoice"},{"type":"text","text":" to "},{"code":"RedisConnectionPoolService","type":"codeVoice"},{"type":"text","text":" or import "},{"code":"RediStack","type":"codeVoice"},{"type":"text","text":" using "},{"code":"@preconcurrency","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","code":["struct RedisConnectionPoolService: Service, @unchecked Sendable {","    let pool: RedisConnectionPool","","    public func run() async throws {","        \/\/ Wait for graceful shutdown and ignore cancellation error","        try? await gracefulShutdown()","        \/\/ close connection pool","        let promise = self.pool.eventLoop.makePromise(of: Void.self)","        self.pool.close(promise: promise)","        return try await promise.futureResult.get()","    }","}"],"syntax":"swift"},{"type":"heading","anchor":"Additional-Features","text":"Additional Features","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are features specific to the Redis Job Queue implementation."}]},{"type":"heading","anchor":"Push-Options","text":"Push Options","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"When pushing a job to the queue there are a number of options you can provide."}]},{"type":"heading","anchor":"Delaying-jobs","text":"Delaying jobs","level":4},{"type":"paragraph","inlineContent":[{"text":"As with all queue drivers you can add a delay before a job is processed. The job will sit in the pending queue and will not be available for processing until time has passed its delay until time.","type":"text"}]},{"type":"codeListing","code":["\/\/ Add TestJob to the queue, but don't process it for 2 minutes","try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))"],"syntax":"swift"},{"type":"heading","anchor":"Cancellation","text":"Cancellation","level":3},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","isActive":true,"type":"reference"},{"text":" conforms to protocol ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue","isActive":true,"type":"reference"},{"text":". This requires support for cancelling jobs that are in the pending queue. It adds one new function ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/cancel(jobID:)","isActive":true,"type":"reference"},{"text":". If you supply this function with the ","type":"text"},{"code":"JobID","type":"codeVoice"},{"text":" returned by ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)","isActive":true,"type":"reference"},{"text":" it will remove it from the pending queue.","type":"text"}]},{"type":"codeListing","code":["\/\/ Add TestJob to the queue and immediately cancel it","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.cancel(jobID: jobID)"],"syntax":"swift"},{"type":"heading","anchor":"Pause-and-Resume","text":"Pause and Resume","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","isActive":true},{"type":"text","text":" conforms to protocol "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue","isActive":true},{"type":"text","text":". This requires support for pausing and resuming jobs that are in the pending queue. It adds two new functions "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/pause(jobID:)","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/resume(jobID:)","isActive":true},{"type":"text","text":". If you supply these function with the "},{"type":"codeVoice","code":"JobID"},{"type":"text","text":" returned by "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)","isActive":true},{"type":"text","text":" you can remove from the pending queue and add them back in at a later date."}]},{"type":"codeListing","code":["\/\/ Add TestJob to the queue and immediately remove it and then add it back to the queue","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.pause(jobID: jobID)","try await jobQueue.resume(jobID: jobID)"],"syntax":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"},"sections":[],"topicSections":[{"anchor":"Job-Queue","title":"Job Queue","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue"]},{"anchor":"Enumerations","title":"Enumerations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisScriptFlush"],"generated":true}],"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/jobsredis"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisScriptFlush":{"title":"RedisScriptFlush","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisScriptFlush","navigatorTitle":[{"kind":"identifier","text":"RedisScriptFlush"}],"abstract":[{"type":"text","text":"Script flush mode"}],"type":"topic","url":"\/documentation\/jobsredis\/redisscriptflush","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisScriptFlush"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/resume(jobID:)":{"title":"resume(jobID:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/resume(jobID:)","abstract":[{"text":"Moved paused job back onto pending queue","type":"text"}],"type":"topic","url":"\/documentation\/jobsredis\/redisjobqueue\/resume(jobid:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resume"},{"kind":"text","text":"("},{"kind":"externalParam","text":"jobID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV","text":"JobID"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","kind":"symbol"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"https://github.com/swift-server/redistack":{"url":"https:\/\/github.com\/swift-server\/redistack","title":"RediStack","titleInlineContent":[{"type":"text","text":"RediStack"}],"type":"link","identifier":"https:\/\/github.com\/swift-server\/redistack"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/pause(jobID:)":{"abstract":[{"text":"Temporarily remove job from pending queue","type":"text"}],"type":"topic","url":"\/documentation\/jobsredis\/redisjobqueue\/pause(jobid:)","title":"pause(jobID:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/pause(jobID:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pause"},{"kind":"text","text":"("},{"kind":"externalParam","text":"jobID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JobID","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolService"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolService"}],"abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}],"title":"RedisConnectionPoolService","kind":"symbol","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","title":"JobsPostgres","url":"\/documentation\/jobspostgres","abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/push(_:options:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Push job data onto queue","type":"text"}],"url":"\/documentation\/jobsredis\/redisjobqueue\/push(_:options:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)","role":"symbol","title":"push(_:options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Parameters","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"JobRequest","kind":"typeIdentifier","preciseIdentifier":"s:4Jobs10JobRequestV"},{"text":"<","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC4push_7optionsAC0C2IDV0A00C7RequestVyxG_AC0C7OptionsVtYaKAH0C10ParametersRzlF0J0L_xmfp"},{"text":">, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JobOptions","kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C7OptionsV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"JobID","kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/cancel(jobID:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/cancel(jobID:)","url":"\/documentation\/jobsredis\/redisjobqueue\/cancel(jobid:)","abstract":[{"text":"Cancels a job","type":"text"}],"kind":"symbol","type":"topic","title":"cancel(jobID:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"("},{"kind":"externalParam","text":"jobID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV","text":"JobID"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"title":"RedisJobQueue","kind":"symbol","type":"topic","url":"\/documentation\/jobsredis\/redisjobqueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisJobQueue","kind":"identifier"}],"navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Redis implementation of job queue driver","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/CancellableJobQueue":{"abstract":[{"text":"Protocol for Job queue driver which implement cancellable jobs","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancellableJobQueue"}],"type":"topic","kind":"symbol","title":"CancellableJobQueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue","url":"\/documentation\/jobs\/cancellablejobqueue","navigatorTitle":[{"kind":"identifier","text":"CancellableJobQueue"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"type":"topic","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdredis","title":"HummingbirdRedis","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"JobsRedis","kind":"symbol","type":"topic","url":"\/documentation\/jobsredis","role":"collection","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/jobs","kind":"symbol","type":"topic","title":"Jobs","role":"collection","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/ResumableJobQueue":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResumableJobQueue","kind":"identifier"}],"abstract":[{"text":"Protocol for Job queue driver which implements resumable jobs","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ResumableJobQueue","kind":"identifier"}],"url":"\/documentation\/jobs\/resumablejobqueue","title":"ResumableJobQueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue"}}}