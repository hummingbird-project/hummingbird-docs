{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation","anchor":"Related-Documentation"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],"title":"Reference","generated":true,"anchor":"Reference"}],"kind":"symbol","hierarchy":{"paths":[[]]},"metadata":{"externalID":"JobsRedis","modules":[{"name":"JobsRedis"}],"images":[{"type":"icon","identifier":"logo.png"}],"title":"JobsRedis","role":"collection","symbolKind":"module","roleHeading":"Framework"},"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Hummingbird Jobs Queue driver using "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/swift-server\/redistack"},{"type":"text","text":"."}]},{"level":3,"type":"heading","anchor":"Setup","text":"Setup"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Currently "},{"code":"RediStack","type":"codeVoice"},{"type":"text","text":" is not setup to use "},{"code":"ServiceLifecycle","type":"codeVoice"},{"type":"text","text":". So to ensure clean shutdown of "},{"code":"RediStack","type":"codeVoice"},{"type":"text","text":" you either need to use the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"},{"type":"text","text":" that is part of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},{"type":"text","text":" or write your own "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" type that will manage the shutdown of a "},{"code":"RedisConnectionPool","type":"codeVoice"},{"type":"text","text":"."}]},{"level":4,"type":"heading","anchor":"Using-HummingbirdRedis","text":"Using HummingbirdRedis"},{"type":"paragraph","inlineContent":[{"text":"If you choose to use ","type":"text"},{"code":"HummingbirdRedis","type":"codeVoice"},{"text":" you can setup a JobQueue using ","type":"text"},{"code":"RediStack","type":"codeVoice"},{"text":" as follows","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let redisService = try RedisConnectionPoolService(","    .init(hostname: redisHost, port: 6379),","    logger: logger",")","let jobQueue = JobQueue(","    .redis(","        redisService.pool, ","        configuration: .init(","            queueKey: \"MyJobQueue\", ","            pollTime: .milliseconds(50)","        )","    ),","    numWorkers: 10,","    logger: logger",")","let serviceGroup = ServiceGroup(","    configuration: .init(","        services: [redisService, jobQueue],","        gracefulShutdownSignals: [.sigterm, .sigint],","        logger: logger","    )",")","try await serviceGroup.run()"]},{"type":"paragraph","inlineContent":[{"text":"The Redis job queue configuration includes two values.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"queueKey"},{"type":"text","text":": Prefix to all the Redis keys used to store queues."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pollTime"},{"type":"text","text":": This is the amount of time between the last time the queue was empty and the next time the driver starts looking for pending jobs."}]}]}]},{"level":4,"type":"heading","anchor":"Write-RedisConnectionPool-Service","text":"Write RedisConnectionPool Service"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively you can write your own "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" to manage the lifecycle of the "},{"code":"RedisConnectionPool","type":"codeVoice"},{"type":"text","text":". This basically keeps a reference to the "},{"code":"RedisConnectionPool","type":"codeVoice"},{"type":"text","text":" and waits for graceful shutdown. At graceful shutdown it will close the connection pool. Unfortunately "},{"code":"RedisConnectionPool","type":"codeVoice"},{"type":"text","text":" is not "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" so we either have to add an "},{"code":"@unchecked Sendable","type":"codeVoice"},{"type":"text","text":" to "},{"code":"RedisConnectionPoolService","type":"codeVoice"},{"type":"text","text":" or import "},{"code":"RediStack","type":"codeVoice"},{"type":"text","text":" using "},{"code":"@preconcurrency","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["struct RedisConnectionPoolService: Service, @unchecked Sendable {","    let pool: RedisConnectionPool","","    public func run() async throws {","        \/\/ Wait for graceful shutdown and ignore cancellation error","        try? await gracefulShutdown()","        \/\/ close connection pool","        let promise = self.pool.eventLoop.makePromise(of: Void.self)","        self.pool.close(promise: promise)","        return try await promise.futureResult.get()","    }","}"]},{"level":2,"type":"heading","anchor":"Additional-Features","text":"Additional Features"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are features specific to the Redis Job Queue implementation."}]},{"level":3,"type":"heading","anchor":"Push-Options","text":"Push Options"},{"type":"paragraph","inlineContent":[{"text":"When pushing a job to the queue there are a number of options you can provide.","type":"text"}]},{"level":4,"type":"heading","anchor":"Delaying-jobs","text":"Delaying jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As with all queue drivers you can add a delay before a job is processed. The job will sit in the pending queue and will not be available for processing until time has passed its delay until time."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Add TestJob to the queue, but don't process it for 2 minutes","try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))"]},{"level":3,"type":"heading","anchor":"Cancellation","text":"Cancellation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue"},{"type":"text","text":" conforms to protocol "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue"},{"type":"text","text":". This requires support for cancelling jobs that are in the pending queue. It adds one new function "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/cancel(jobID:)"},{"type":"text","text":". If you supply this function with the "},{"type":"codeVoice","code":"JobID"},{"type":"text","text":" returned by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)"},{"type":"text","text":" it will remove it from the pending queue."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Add TestJob to the queue and immediately cancel it","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.cancel(jobID: jobID)"]},{"level":3,"type":"heading","anchor":"Pause-and-Resume","text":"Pause and Resume"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","type":"reference"},{"type":"text","text":" conforms to protocol "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue","type":"reference"},{"type":"text","text":". This requires support for pausing and resuming jobs that are in the pending queue. It adds two new functions "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/pause(jobID:)","type":"reference"},{"type":"text","text":" and "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/resume(jobID:)","type":"reference"},{"type":"text","text":". If you supply these function with the "},{"type":"codeVoice","code":"JobID"},{"type":"text","text":" returned by "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)","type":"reference"},{"type":"text","text":" you can remove from the pending queue and add them back in at a later date."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Add TestJob to the queue and immediately remove it and then add it back to the queue","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.pause(jobID: jobID)","try await jobQueue.resume(jobID: jobID)"]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/jobsredis"]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue"],"title":"Job Queue","anchor":"Job-Queue"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisScriptFlush"],"title":"Enumerations","generated":true,"anchor":"Enumerations"}],"sections":[],"abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"title":"JobsPostgres","url":"\/documentation\/jobspostgres","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"title":"JobsRedis","type":"topic","role":"collection","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"kind":"symbol","url":"\/documentation\/jobsredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","type":"topic","kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/pause(jobID:)":{"title":"pause(jobID:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Temporarily remove job from pending queue"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/pause(jobID:)","url":"\/documentation\/jobsredis\/redisjobqueue\/pause(jobid:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pause","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV","text":"JobID","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/resume(jobID:)":{"abstract":[{"text":"Moved paused job back onto pending queue","type":"text"}],"url":"\/documentation\/jobsredis\/redisjobqueue\/resume(jobid:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/resume(jobID:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resume","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JobID","kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"resume(jobID:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisScriptFlush":{"url":"\/documentation\/jobsredis\/redisscriptflush","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisScriptFlush","kind":"identifier"}],"navigatorTitle":[{"text":"RedisScriptFlush","kind":"identifier"}],"title":"RedisScriptFlush","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisScriptFlush","abstract":[{"type":"text","text":"Script flush mode"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/ResumableJobQueue":{"title":"ResumableJobQueue","url":"\/documentation\/jobs\/resumablejobqueue","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResumableJobQueue","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Protocol for Job queue driver which implements resumable jobs","type":"text"}],"navigatorTitle":[{"text":"ResumableJobQueue","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/CancellableJobQueue":{"navigatorTitle":[{"kind":"identifier","text":"CancellableJobQueue"}],"url":"\/documentation\/jobs\/cancellablejobqueue","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancellableJobQueue"}],"abstract":[{"type":"text","text":"Protocol for Job queue driver which implement cancellable jobs"}],"kind":"symbol","type":"topic","title":"CancellableJobQueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue"},"https://github.com/swift-server/redistack":{"type":"link","identifier":"https:\/\/github.com\/swift-server\/redistack","titleInlineContent":[{"text":"RediStack","type":"text"}],"title":"RediStack","url":"https:\/\/github.com\/swift-server\/redistack"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/cancel(jobID:)":{"title":"cancel(jobID:)","url":"\/documentation\/jobsredis\/redisjobqueue\/cancel(jobid:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/cancel(jobID:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV","kind":"typeIdentifier","text":"JobID"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Cancels a job"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}],"title":"RedisJobQueue","type":"topic","role":"symbol","abstract":[{"text":"Redis implementation of job queue driver","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","url":"\/documentation\/jobsredis\/redisjobqueue","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisJobQueue","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/push(_:options:)":{"abstract":[{"type":"text","text":"Push job data onto queue"}],"role":"symbol","url":"\/documentation\/jobsredis\/redisjobqueue\/push(_:options:)","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)","title":"push(_:options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Parameters","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"JobRequest","kind":"typeIdentifier","preciseIdentifier":"s:4Jobs10JobRequestV"},{"text":"<","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC4push_7optionsAC0C2IDV0A00C7RequestVyxG_AC0C7OptionsVtYaKAH0C10ParametersRzlF0J0L_xmfp"},{"text":">, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JobOptions","kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C7OptionsV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"JobID","kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV"}]},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"title":"Jobs","type":"topic","role":"collection","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"kind":"symbol","url":"\/documentation\/jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"title":"RedisConnectionPoolService","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}],"navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","url":"\/documentation\/hummingbirdredis","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}]}}}