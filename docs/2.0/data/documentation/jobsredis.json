{"sections":[],"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue"],"title":"Job Queue","anchor":"Job-Queue"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisScriptFlush"],"generated":true,"title":"Enumerations","anchor":"Enumerations"}],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"text":"Hummingbird Jobs Queue driver using ","type":"text"},{"identifier":"https:\/\/github.com\/swift-server\/redistack","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"text":"Setup","type":"heading","level":3,"anchor":"Setup"},{"inlineContent":[{"type":"text","text":"Currently "},{"type":"codeVoice","code":"RediStack"},{"type":"text","text":" is not setup to use "},{"type":"codeVoice","code":"ServiceLifecycle"},{"type":"text","text":". So to ensure clean shutdown of "},{"type":"codeVoice","code":"RediStack"},{"type":"text","text":" you either need to use the "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","type":"reference","isActive":true},{"type":"text","text":" that is part of "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","type":"reference","isActive":true},{"type":"text","text":" or write your own "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" type that will manage the shutdown of a "},{"code":"RedisConnectionPool","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Using HummingbirdRedis","type":"heading","level":4,"anchor":"Using-HummingbirdRedis"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you choose to use "},{"type":"codeVoice","code":"HummingbirdRedis"},{"type":"text","text":" you can setup a JobQueue using "},{"type":"codeVoice","code":"RediStack"},{"type":"text","text":" as follows"}]},{"code":["let redisService = try RedisConnectionPoolService(","    .init(hostname: redisHost, port: 6379),","    logger: logger",")","let jobQueue = JobQueue(","    .redis(","        redisService.pool, ","        configuration: .init(","            queueKey: \"MyJobQueue\", ","            pollTime: .milliseconds(50)","        )","    ),","    numWorkers: 10,","    logger: logger",")","let serviceGroup = ServiceGroup(","    configuration: .init(","        services: [redisService, jobQueue],","        gracefulShutdownSignals: [.sigterm, .sigint],","        logger: logger","    )",")","try await serviceGroup.run()"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"The Redis job queue configuration includes two values."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"queueKey"},{"type":"text","text":": Prefix to all the Redis keys used to store queues."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"pollTime","type":"codeVoice"},{"text":": This is the amount of time between the last time the queue was empty and the next time the driver starts looking for pending jobs.","type":"text"}]}]}]},{"anchor":"Write-RedisConnectionPool-Service","level":4,"type":"heading","text":"Write RedisConnectionPool Service"},{"inlineContent":[{"text":"Alternatively you can write your own ","type":"text"},{"type":"codeVoice","code":"Service"},{"text":" to manage the lifecycle of the ","type":"text"},{"type":"codeVoice","code":"RedisConnectionPool"},{"text":". This basically keeps a reference to the ","type":"text"},{"type":"codeVoice","code":"RedisConnectionPool"},{"text":" and waits for graceful shutdown. At graceful shutdown it will close the connection pool. Unfortunately ","type":"text"},{"type":"codeVoice","code":"RedisConnectionPool"},{"text":" is not ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" so we either have to add an ","type":"text"},{"type":"codeVoice","code":"@unchecked Sendable"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"RedisConnectionPoolService"},{"text":" or import ","type":"text"},{"type":"codeVoice","code":"RediStack"},{"text":" using ","type":"text"},{"type":"codeVoice","code":"@preconcurrency"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct RedisConnectionPoolService: Service, @unchecked Sendable {","    let pool: RedisConnectionPool","","    public func run() async throws {","        \/\/ Wait for graceful shutdown and ignore cancellation error","        try? await gracefulShutdown()","        \/\/ close connection pool","        let promise = self.pool.eventLoop.makePromise(of: Void.self)","        self.pool.close(promise: promise)","        return try await promise.futureResult.get()","    }","}"]},{"anchor":"Additional-Features","level":2,"type":"heading","text":"Additional Features"},{"inlineContent":[{"text":"There are features specific to the Redis Job Queue implementation.","type":"text"}],"type":"paragraph"},{"anchor":"Push-Options","level":3,"type":"heading","text":"Push Options"},{"inlineContent":[{"type":"text","text":"When pushing a job to the queue there are a number of options you can provide."}],"type":"paragraph"},{"anchor":"Delaying-jobs","level":4,"type":"heading","text":"Delaying jobs"},{"inlineContent":[{"text":"As with all queue drivers you can add a delay before a job is processed. The job will sit in the pending queue and will not be available for processing until time has passed its delay until time.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Add TestJob to the queue, but don't process it for 2 minutes","try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))"]},{"anchor":"Cancellation","level":3,"type":"heading","text":"Cancellation"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","isActive":true},{"type":"text","text":" conforms to protocol "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue","isActive":true},{"type":"text","text":". This requires support for cancelling jobs that are in the pending queue. It adds one new function "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/cancel(jobID:)","isActive":true},{"type":"text","text":". If you supply this function with the "},{"type":"codeVoice","code":"JobID"},{"type":"text","text":" returned by "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)","isActive":true},{"type":"text","text":" it will remove it from the pending queue."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Add TestJob to the queue and immediately cancel it","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.cancel(jobID: jobID)"]},{"anchor":"Pause-and-Resume","level":3,"type":"heading","text":"Pause and Resume"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","isActive":true},{"type":"text","text":" conforms to protocol "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue","isActive":true},{"type":"text","text":". This requires support for pausing and resuming jobs that are in the pending queue. It adds two new functions "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/pause(jobID:)","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/resume(jobID:)","isActive":true},{"type":"text","text":". If you supply these function with the "},{"code":"JobID","type":"codeVoice"},{"type":"text","text":" returned by "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)","isActive":true},{"type":"text","text":" you can remove from the pending queue and add them back in at a later date."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Add TestJob to the queue and immediately remove it and then add it back to the queue","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.pause(jobID: jobID)","try await jobQueue.resume(jobID: jobID)"]}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/jobsredis"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"JobsRedis","role":"collection","modules":[{"name":"JobsRedis"}],"symbolKind":"module","roleHeading":"Framework","externalID":"JobsRedis","images":[{"type":"icon","identifier":"logo.png"}]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation","anchor":"Related-Documentation"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],"generated":true,"title":"Reference","anchor":"Reference"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/resume(jobID:)":{"abstract":[{"text":"Moved paused job back onto pending queue","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/resume(jobID:)","url":"\/documentation\/jobsredis\/redisjobqueue\/resume(jobid:)","title":"resume(jobID:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resume"},{"kind":"text","text":"("},{"kind":"externalParam","text":"jobID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JobID","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"type":"topic","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","url":"\/documentation\/jobs","title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"type":"topic","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"title":"RedisConnectionPoolService","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","kind":"symbol","navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/ResumableJobQueue":{"type":"topic","url":"\/documentation\/jobs\/resumablejobqueue","kind":"symbol","title":"ResumableJobQueue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResumableJobQueue"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue","abstract":[{"type":"text","text":"Protocol for Job queue driver which implements resumable jobs"}],"navigatorTitle":[{"kind":"identifier","text":"ResumableJobQueue"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","url":"\/documentation\/jobsredis\/redisjobqueue","abstract":[{"type":"text","text":"Redis implementation of job queue driver"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisJobQueue","kind":"identifier"}],"title":"RedisJobQueue","kind":"symbol","navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"type":"topic","abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}],"title":"JobsPostgres","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","url":"\/documentation\/jobspostgres","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","type":"topic","url":"\/documentation\/hummingbirdredis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"role":"collection","title":"HummingbirdRedis","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","url":"\/documentation\/jobsredis","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"role":"collection","title":"JobsRedis","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/CancellableJobQueue":{"abstract":[{"type":"text","text":"Protocol for Job queue driver which implement cancellable jobs"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue","url":"\/documentation\/jobs\/cancellablejobqueue","navigatorTitle":[{"kind":"identifier","text":"CancellableJobQueue"}],"title":"CancellableJobQueue","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancellableJobQueue"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/pause(jobID:)":{"abstract":[{"type":"text","text":"Temporarily remove job from pending queue"}],"kind":"symbol","url":"\/documentation\/jobsredis\/redisjobqueue\/pause(jobid:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/pause(jobID:)","title":"pause(jobID:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pause"},{"kind":"text","text":"("},{"kind":"externalParam","text":"jobID"},{"kind":"text","text":": "},{"text":"JobID","kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/push(_:options:)":{"type":"topic","url":"\/documentation\/jobsredis\/redisjobqueue\/push(_:options:)","kind":"symbol","title":"push(_:options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"push"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Parameters"},{"kind":"text","text":">("},{"preciseIdentifier":"s:4Jobs10JobRequestV","text":"JobRequest","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:9JobsRedis0B8JobQueueC4push_7optionsAC0C2IDV0A00C7RequestVyxG_AC0C7OptionsVtYaKAH0C10ParametersRzlF0J0L_xmfp","text":"Parameters","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C7OptionsV","text":"JobOptions","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"JobID","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)","abstract":[{"text":"Push job data onto queue","type":"text"}],"role":"symbol"},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/cancel(jobID:)":{"abstract":[{"text":"Cancels a job","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/cancel(jobID:)","url":"\/documentation\/jobsredis\/redisjobqueue\/cancel(jobid:)","title":"cancel(jobID:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV","kind":"typeIdentifier","text":"JobID"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisScriptFlush":{"role":"symbol","type":"topic","title":"RedisScriptFlush","url":"\/documentation\/jobsredis\/redisscriptflush","navigatorTitle":[{"text":"RedisScriptFlush","kind":"identifier"}],"abstract":[{"type":"text","text":"Script flush mode"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisScriptFlush","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisScriptFlush","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}]},"https://github.com/swift-server/redistack":{"title":"RediStack","identifier":"https:\/\/github.com\/swift-server\/redistack","type":"link","titleInlineContent":[{"type":"text","text":"RediStack"}],"url":"https:\/\/github.com\/swift-server\/redistack"}}}