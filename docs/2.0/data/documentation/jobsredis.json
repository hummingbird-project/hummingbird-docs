{"variants":[{"paths":["\/documentation\/jobsredis"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"topicSections":[{"title":"Job Queue","anchor":"Job-Queue","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue"]},{"title":"Enumerations","anchor":"Enumerations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisScriptFlush"]}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Related Documentation","anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]},{"title":"Reference","anchor":"Reference","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"]}],"metadata":{"externalID":"JobsRedis","modules":[{"name":"JobsRedis"}],"title":"JobsRedis","role":"collection","symbolKind":"module","roleHeading":"Framework","images":[{"type":"icon","identifier":"logo.png"}]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Hummingbird Jobs Queue driver using ","type":"text"},{"identifier":"https:\/\/github.com\/swift-server\/redistack","type":"reference","isActive":true},{"text":".","type":"text"}]},{"level":3,"type":"heading","text":"Setup","anchor":"Setup"},{"type":"paragraph","inlineContent":[{"text":"Currently ","type":"text"},{"code":"RediStack","type":"codeVoice"},{"text":" is not setup to use ","type":"text"},{"code":"ServiceLifecycle","type":"codeVoice"},{"type":"text","text":". So to ensure clean shutdown of "},{"code":"RediStack","type":"codeVoice"},{"type":"text","text":" you either need to use the "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","type":"reference","isActive":true},{"type":"text","text":" that is part of "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","type":"reference","isActive":true},{"type":"text","text":" or write your own "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" type that will manage the shutdown of a "},{"code":"RedisConnectionPool","type":"codeVoice"},{"type":"text","text":"."}]},{"level":4,"type":"heading","text":"Using HummingbirdRedis","anchor":"Using-HummingbirdRedis"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you choose to use "},{"code":"HummingbirdRedis","type":"codeVoice"},{"type":"text","text":" you can setup a JobQueue using "},{"code":"RediStack","type":"codeVoice"},{"type":"text","text":" as follows"}]},{"type":"codeListing","code":["let redisService = try RedisConnectionPoolService(","    .init(hostname: redisHost, port: 6379),","    logger: logger",")","let jobQueue = JobQueue(","    .redis(","        redisService.pool, ","        configuration: .init(","            queueKey: \"MyJobQueue\", ","            pollTime: .milliseconds(50)","        )","    ),","    numWorkers: 10,","    logger: logger",")","let serviceGroup = ServiceGroup(","    configuration: .init(","        services: [redisService, jobQueue],","        gracefulShutdownSignals: [.sigterm, .sigint],","        logger: logger","    )",")","try await serviceGroup.run()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Redis job queue configuration includes two values."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"queueKey","type":"codeVoice"},{"text":": Prefix to all the Redis keys used to store queues.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"pollTime","type":"codeVoice"},{"type":"text","text":": This is the amount of time between the last time the queue was empty and the next time the driver starts looking for pending jobs."}]}]}]},{"level":4,"type":"heading","text":"Write RedisConnectionPool Service","anchor":"Write-RedisConnectionPool-Service"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively you can write your own "},{"type":"codeVoice","code":"Service"},{"type":"text","text":" to manage the lifecycle of the "},{"type":"codeVoice","code":"RedisConnectionPool"},{"type":"text","text":". This basically keeps a reference to the "},{"type":"codeVoice","code":"RedisConnectionPool"},{"type":"text","text":" and waits for graceful shutdown. At graceful shutdown it will close the connection pool. Unfortunately "},{"type":"codeVoice","code":"RedisConnectionPool"},{"type":"text","text":" is not "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" so we either have to add an "},{"type":"codeVoice","code":"@unchecked Sendable"},{"type":"text","text":" to "},{"type":"codeVoice","code":"RedisConnectionPoolService"},{"type":"text","text":" or import "},{"type":"codeVoice","code":"RediStack"},{"type":"text","text":" using "},{"type":"codeVoice","code":"@preconcurrency"},{"type":"text","text":"."}]},{"type":"codeListing","code":["struct RedisConnectionPoolService: Service, @unchecked Sendable {","    let pool: RedisConnectionPool","","    public func run() async throws {","        \/\/ Wait for graceful shutdown and ignore cancellation error","        try? await gracefulShutdown()","        \/\/ close connection pool","        let promise = self.pool.eventLoop.makePromise(of: Void.self)","        self.pool.close(promise: promise)","        return try await promise.futureResult.get()","    }","}"],"syntax":"swift"},{"level":2,"type":"heading","text":"Additional Features","anchor":"Additional-Features"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are features specific to the Redis Job Queue implementation."}]},{"level":3,"type":"heading","text":"Push Options","anchor":"Push-Options"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When pushing a job to the queue there are a number of options you can provide."}]},{"level":4,"type":"heading","text":"Delaying jobs","anchor":"Delaying-jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As with all queue drivers you can add a delay before a job is processed. The job will sit in the pending queue and will not be available for processing until time has passed its delay until time."}]},{"type":"codeListing","code":["\/\/ Add TestJob to the queue, but don't process it for 2 minutes","try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))"],"syntax":"swift"},{"level":3,"type":"heading","text":"Cancellation","anchor":"Cancellation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue"},{"type":"text","text":" conforms to protocol "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue"},{"type":"text","text":". This requires support for cancelling jobs that are in the pending queue. It adds one new function "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/cancel(jobID:)"},{"type":"text","text":". If you supply this function with the "},{"type":"codeVoice","code":"JobID"},{"type":"text","text":" returned by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)"},{"type":"text","text":" it will remove it from the pending queue."}]},{"type":"codeListing","code":["\/\/ Add TestJob to the queue and immediately cancel it","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.cancel(jobID: jobID)"],"syntax":"swift"},{"level":3,"type":"heading","text":"Pause and Resume","anchor":"Pause-and-Resume"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue"},{"text":" conforms to protocol ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue"},{"text":". This requires support for pausing and resuming jobs that are in the pending queue. It adds two new functions ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/pause(jobID:)"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/resume(jobID:)"},{"text":". If you supply these function with the ","type":"text"},{"code":"JobID","type":"codeVoice"},{"text":" returned by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)"},{"text":" you can remove from the pending queue and add them back in at a later date.","type":"text"}]},{"type":"codeListing","code":["\/\/ Add TestJob to the queue and immediately remove it and then add it back to the queue","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.pause(jobID: jobID)","try await jobQueue.resume(jobID: jobID)"],"syntax":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/resume(jobID:)":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/jobsredis\/redisjobqueue\/resume(jobid:)","title":"resume(jobID:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resume","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV","text":"JobID"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/resume(jobID:)","abstract":[{"text":"Moved paused job back onto pending queue","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}],"title":"RedisConnectionPoolService","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolService"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolService"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/ResumableJobQueue":{"url":"\/documentation\/jobs\/resumablejobqueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue","type":"topic","kind":"symbol","abstract":[{"text":"Protocol for Job queue driver which implements resumable jobs","type":"text"}],"title":"ResumableJobQueue","navigatorTitle":[{"kind":"identifier","text":"ResumableJobQueue"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResumableJobQueue"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"url":"\/documentation\/jobsredis","kind":"symbol","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"title":"JobsRedis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","role":"collection"},"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/pause(jobID:)":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/jobsredis\/redisjobqueue\/pause(jobid:)","title":"pause(jobID:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pause","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV","text":"JobID"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"text":"Temporarily remove job from pending queue","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/pause(jobID:)"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"url":"\/documentation\/jobs","kind":"symbol","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"title":"Jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"url":"\/documentation\/jobspostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol","abstract":[{"text":"Postgres implementation for Hummingbird jobs framework","type":"text"}],"title":"JobsPostgres","role":"collection"},"https://github.com/swift-server/redistack":{"title":"RediStack","url":"https:\/\/github.com\/swift-server\/redistack","titleInlineContent":[{"type":"text","text":"RediStack"}],"identifier":"https:\/\/github.com\/swift-server\/redistack","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/cancel(jobID:)":{"url":"\/documentation\/jobsredis\/redisjobqueue\/cancel(jobid:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/cancel(jobID:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Cancels a job"}],"title":"cancel(jobID:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"("},{"kind":"externalParam","text":"jobID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JobID","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/CancellableJobQueue":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/jobs\/cancellablejobqueue","title":"CancellableJobQueue","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CancellableJobQueue","kind":"identifier"}],"navigatorTitle":[{"text":"CancellableJobQueue","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for Job queue driver which implement cancellable jobs"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue/push(_:options:)":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/jobsredis\/redisjobqueue\/push(_:options:)","title":"push(_:options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"push"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Parameters"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:4Jobs10JobRequestV","text":"JobRequest"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC4push_7optionsAC0C2IDV0A00C7RequestVyxG_AC0C7OptionsVtYaKAH0C10ParametersRzlF0J0L_xmfp","text":"Parameters"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C7OptionsV","text":"JobOptions"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:9JobsRedis0B8JobQueueC0C2IDV","text":"JobID","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue\/push(_:options:)","abstract":[{"text":"Push job data onto queue","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"url":"\/documentation\/jobsredis\/redisjobqueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisJobQueue","kind":"identifier"}],"navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Redis implementation of job queue driver"}],"type":"topic","title":"RedisJobQueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisScriptFlush":{"url":"\/documentation\/jobsredis\/redisscriptflush","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisScriptFlush","type":"topic","kind":"symbol","abstract":[{"text":"Script flush mode","type":"text"}],"title":"RedisScriptFlush","navigatorTitle":[{"text":"RedisScriptFlush","kind":"identifier"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisScriptFlush","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"title":"HummingbirdRedis","role":"collection"}}}