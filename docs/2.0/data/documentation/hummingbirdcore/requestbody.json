{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"},"abstract":[{"text":"Request Body","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source"],"title":"Classes","generated":true,"anchor":"Classes"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/init(asyncSequence:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/init(buffer:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithCancellationOnInboundClose(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithInboundCloseHandler(isolation:_:onInboundClosed:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/makeStream()"],"title":"Type Methods","generated":true,"anchor":"Type-Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/AsyncSequence-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestBody"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Can be either a stream of ByteBuffers or a single ByteBuffer"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/hummingbirdcore\/requestbody"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI"],"title":"Request","generated":true,"anchor":"Request"}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestBody","kind":"identifier"}],"externalID":"s:15HummingbirdCore11RequestBodyV","role":"symbol","roleHeading":"Structure","title":"RequestBody","modules":[{"name":"HummingbirdCore"}],"navigatorTitle":[{"text":"RequestBody","kind":"identifier"}],"symbolKind":"struct"},"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP","doc:\/\/com.opticalaberration.hummingbird\/Sci"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/Sci":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/Sci","type":"unresolvable","title":"_Concurrency.AsyncSequence"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","type":"topic","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/init(buffer:)":{"abstract":[{"type":"text","text":"Initialise "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","type":"reference","isActive":true},{"type":"text","text":" from ByteBuffer"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/init(buffer:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"buffer","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":")","kind":"text"}],"title":"init(buffer:)","type":"topic","url":"\/documentation\/hummingbirdcore\/requestbody\/init(buffer:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/consumeWithInboundCloseHandler(isolation:_:onInboundClosed:)":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/requestbody\/consumewithinboundclosehandler(isolation:_:oninboundclosed:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeWithInboundCloseHandler","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"isolation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"isolated","kind":"keyword"},{"text":" (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:ScA","text":"Actor","kind":"typeIdentifier"},{"kind":"text","text":")?, ("},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV","kind":"typeIdentifier","text":"RequestBody"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV30consumeWithInboundCloseHandler9isolation_02onG6ClosedxScA_pSgYi_xACYaKXEyyYbctYaKs8SendableRzlF5ValueL_xmfp","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onInboundClosed"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV30consumeWithInboundCloseHandler9isolation_02onG6ClosedxScA_pSgYi_xACYaKXEyyYbctYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Run provided closure but cancel it if the inbound request part stream is closed."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithInboundCloseHandler(isolation:_:onInboundClosed:)","title":"consumeWithInboundCloseHandler(isolation:_:onInboundClosed:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/request","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/makeStream()":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/requestbody\/makestream()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/makeStream()","kind":"symbol","abstract":[{"type":"text","text":"Make a new "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"},{"type":"text","text":" stream"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStream"},{"kind":"text","text":"() -> ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV","text":"RequestBody"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV6SourceC","text":"Source"},{"kind":"text","text":")"}],"type":"topic","title":"makeStream()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/consumeWithCancellationOnInboundClose(_:)":{"url":"\/documentation\/hummingbirdcore\/requestbody\/consumewithcancellationoninboundclose(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeWithCancellationOnInboundClose"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV","kind":"typeIdentifier","text":"RequestBody"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithCancellationOnInboundClose(_:)","type":"topic","title":"consumeWithCancellationOnInboundClose(_:)","kind":"symbol","abstract":[{"text":"Run provided closure but cancel it if the inbound request part stream is closed.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/URI":{"title":"URI","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","type":"topic","navigatorTitle":[{"text":"URI","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/uri","abstract":[{"type":"text","text":"Simple URL parser"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URI","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"title":"Swift.SendableMetatype","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/init(asyncSequence:)":{"type":"topic","abstract":[{"text":"Initialise ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"},{"text":" from AsyncSequence of ByteBuffers","type":"text"}],"title":"init(asyncSequence:)","url":"\/documentation\/hummingbirdcore\/requestbody\/init(asyncsequence:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/init(asyncSequence:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"AS","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"asyncSequence","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV13asyncSequenceACx_tcSciRzs16SendableMetatype13AsyncIteratorRpz7NIOCore10ByteBufferV7ElementRtzlufc2ASL_xmfp","text":"AS","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","url":"\/documentation\/hummingbirdcore\/requestbody\/asyncsequence-implementations","type":"topic","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/AsyncSequence-Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/requestbody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","type":"topic","navigatorTitle":[{"text":"RequestBody","kind":"identifier"}],"abstract":[{"text":"Request Body","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestBody","kind":"identifier"}],"title":"RequestBody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/Source":{"url":"\/documentation\/hummingbirdcore\/requestbody\/source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source","navigatorTitle":[{"kind":"identifier","text":"Source"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}],"role":"symbol","title":"RequestBody.Source","kind":"symbol","abstract":[{"type":"text","text":"A source used for driving a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"},{"type":"text","text":" stream."}]}}}