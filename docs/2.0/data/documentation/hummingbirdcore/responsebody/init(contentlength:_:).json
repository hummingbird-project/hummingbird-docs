{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)"]}],"sections":[],"metadata":{"roleHeading":"Initializer","externalID":"s:15HummingbirdCore12ResponseBodyV13contentLength_ACSiSg_yAA0cD6Writer_pzYaYbKctcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"contentLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, (","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP","text":"ResponseBodyWriter"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"title":"init(contentLength:_:)","role":"symbol","symbolKind":"init","modules":[{"name":"HummingbirdCore"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Initialise ResponseBody with closure writing body contents.","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"contentLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":"? = nil, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"write","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Optional length of body","type":"text"}]}],"name":"contentLength"},{"content":[{"inlineContent":[{"type":"text","text":"Closure provided with "},{"code":"writer","type":"codeVoice"},{"text":" type that can be used to write to response body","type":"text"}],"type":"paragraph"}],"name":"write"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"When you have finished writing the response body you need to indicate you have","type":"text"},{"type":"text","text":" "},{"type":"text","text":"finished by calling "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)","type":"reference","isActive":true},{"type":"text","text":". At this"},{"type":"text","text":" "},{"text":"point you can also send trailing headers by including them as a parameter in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the finsh() call."}],"type":"paragraph"},{"code":["let responseBody = ResponseBody(contentLength: contentLength) { writer in","    try await writer.write(buffer)","    try await writer.finish(nil)","}"],"type":"codeListing","syntax":null}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"type":"topic","url":"\/documentation\/hummingbirdcore\/responsebody","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ResponseBody","kind":"identifier"}],"abstract":[{"type":"text","text":"Response body"}],"navigatorTitle":[{"text":"ResponseBody","kind":"identifier"}],"title":"ResponseBody","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird Documentation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","role":"symbol","navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP Response Body part writer"}],"title":"ResponseBodyWriter","type":"topic","url":"\/documentation\/hummingbirdcore\/responsebodywriter","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","kind":"symbol"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter/finish(_:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)","url":"\/documentation\/hummingbirdcore\/responsebodywriter\/finish(_:)","required":true,"abstract":[{"text":"Finish writing body","type":"text"}],"title":"finish(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"finish","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"HTTPFields","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody/init(contentLength:_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"contentLength"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?, (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)","type":"topic","abstract":[{"text":"Initialise ResponseBody with closure writing body contents.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","kind":"symbol","title":"init(contentLength:_:)","role":"symbol"}}}