{"metadata":{"symbolKind":"init","roleHeading":"Initializer","externalID":"s:15HummingbirdCore12ResponseBodyV13contentLength_ACSiSg_yAA0cD6Writer_pzYaYbKctcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"contentLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":"?, ("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP","kind":"typeIdentifier","text":"ResponseBodyWriter"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"title":"init(contentLength:_:)","role":"symbol","modules":[{"name":"HummingbirdCore"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody"]]},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"contentLength","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"? = nil, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"write"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"ResponseBodyWriter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"contentLength","content":[{"inlineContent":[{"type":"text","text":"Optional length of body"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Closure provided with ","type":"text"},{"type":"codeVoice","code":"writer"},{"text":" type that can be used to write to response body","type":"text"}],"type":"paragraph"}],"name":"write"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"When you have finished writing the response body you need to indicate you have","type":"text"},{"text":" ","type":"text"},{"text":"finished by calling ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)","isActive":true},{"text":". At this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"point you can also send trailing headers by including them as a parameter in"},{"type":"text","text":" "},{"text":"the finsh() call.","type":"text"}],"type":"paragraph"},{"code":["let responseBody = ResponseBody(contentLength: contentLength) { writer in","    try await writer.write(buffer)","    try await writer.finish(nil)","}"],"type":"codeListing","syntax":null}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)"]}],"abstract":[{"text":"Initialise ResponseBody with closure writing body contents.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody/init(contentLength:_:)":{"abstract":[{"text":"Initialise ResponseBody with closure writing body contents.","type":"text"}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"contentLength","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?, (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP","text":"ResponseBodyWriter","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","title":"init(contentLength:_:)","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter/finish(_:)":{"url":"\/documentation\/hummingbirdcore\/responsebodywriter\/finish(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"finish","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","type":"topic","kind":"symbol","required":true,"title":"finish(_:)","abstract":[{"text":"Finish writing body","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ResponseBody","kind":"identifier"}],"title":"ResponseBody","url":"\/documentation\/hummingbirdcore\/responsebody","role":"symbol","abstract":[{"type":"text","text":"Response body"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"title":"Hummingbird Documentation","type":"topic","url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"url":"\/documentation\/hummingbirdcore\/responsebodywriter","title":"ResponseBodyWriter","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBodyWriter"}],"type":"topic","role":"symbol","abstract":[{"text":"HTTP Response Body part writer","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","kind":"symbol","navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","kind":"symbol","url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}]}}}