{"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initialise ResponseBody with closure writing body contents."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"contentLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"write"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP","text":"ResponseBodyWriter"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"contentLength","content":[{"inlineContent":[{"type":"text","text":"Optional length of body"}],"type":"paragraph"}]},{"name":"write","content":[{"inlineContent":[{"text":"Closure provided with ","type":"text"},{"code":"writer","type":"codeVoice"},{"text":" type that can be used to write to response body","type":"text"}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you have finished writing the response body you need to indicate you have"},{"type":"text","text":" "},{"type":"text","text":"finished by calling "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)","isActive":true},{"type":"text","text":". At this"},{"type":"text","text":" "},{"type":"text","text":"point you can also send trailing headers by including them as a parameter in"},{"type":"text","text":" "},{"type":"text","text":"the finsh() call."}]},{"code":["let responseBody = ResponseBody(contentLength: contentLength) { writer in","    try await writer.write(buffer)","    try await writer.finish(nil)","}"],"type":"codeListing","syntax":null}],"kind":"content"}],"metadata":{"role":"symbol","roleHeading":"Initializer","modules":[{"name":"HummingbirdCore"}],"symbolKind":"init","title":"init(contentLength:_:)","externalID":"s:15HummingbirdCore12ResponseBodyV13contentLength_ACSiSg_yAA0cD6Writer_pzYaYbKctcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"contentLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ResponseBodyWriter","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]},"variants":[{"paths":["\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody/init(contentLength:_:)":{"title":"init(contentLength:_:)","abstract":[{"text":"Initialise ResponseBody with closure writing body contents.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"contentLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?, (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP","text":"ResponseBodyWriter","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","url":"\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","title":"ResponseBodyWriter","type":"topic","role":"symbol","navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/responsebodywriter","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}],"abstract":[{"text":"HTTP Response Body part writer","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter/finish(_:)":{"required":true,"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)","kind":"symbol","title":"finish(_:)","type":"topic","url":"\/documentation\/hummingbirdcore\/responsebodywriter\/finish(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Finish writing body","type":"text"}]},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"title":"ResponseBody","url":"\/documentation\/hummingbirdcore\/responsebody","navigatorTitle":[{"text":"ResponseBody","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBody","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Response body"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","role":"symbol"}}}