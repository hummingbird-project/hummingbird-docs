{"abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has completed its current read loop, either because no more data is available to read from the transport at this time, or because the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" needs to yield to the event loop to process other I\/O events for other "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"ChannelOptions.autoRead"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":" no further read attempt will be made until "},{"type":"codeVoice","code":"ChannelHandlerContext.read"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Channel.read"},{"type":"text","text":" is explicitly called."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelreadcomplete(context:)"]}],"metadata":{"externalID":"s:7NIOCore22_ChannelInboundHandlerPAAE19channelReadComplete7contextyAA0bD7ContextC_tF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","symbolKind":"method","extendedModule":"NIOCore","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelReadComplete"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"HummingbirdCore","relatedModules":["NIOCore"]}],"title":"channelReadComplete(context:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelReadComplete"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"context","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" belongs to.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This should call ","type":"text"},{"code":"context.fireChannelReadComplete","type":"codeVoice"},{"text":" to forward the operation to the next ","type":"text"},{"code":"_ChannelInboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" if you want to allow the next handler to also handle the event.","type":"text"}]}],"kind":"content"}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/channelReadComplete(context:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","kind":"symbol","title":"AvailableConnectionsChannelHandler","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","title":"HummingbirdCore","role":"collection"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/channelReadComplete(context:)":{"role":"symbol","title":"channelReadComplete(context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/channelReadComplete(context:)","kind":"symbol","abstract":[{"text":"Called when the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" has completed its current read loop, either because no more data is available to read from the transport at this time, or because the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" needs to yield to the event loop to process other I\/O events for other ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s.","type":"text"},{"text":" ","type":"text"},{"text":"If ","type":"text"},{"code":"ChannelOptions.autoRead","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" no further read attempt will be made until ","type":"text"},{"code":"ChannelHandlerContext.read","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"Channel.read","type":"codeVoice"},{"text":" is explicitly called.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelreadcomplete(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelReadComplete","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}