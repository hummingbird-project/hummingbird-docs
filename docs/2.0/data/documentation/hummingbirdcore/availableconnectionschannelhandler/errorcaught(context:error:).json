{"metadata":{"extendedModule":"NIOCore","roleHeading":"Instance Method","externalID":"s:7NIOCore22_ChannelInboundHandlerPAAE11errorCaught7context0E0yAA0bD7ContextC_s5Error_ptF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","role":"symbol","modules":[{"name":"HummingbirdCore","relatedModules":["NIOCore"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"errorCaught","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"errorCaught(context:error:)","symbolKind":"method"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"context","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" belongs to."}]}]},{"name":"error","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":" that was encountered.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This should call ","type":"text"},{"type":"codeVoice","code":"context.fireErrorCaught"},{"text":" to forward the operation to the next ","type":"text"},{"type":"codeVoice","code":"_ChannelInboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" if you want to allow the next handler to also handle the error.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"abstract":[{"type":"text","text":"An error was encountered earlier in the inbound "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/errorCaught(context:error:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/errorcaught(context:error:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"kind":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","title":"AvailableConnectionsChannelHandler","role":"symbol","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/errorCaught(context:error:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/errorCaught(context:error:)","title":"errorCaught(context:error:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"errorCaught","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/errorcaught(context:error:)","abstract":[{"text":"An error was encountered earlier in the inbound ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}]}}}