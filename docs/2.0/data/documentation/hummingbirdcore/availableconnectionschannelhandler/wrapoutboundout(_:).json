{"abstract":[{"text":"Wrap the provided ","type":"text"},{"code":"OutboundOut","type":"codeVoice"},{"text":" that will be passed to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" by calling ","type":"text"},{"code":"ChannelHandlerContext.write","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"title":"wrapOutboundOut(_:)","role":"symbol","modules":[{"name":"HummingbirdCore","relatedModules":["NIOCore"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapOutboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutboundOut","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23_EmittingChannelHandlerP11OutboundOutQa"},{"text":") -> ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"}],"externalID":"s:7NIOCore23_EmittingChannelHandlerPAAE15wrapOutboundOutyAA6NIOAnyV0fG0QzF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","extendedModule":"NIOCore","roleHeading":"Instance Method","symbolKind":"method"},"variants":[{"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/wrapoutboundout(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapOutboundOut"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23_EmittingChannelHandlerP11OutboundOutQa","text":"OutboundOut"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"}],"platforms":["Linux"]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/wrapOutboundOut(_:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/wrapOutboundOut(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/wrapOutboundOut(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapOutboundOut"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NIOCore23_EmittingChannelHandlerP11OutboundOutQa","kind":"typeIdentifier","text":"OutboundOut"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"}],"title":"wrapOutboundOut(_:)","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/wrapoutboundout(_:)","type":"topic","abstract":[{"text":"Wrap the provided ","type":"text"},{"code":"OutboundOut","type":"codeVoice"},{"text":" that will be passed to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" by calling ","type":"text"},{"code":"ChannelHandlerContext.write","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","type":"topic","kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"title":"AvailableConnectionsChannelHandler","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"role":"symbol"},"logo.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png"}}}