{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/wrapOutboundOut(_:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapOutboundOut"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23_EmittingChannelHandlerP11OutboundOutQa","text":"OutboundOut"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"extendedModule":"NIOCore","modules":[{"name":"HummingbirdCore","relatedModules":["NIOCore"]}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","title":"wrapOutboundOut(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapOutboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutboundOut","preciseIdentifier":"s:7NIOCore23_EmittingChannelHandlerP11OutboundOutQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"}],"externalID":"s:7NIOCore23_EmittingChannelHandlerPAAE15wrapOutboundOutyAA6NIOAnyV0fG0QzF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC"},"variants":[{"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/wrapoutboundout(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"abstract":[{"type":"text","text":"Wrap the provided "},{"code":"OutboundOut","type":"codeVoice"},{"type":"text","text":" that will be passed to the next "},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"type":"text","text":" by calling "},{"code":"ChannelHandlerContext.write","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/wrapOutboundOut(_:)":{"type":"topic","role":"symbol","abstract":[{"text":"Wrap the provided ","type":"text"},{"code":"OutboundOut","type":"codeVoice"},{"text":" that will be passed to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" by calling ","type":"text"},{"code":"ChannelHandlerContext.write","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/wrapOutboundOut(_:)","title":"wrapOutboundOut(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapOutboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutboundOut","preciseIdentifier":"s:7NIOCore23_EmittingChannelHandlerP11OutboundOutQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/wrapoutboundout(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"kind":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","title":"AvailableConnectionsChannelHandler","role":"symbol","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"type":"topic"}}}