{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"handlerRemoved"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"text":")","kind":"text"}],"platforms":["Linux"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/handlerremoved(context:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelHandler-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Instance Method","role":"symbol","externalID":"s:7NIOCore14ChannelHandlerPAAE14handlerRemoved7contextyAA0bC7ContextC_tF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"modules":[{"relatedModules":["NIOCore"],"name":"HummingbirdCore"}],"extendedModule":"NIOCore","title":"handlerRemoved(context:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/handlerRemoved(context:)"},"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"code":"ChannelHandler.handlerRemoved(context:)","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/ChannelHandler-Implementations":{"kind":"article","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelhandler-implementations","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelHandler-Implementations","abstract":[],"title":"ChannelHandler Implementations","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/handlerRemoved(context:)":{"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/handlerremoved(context:)","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/handlerRemoved(context:)","title":"handlerRemoved(context:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"title":"AvailableConnectionsChannelHandler","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"title":"Hummingbird Documentation","url":"\/documentation\/index","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"}}}