{"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ChannelHandler.handlerRemoved(context:)"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/handlerremoved(context:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/handlerRemoved(context:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerRemoved"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"platforms":["Linux"]}],"kind":"declarations"}],"metadata":{"externalID":"s:7NIOCore14ChannelHandlerPAAE14handlerRemoved7contextyAA0bC7ContextC_tF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerRemoved"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"role":"symbol","title":"handlerRemoved(context:)","modules":[{"relatedModules":["NIOCore"],"name":"HummingbirdCore"}],"symbolKind":"method","extendedModule":"NIOCore","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"role":"symbol","type":"topic","title":"AvailableConnectionsChannelHandler","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/handlerRemoved(context:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/handlerRemoved(context:)","type":"topic","abstract":[],"title":"handlerRemoved(context:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/handlerremoved(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol"},"logo.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"}}}