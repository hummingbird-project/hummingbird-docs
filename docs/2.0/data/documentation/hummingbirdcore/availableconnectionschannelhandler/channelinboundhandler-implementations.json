{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"collectionGroup","roleHeading":"API Collection","title":"ChannelInboundHandler Implementations","modules":[{"name":"HummingbirdCore"}]},"topicSections":[{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/unwrapInboundIn(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/wrapInboundOut(_:)"]}],"sections":[],"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelInboundHandler-Implementations","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/unwrapInboundIn(_:)":{"kind":"symbol","title":"unwrapInboundIn(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapInboundIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelInboundHandlerP0C2InQa","text":"InboundIn","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/unwrapinboundin(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/unwrapInboundIn(_:)","role":"symbol","abstract":[],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/wrapInboundOut(_:)":{"title":"wrapInboundOut(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/wrapInboundOut(_:)","kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/wrapinboundout(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapInboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundOut","preciseIdentifier":"s:7NIOCore21ChannelInboundHandlerP0C3OutQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"}],"role":"symbol"},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"type":"topic","abstract":[{"text":"Channel Handler that controls whether we should accept new connections","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","title":"AvailableConnectionsChannelHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","title":"Hummingbird Documentation","role":"collection"}}}