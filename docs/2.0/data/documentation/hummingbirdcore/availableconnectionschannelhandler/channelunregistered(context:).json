{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/channelUnregistered(context:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelunregistered(context:)"]}],"metadata":{"role":"symbol","extendedModule":"NIOCore","symbolKind":"method","title":"channelUnregistered(context:)","externalID":"s:7NIOCore22_ChannelInboundHandlerPAAE19channelUnregistered7contextyAA0bD7ContextC_tF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","modules":[{"name":"HummingbirdCore","relatedModules":["NIOCore"]}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelUnregistered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"abstract":[{"type":"text","text":"Called when the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" has unregistered from its "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":", and so will no longer be receiving I\/O events."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelUnregistered"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"context","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" belongs to."}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This should call ","type":"text"},{"type":"codeVoice","code":"context.fireChannelUnregistered"},{"text":" to forward the operation to the next ","type":"text"},{"type":"codeVoice","code":"_ChannelInboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" if you want to allow the next handler to also handle the event.","type":"text"}],"type":"paragraph"}]}],"sections":[],"references":{"logo.png":{"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/channelUnregistered(context:)":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has unregistered from its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":", and so will no longer be receiving I\/O events."}],"title":"channelUnregistered(context:)","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelunregistered(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelUnregistered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/channelUnregistered(context:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdcore","kind":"symbol","title":"HummingbirdCore","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"kind":"symbol","title":"AvailableConnectionsChannelHandler"}}}