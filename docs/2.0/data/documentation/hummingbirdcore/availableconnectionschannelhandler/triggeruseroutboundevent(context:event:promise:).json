{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"Called when an user outbound event is triggered."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/triggerUserOutboundEvent(context:event:promise:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"triggerUserOutboundEvent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"context","content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":" which this "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" belongs to."}],"type":"paragraph"}]},{"name":"event","content":[{"inlineContent":[{"type":"text","text":"The triggered event."}],"type":"paragraph"}]},{"name":"promise","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" which should be notified once the operation completes, or nil if no notification should take place.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This should call ","type":"text"},{"code":"context.triggerUserOutboundEvent","type":"codeVoice"},{"text":" to forward the operation to the next ","type":"text"},{"code":"_ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"text":"complete the ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" to let the caller know that the operation completed.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/triggeruseroutboundevent(context:event:promise:)"]}],"metadata":{"externalID":"s:7NIOCore23_ChannelOutboundHandlerPAAE011triggerUserC5Event7context5event7promiseyAA0bD7ContextC_ypAA0G11LoopPromiseVyytGSgtF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"text":"Any","kind":"keyword"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":">?)"}],"extendedModule":"NIOCore","modules":[{"relatedModules":["NIOCore"],"name":"HummingbirdCore"}],"title":"triggerUserOutboundEvent(context:event:promise:)","roleHeading":"Instance Method","role":"symbol"},"references":{"logo.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/triggerUserOutboundEvent(context:event:promise:)":{"kind":"symbol","role":"symbol","abstract":[{"text":"Called when an user outbound event is triggered.","type":"text"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/triggeruseroutboundevent(context:event:promise:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/triggerUserOutboundEvent(context:event:promise:)","title":"triggerUserOutboundEvent(context:event:promise:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"triggerUserOutboundEvent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","title":"AvailableConnectionsChannelHandler","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"}}}