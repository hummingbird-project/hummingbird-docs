{"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Called when an user outbound event is triggered."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/triggeruseroutboundevent(context:event:promise:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"metadata":{"title":"triggerUserOutboundEvent(context:event:promise:)","symbolKind":"method","externalID":"s:7NIOCore23_ChannelOutboundHandlerPAAE011triggerUserC5Event7context5event7promiseyAA0bD7ContextC_ypAA0G11LoopPromiseVyytGSgtF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","extendedModule":"NIOCore","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"modules":[{"relatedModules":["NIOCore"],"name":"HummingbirdCore"}],"roleHeading":"Instance Method","role":"symbol"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/triggerUserOutboundEvent(context:event:promise:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"context","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" belongs to."}]}]},{"name":"event","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The triggered event."}]}]},{"name":"promise","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" which should be notified once the operation completes, or nil if no notification should take place.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This should call "},{"type":"codeVoice","code":"context.triggerUserOutboundEvent"},{"type":"text","text":" to forward the operation to the next "},{"type":"codeVoice","code":"_ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"text","text":"complete the "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" to let the caller know that the operation completed."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/triggerUserOutboundEvent(context:event:promise:)":{"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/triggeruseroutboundevent(context:event:promise:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/triggerUserOutboundEvent(context:event:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"kind":"symbol","role":"symbol","type":"topic","title":"triggerUserOutboundEvent(context:event:promise:)","abstract":[{"text":"Called when an user outbound event is triggered.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"title":"AvailableConnectionsChannelHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","abstract":[{"text":"Channel Handler that controls whether we should accept new connections","type":"text"}],"type":"topic","role":"symbol"},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]}}}