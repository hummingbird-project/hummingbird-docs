{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flush","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"context","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" belongs to."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This should call "},{"type":"codeVoice","code":"context.flush"},{"type":"text","text":" to forward the operation to the next "},{"type":"codeVoice","code":"_ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" or just"},{"type":"text","text":" "},{"type":"text","text":"discard it if the flush should be suppressed."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"Called to request that the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" flush all pending writes. The flush operation will try to flush out all previous written messages"},{"type":"text","text":" "},{"type":"text","text":"that are pending."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/flush(context:)"},"metadata":{"modules":[{"name":"HummingbirdCore","relatedModules":["NIOCore"]}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flush","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"symbolKind":"method","title":"flush(context:)","extendedModule":"NIOCore","externalID":"s:7NIOCore23_ChannelOutboundHandlerPAAE5flush7contextyAA0bD7ContextC_tF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/flush(context:)"]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","url":"\/documentation\/hummingbirdcore","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","title":"HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"title":"AvailableConnectionsChannelHandler","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"abstract":[{"text":"Channel Handler that controls whether we should accept new connections","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/flush(context:)":{"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/flush(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flush","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Called to request that the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" flush all pending writes. The flush operation will try to flush out all previous written messages"},{"type":"text","text":" "},{"type":"text","text":"that are pending."}],"title":"flush(context:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/flush(context:)"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null}}}