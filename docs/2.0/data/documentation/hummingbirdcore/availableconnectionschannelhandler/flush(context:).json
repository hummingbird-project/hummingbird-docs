{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"HummingbirdCore","relatedModules":["NIOCore"]}],"externalID":"s:7NIOCore23_ChannelOutboundHandlerPAAE5flush7contextyAA0bD7ContextC_tF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","extendedModule":"NIOCore","title":"flush(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flush","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/flush(context:)","interfaceLanguage":"swift"},"abstract":[{"text":"Called to request that the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" flush all pending writes. The flush operation will try to flush out all previous written messages","type":"text"},{"text":" ","type":"text"},{"text":"that are pending.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flush","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"context","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" belongs to."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This should call ","type":"text"},{"type":"codeVoice","code":"context.flush"},{"text":" to forward the operation to the next ","type":"text"},{"type":"codeVoice","code":"_ChannelOutboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" or just","type":"text"},{"text":" ","type":"text"},{"text":"discard it if the flush should be suppressed.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/flush(context:)"]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/flush(context:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/flush(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"title":"flush(context:)","role":"symbol","abstract":[{"type":"text","text":"Called to request that the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" flush all pending writes. The flush operation will try to flush out all previous written messages"},{"type":"text","text":" "},{"type":"text","text":"that are pending."}],"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/flush(context:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","title":"AvailableConnectionsChannelHandler","type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","type":"topic","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","role":"collection"},"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]}}}