{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"abstract":[{"type":"text","text":"Called to request that the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" close itself down."}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9CloseModeO","kind":"typeIdentifier","text":"CloseMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"title":"close(context:mode:promise:)","roleHeading":"Instance Method","extendedModule":"NIOCore","symbolKind":"method","externalID":"s:7NIOCore23_ChannelOutboundHandlerPAAE5close7context4mode7promiseyAA0bD7ContextC_AA9CloseModeOAA16EventLoopPromiseVyytGSgtF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","modules":[{"name":"HummingbirdCore","relatedModules":["NIOCore"]}]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9CloseModeO","kind":"typeIdentifier","text":"CloseMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}]}]},{"kind":"parameters","parameters":[{"name":"context","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext"},{"text":" which this ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" belongs to.","type":"text"}]}]},{"name":"mode","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"CloseMode"},{"text":" to apply","type":"text"}]}]},{"name":"promise","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" which should be notified once the operation completes, or nil if no notification should take place.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This should call ","type":"text"},{"type":"codeVoice","code":"context.close"},{"text":" to forward the operation to the next ","type":"text"},{"type":"codeVoice","code":"_ChannelOutboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"text":"complete the ","type":"text"},{"type":"codeVoice","code":"EventLoopPromise"},{"text":" to let the caller know that the operation completed.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/close(context:mode:promise:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/close(context:mode:promise:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/close(context:mode:promise:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/close(context:mode:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CloseMode","preciseIdentifier":"s:7NIOCore9CloseModeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"text":"Called to request that the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" close itself down.","type":"text"}],"type":"topic","title":"close(context:mode:promise:)","kind":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/close(context:mode:promise:)","role":"symbol"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","title":"HummingbirdCore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","kind":"symbol","title":"AvailableConnectionsChannelHandler","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"role":"symbol","type":"topic"}}}