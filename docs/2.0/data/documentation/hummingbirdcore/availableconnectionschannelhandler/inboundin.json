{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"},{"kind":"text","text":" = "},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"}],"platforms":["Linux"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"role":"symbol","externalID":"s:15HummingbirdCore34AvailableConnectionsChannelHandlerC9InboundIna","roleHeading":"Type Alias","modules":[{"name":"HummingbirdCore"}],"symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"title":"AvailableConnectionsChannelHandler.InboundIn"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundin"]}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"ChannelInboundHandler.InboundIn","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"type":"topic","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"title":"AvailableConnectionsChannelHandler","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/InboundIn":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"role":"symbol","type":"topic","title":"AvailableConnectionsChannelHandler.InboundIn","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundin","kind":"symbol","abstract":[]},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"type":"image"}}}