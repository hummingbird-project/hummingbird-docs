{"sections":[],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/7NIOCore14ChannelHandlerP","doc:\/\/com.opticalaberration.hummingbird\/7NIOCore21ChannelInboundHandlerP","doc:\/\/com.opticalaberration.hummingbird\/7NIOCore22ChannelOutboundHandlerP","doc:\/\/com.opticalaberration.hummingbird\/7NIOCore23RemovableChannelHandlerP"]}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/httpusereventhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"generated":true,"title":"HTTP Server","anchor":"HTTP-Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPUserEventHandler","kind":"identifier"}],"platforms":["Linux"]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/init(logger:)"],"anchor":"Initializers"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/channelRead(context:data:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/userInboundEventTriggered(context:event:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/write(context:data:promise:)"],"anchor":"Instance-Methods"},{"title":"Type Aliases","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/InboundIn","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/InboundOut","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/OutboundIn","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/OutboundOut"],"anchor":"Type-Aliases"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/ChannelHandler-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/ChannelInboundHandler-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/ChannelOutboundHandler-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/RemovableChannelHandler-Implementations"],"anchor":"Default-Implementations"}],"metadata":{"title":"HTTPUserEventHandler","modules":[{"name":"HummingbirdCore"}],"role":"symbol","navigatorTitle":[{"text":"HTTPUserEventHandler","kind":"identifier"}],"symbolKind":"class","roleHeading":"Class","externalID":"s:15HummingbirdCore20HTTPUserEventHandlerC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPUserEventHandler","kind":"identifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/userInboundEventTriggered(context:event:)":{"abstract":[{"type":"text","text":"Called when a user inbound event has been triggered."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"userInboundEventTriggered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/userinboundeventtriggered(context:event:)","type":"topic","kind":"symbol","role":"symbol","title":"userInboundEventTriggered(context:event:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/userInboundEventTriggered(context:event:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/ChannelOutboundHandler-Implementations":{"title":"ChannelOutboundHandler Implementations","kind":"article","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/ChannelOutboundHandler-Implementations","url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channeloutboundhandler-implementations"},"doc://com.opticalaberration.hummingbird/7NIOCore23RemovableChannelHandlerP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore23RemovableChannelHandlerP","title":"NIOCore.RemovableChannelHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"title":"HTTPUserEventHandler","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler","navigatorTitle":[{"kind":"identifier","text":"HTTPUserEventHandler"}],"url":"\/documentation\/hummingbirdcore\/httpusereventhandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPUserEventHandler"}],"abstract":[],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/RemovableChannelHandler-Implementations":{"kind":"article","url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/removablechannelhandler-implementations","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/RemovableChannelHandler-Implementations","abstract":[],"type":"topic","title":"RemovableChannelHandler Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/OutboundOut":{"url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/outboundout","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"title":"HTTPUserEventHandler.OutboundOut","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/OutboundOut"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/InboundIn":{"title":"HTTPUserEventHandler.InboundIn","kind":"symbol","abstract":[],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/InboundIn","url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/inboundin","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/OutboundIn":{"type":"topic","url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/outboundin","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"title":"HTTPUserEventHandler.OutboundIn","navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"abstract":[],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/OutboundIn"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/ChannelInboundHandler-Implementations":{"url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channelinboundhandler-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/ChannelInboundHandler-Implementations","abstract":[],"type":"topic","title":"ChannelInboundHandler Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","url":"\/documentation\/hummingbirdcore\/http1channel","navigatorTitle":[{"text":"HTTP1Channel","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1Channel","kind":"identifier"}],"title":"HTTP1Channel","type":"topic","abstract":[{"text":"Child channel for processing HTTP1","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/7NIOCore21ChannelInboundHandlerP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore21ChannelInboundHandlerP","title":"NIOCore.ChannelInboundHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","url":"\/documentation\/hummingbirdcore","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","title":"HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection"},"doc://com.opticalaberration.hummingbird/7NIOCore22ChannelOutboundHandlerP":{"type":"unresolvable","title":"NIOCore.ChannelOutboundHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore22ChannelOutboundHandlerP"},"doc://com.opticalaberration.hummingbird/7NIOCore14ChannelHandlerP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore14ChannelHandlerP","title":"NIOCore.ChannelHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/write(context:data:promise:)":{"abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"type":"text","text":" "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" when"},{"type":"text","text":" "},{"code":"Channel.flush","type":"codeVoice"},{"type":"text","text":" or "},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"type":"text","text":" is called."}],"title":"write(context:data:promise:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/write(context:data:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/write(context:data:promise:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/init(logger:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/init(logger:)","abstract":[],"title":"init(logger:)","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/init(logger:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/ChannelHandler-Implementations":{"title":"ChannelHandler Implementations","kind":"article","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channelhandler-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/ChannelHandler-Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/channelRead(context:data:)":{"abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channelread(context:data:)","kind":"symbol","role":"symbol","title":"channelRead(context:data:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/channelRead(context:data:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder","url":"\/documentation\/hummingbirdcore\/httpserverbuilder","title":"HTTPServerBuilder","navigatorTitle":[{"kind":"identifier","text":"HTTPServerBuilder"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerBuilder"}],"type":"topic","abstract":[{"text":"Build server that takes an HTTP responder","type":"text"}]},"logo.png":{"alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/InboundOut":{"title":"HTTPUserEventHandler.InboundOut","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/InboundOut","navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/inboundout","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"kind":"symbol","url":"\/documentation\/hummingbirdcore\/httpchannelhandler","title":"HTTPChannelHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","navigatorTitle":[{"kind":"identifier","text":"HTTPChannelHandler"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPChannelHandler"}],"type":"topic","abstract":[{"text":"Protocol for HTTP channels","type":"text"}]}}}