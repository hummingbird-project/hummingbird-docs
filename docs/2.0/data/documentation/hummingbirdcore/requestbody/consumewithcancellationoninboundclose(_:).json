{"kind":"symbol","sections":[],"metadata":{"role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeWithCancellationOnInboundClose","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"RequestBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp"}],"externalID":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF","extendedModule":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}],"title":"consumeWithCancellationOnInboundClose(_:)","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Run provided closure but cancel it if the inbound request part stream is closed."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithCancellationOnInboundClose(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/requestbody\/consumewithcancellationoninboundclose(_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeWithCancellationOnInboundClose","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operation","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"RequestBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Return value of operation"}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is designed for use with long running requests like server sent events. It assumes you"},{"type":"text","text":" "},{"type":"text","text":"are not going to be using the request body after calling as it consumes the request body, it also assumes"},{"type":"text","text":" "},{"type":"text","text":"you havent edited the request body prior to calling this function."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the response finishes the connection will be closed."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameters"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"isolation: The isolation of the method. Defaults to the isolation of the caller."}]}]},{"content":[{"inlineContent":[{"text":"operation: The actual operation to run","type":"text"}],"type":"paragraph"}]}]}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"logo.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/consumeWithCancellationOnInboundClose(_:)":{"type":"topic","url":"\/documentation\/hummingbirdcore\/requestbody\/consumewithcancellationoninboundclose(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeWithCancellationOnInboundClose","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"RequestBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp"}],"role":"symbol","title":"consumeWithCancellationOnInboundClose(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithCancellationOnInboundClose(_:)","abstract":[{"type":"text","text":"Run provided closure but cancel it if the inbound request part stream is closed."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestBody"}],"url":"\/documentation\/hummingbirdcore\/requestbody","title":"RequestBody","role":"symbol","abstract":[{"type":"text","text":"Request Body"}],"navigatorTitle":[{"kind":"identifier","text":"RequestBody"}],"kind":"symbol"}}}