{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"]]},"abstract":[{"type":"text","text":"Run provided closure but cancel it if the inbound request part stream is closed."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithCancellationOnInboundClose(_:)"},"variants":[{"paths":["\/documentation\/hummingbirdcore\/requestbody\/consumewithcancellationoninboundclose(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeWithCancellationOnInboundClose"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV","kind":"typeIdentifier","text":"RequestBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"Return value of operation","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This function is designed for use with long running requests like server sent events. It assumes you","type":"text"},{"text":" ","type":"text"},{"text":"are not going to be using the request body after calling as it consumes the request body, it also assumes","type":"text"},{"text":" ","type":"text"},{"text":"you havent edited the request body prior to calling this function.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the response finishes the connection will be closed."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Parameters","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"isolation: The isolation of the method. Defaults to the isolation of the caller.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"operation: The actual operation to run"}]}]}]}]}],"type":"unorderedList"}],"kind":"content"}],"metadata":{"modules":[{"name":"HummingbirdCore"}],"title":"consumeWithCancellationOnInboundClose(_:)","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeWithCancellationOnInboundClose"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV","kind":"typeIdentifier","text":"RequestBody"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier","text":"Value"}],"externalID":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF","extendedModule":"HummingbirdCore"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/consumeWithCancellationOnInboundClose(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithCancellationOnInboundClose(_:)","type":"topic","role":"symbol","abstract":[{"text":"Run provided closure but cancel it if the inbound request part stream is closed.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeWithCancellationOnInboundClose","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV","text":"RequestBody","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","text":"Value","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/requestbody\/consumewithcancellationoninboundclose(_:)","title":"consumeWithCancellationOnInboundClose(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestBody"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RequestBody"}],"role":"symbol","title":"RequestBody","abstract":[{"text":"Request Body","type":"text"}],"url":"\/documentation\/hummingbirdcore\/requestbody","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"},"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image"}}}