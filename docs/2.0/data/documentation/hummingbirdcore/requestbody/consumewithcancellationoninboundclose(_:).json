{"metadata":{"extendedModule":"HummingbirdCore","role":"symbol","modules":[{"name":"HummingbirdCore"}],"symbolKind":"method","externalID":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeWithCancellationOnInboundClose","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"RequestBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp"}],"roleHeading":"Instance Method","title":"consumeWithCancellationOnInboundClose(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/requestbody\/consumewithcancellationoninboundclose(_:)"]}],"abstract":[{"type":"text","text":"Run provided closure but cancel it if the inbound request part stream is closed."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithCancellationOnInboundClose(_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeWithCancellationOnInboundClose"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","text":"RequestBody","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"Return value of operation","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This function is designed for use with long running requests like server sent events. It assumes you"},{"type":"text","text":" "},{"type":"text","text":"are not going to be using the request body after calling as it consumes the request body, it also assumes"},{"type":"text","text":" "},{"type":"text","text":"you havent edited the request body prior to calling this function."}],"type":"paragraph"},{"inlineContent":[{"text":"If the response finishes the connection will be closed.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameters"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"isolation: The isolation of the method. Defaults to the isolation of the caller.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"operation: The actual operation to run","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"]]},"sections":[],"references":{"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"type":"topic","url":"\/documentation\/hummingbirdcore\/requestbody","kind":"symbol","title":"RequestBody","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","abstract":[{"type":"text","text":"Request Body"}],"navigatorTitle":[{"text":"RequestBody","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/consumeWithCancellationOnInboundClose(_:)":{"url":"\/documentation\/hummingbirdcore\/requestbody\/consumewithcancellationoninboundclose(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeWithCancellationOnInboundClose"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV","kind":"typeIdentifier","text":"RequestBody"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithCancellationOnInboundClose(_:)","title":"consumeWithCancellationOnInboundClose(_:)","type":"topic","abstract":[{"text":"Run provided closure but cancel it if the inbound request part stream is closed.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol"}}}