{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/requestbody\/consumewithcancellationoninboundclose(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeWithCancellationOnInboundClose","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"operation","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"RequestBody","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","text":"Value"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Return value of operation"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"This function is designed for use with long running requests like server sent events. It assumes you","type":"text"},{"text":" ","type":"text"},{"text":"are not going to be using the request body after calling as it consumes the request body, it also assumes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you havent edited the request body prior to calling this function."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the response finishes the connection will be closed."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameters"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"isolation: The isolation of the method. Defaults to the isolation of the caller."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"operation: The actual operation to run","type":"text"}]}]}]}]}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithCancellationOnInboundClose(_:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"metadata":{"symbolKind":"method","modules":[{"name":"HummingbirdCore"}],"role":"symbol","extendedModule":"HummingbirdCore","externalID":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"consumeWithCancellationOnInboundClose","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV","text":"RequestBody"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier","text":"Value"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp"}],"roleHeading":"Instance Method","title":"consumeWithCancellationOnInboundClose(_:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Run provided closure but cancel it if the inbound request part stream is closed.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/consumeWithCancellationOnInboundClose(_:)":{"title":"consumeWithCancellationOnInboundClose(_:)","role":"symbol","url":"\/documentation\/hummingbirdcore\/requestbody\/consumewithcancellationoninboundclose(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithCancellationOnInboundClose(_:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"consumeWithCancellationOnInboundClose","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV","kind":"typeIdentifier","text":"RequestBody"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV37consumeWithCancellationOnInboundCloseyxxACYaKXEYaKs8SendableRzlF5ValueL_xmfp"}],"abstract":[{"text":"Run provided closure but cancel it if the inbound request part stream is closed.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestBody","kind":"identifier"}],"navigatorTitle":[{"text":"RequestBody","kind":"identifier"}],"title":"RequestBody","url":"\/documentation\/hummingbirdcore\/requestbody","type":"topic","kind":"symbol","abstract":[{"text":"Request Body","type":"text"}],"role":"symbol"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","url":"\/documentation\/index","title":"Hummingbird Documentation","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","kind":"symbol","url":"\/documentation\/hummingbirdcore","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]}}}