{"variants":[{"paths":["\/documentation\/hummingbirdcore\/requestbody\/consumewithinboundclosehandler(isolation:_:oninboundclosed:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"consumeWithInboundCloseHandler(isolation:_:onInboundClosed:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeWithInboundCloseHandler","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"isolation","kind":"externalParam"},{"kind":"text","text":": "},{"text":"isolated","kind":"keyword"},{"text":" (","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:ScA","text":"Actor","kind":"typeIdentifier"},{"text":")?, (","kind":"text"},{"text":"RequestBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV30consumeWithInboundCloseHandler9isolation_02onG6ClosedxScA_pSgYi_xACYaKXEyyYbctYaKs8SendableRzlF5ValueL_xmfp"},{"kind":"text","text":", "},{"text":"onInboundClosed","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV30consumeWithInboundCloseHandler9isolation_02onG6ClosedxScA_pSgYi_xACYaKXEyyYbctYaKs8SendableRzlF5ValueL_xmfp"}],"role":"symbol","modules":[{"name":"HummingbirdCore"}],"externalID":"s:15HummingbirdCore11RequestBodyV30consumeWithInboundCloseHandler9isolation_02onG6ClosedxScA_pSgYi_xACYaKXEyyYbctYaKs8SendableRzlF","roleHeading":"Instance Method","extendedModule":"HummingbirdCore","symbolKind":"method"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithInboundCloseHandler(isolation:_:onInboundClosed:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"consumeWithInboundCloseHandler"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"isolation","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"isolated"},{"text":" (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:ScA","kind":"typeIdentifier","text":"Actor"},{"text":")? = #isolation, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"operation","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"RequestBody","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV30consumeWithInboundCloseHandler9isolation_02onG6ClosedxScA_pSgYi_xACYaKXEyyYbctYaKs8SendableRzlF5ValueL_xmfp"},{"text":", ","kind":"text"},{"text":"onInboundClosed","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV30consumeWithInboundCloseHandler9isolation_02onG6ClosedxScA_pSgYi_xACYaKXEyyYbctYaKs8SendableRzlF5ValueL_xmfp","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}]}],"kind":"declarations"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Return value of operation"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This function is designed for use with long running requests like server sent events. It assumes you","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are not going to be using the request body after calling as it consumes the request body, it also assumes"},{"type":"text","text":" "},{"text":"you havent edited the request body prior to calling this function.","type":"text"}]},{"inlineContent":[{"text":"If the response finishes the connection will be closed.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Parameters","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"isolation: The isolation of the method. Defaults to the isolation of the caller."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"operation: The actual operation"},{"type":"text","text":" "},{"type":"text","text":"= onInboundClose: handler invoked when inbound is closed"}],"type":"paragraph"}]}]}]}]}]}],"abstract":[{"text":"Run provided closure but cancel it if the inbound request part stream is closed.","type":"text"}],"references":{"logo.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"kind":"article","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","kind":"symbol","title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/consumeWithInboundCloseHandler(isolation:_:onInboundClosed:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"consumeWithInboundCloseHandler"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"isolation","kind":"externalParam"},{"kind":"text","text":": "},{"text":"isolated","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:ScA","text":"Actor","kind":"typeIdentifier"},{"kind":"text","text":")?, ("},{"text":"RequestBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV30consumeWithInboundCloseHandler9isolation_02onG6ClosedxScA_pSgYi_xACYaKXEyyYbctYaKs8SendableRzlF5ValueL_xmfp"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"onInboundClosed"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV30consumeWithInboundCloseHandler9isolation_02onG6ClosedxScA_pSgYi_xACYaKXEyyYbctYaKs8SendableRzlF5ValueL_xmfp","text":"Value"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/consumeWithInboundCloseHandler(isolation:_:onInboundClosed:)","title":"consumeWithInboundCloseHandler(isolation:_:onInboundClosed:)","type":"topic","url":"\/documentation\/hummingbirdcore\/requestbody\/consumewithinboundclosehandler(isolation:_:oninboundclosed:)","kind":"symbol","abstract":[{"type":"text","text":"Run provided closure but cancel it if the inbound request part stream is closed."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Request Body"}],"title":"RequestBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","url":"\/documentation\/hummingbirdcore\/requestbody","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestBody","kind":"identifier"}],"navigatorTitle":[{"text":"RequestBody","kind":"identifier"}],"kind":"symbol"}}}