{"kind":"symbol","relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/requestbody\/source"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"modules":[{"name":"HummingbirdCore"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Source","kind":"identifier"}],"role":"symbol","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"Source"}],"symbolKind":"class","extendedModule":"HummingbirdCore","title":"RequestBody.Source","externalID":"s:15HummingbirdCore11RequestBodyV6SourceC"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/finish()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/finish(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/yield(_:)"],"anchor":"Instance-Methods","title":"Instance Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"]]},"abstract":[{"type":"text","text":"A source used for driving a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","isActive":true,"type":"reference"},{"text":" stream.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/Source/yield(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"yield","kind":"identifier"},{"kind":"text","text":"("},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/yield(_:)","abstract":[{"type":"text","text":"Yields the element to the inbound stream."}],"kind":"symbol","title":"yield(_:)","type":"topic","url":"\/documentation\/hummingbirdcore\/requestbody\/source\/yield(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"navigatorTitle":[{"text":"RequestBody","kind":"identifier"}],"abstract":[{"text":"Request Body","type":"text"}],"url":"\/documentation\/hummingbirdcore\/requestbody","type":"topic","kind":"symbol","title":"RequestBody","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestBody"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","kind":"article","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/Source/finish(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"finish","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/finish(_:)","kind":"symbol","url":"\/documentation\/hummingbirdcore\/requestbody\/source\/finish(_:)","type":"topic","abstract":[{"text":"Finished the inbound stream.","type":"text"}],"title":"finish(_:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/Source":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source","kind":"symbol","url":"\/documentation\/hummingbirdcore\/requestbody\/source","navigatorTitle":[{"text":"Source","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A source used for driving a "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","type":"reference"},{"type":"text","text":" stream."}],"title":"RequestBody.Source","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/Source/finish()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"finish","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/hummingbirdcore\/requestbody\/source\/finish()","type":"topic","title":"finish()","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/finish()","abstract":[{"text":"Finished the inbound stream.","type":"text"}],"kind":"symbol"}}}