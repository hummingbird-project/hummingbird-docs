{"sections":[],"abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections"],"generated":true,"anchor":"Server","title":"Server"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","metadata":{"externalID":"s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"modules":[{"name":"HummingbirdCore"}],"symbolKind":"class","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"role":"symbol","title":"AvailableConnectionsChannelHandler","roleHeading":"Class"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"},"topicSections":[{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/init(delegate:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/init(maxConnections:)"],"title":"Initializers"},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/channelRead(context:data:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/read(context:)"],"title":"Instance Methods"},{"generated":true,"anchor":"Type-Aliases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundOut","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/OutboundIn","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/OutboundOut"],"title":"Type Aliases"},{"generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelHandler-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelInboundHandler-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelOutboundHandler-Implementations"],"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/7NIOCore14ChannelHandlerP","doc:\/\/com.opticalaberration.hummingbird\/7NIOCore21ChannelInboundHandlerP","doc:\/\/com.opticalaberration.hummingbird\/7NIOCore22ChannelOutboundHandlerP"],"title":"Conforms To"}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Delegate","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Delegate","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AvailableConnectionsDelegate","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore28AvailableConnectionsDelegateP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Handler is initialized with a delegate object that makes the decision on whether to accept a new connection"}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/InboundIn":{"type":"topic","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundin","title":"AvailableConnectionsChannelHandler.InboundIn"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/BindAddress":{"role":"symbol","type":"topic","title":"BindAddress","url":"\/documentation\/hummingbirdcore\/bindaddress","navigatorTitle":[{"kind":"identifier","text":"BindAddress"}],"abstract":[{"text":"Address to bind server to","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindAddress"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"type":"topic","abstract":[{"text":"HTTP server configuration","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ServerConfiguration"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerConfiguration"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/serverconfiguration","title":"ServerConfiguration"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsDelegate":{"role":"symbol","type":"topic","title":"AvailableConnectionsDelegate","url":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsDelegate"}],"abstract":[{"type":"text","text":"Delegate for "},{"type":"codeVoice","code":"AvailableConnectionsChannelHandler"},{"type":"text","text":" that defines if we should accept"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsDelegate"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"type":"topic","abstract":[{"type":"text","text":"HTTP server class"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Server"}],"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Server"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/server","title":"Server"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/OutboundIn":{"role":"symbol","type":"topic","title":"AvailableConnectionsChannelHandler.OutboundIn","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/outboundin","navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/OutboundIn","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/init(delegate:)":{"type":"topic","abstract":[{"type":"text","text":"Initialize handler with a delegate defining when connections are available"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/init(delegate:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"delegate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Delegate","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore34AvailableConnectionsChannelHandlerC8Delegatexmfp"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/init(delegate:)","title":"init(delegate:)"},"doc://com.opticalaberration.hummingbird/7NIOCore22ChannelOutboundHandlerP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore22ChannelOutboundHandlerP","title":"NIOCore.ChannelOutboundHandler"},"doc://com.opticalaberration.hummingbird/7NIOCore14ChannelHandlerP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore14ChannelHandlerP","title":"NIOCore.ChannelHandler"},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/MaximumAvailableConnections":{"role":"symbol","type":"topic","title":"MaximumAvailableConnections","url":"\/documentation\/hummingbirdcore\/maximumavailableconnections","navigatorTitle":[{"kind":"identifier","text":"MaximumAvailableConnections"}],"abstract":[{"text":"Implementation of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate"},{"text":" that sets a maximum limit to the number","type":"text"},{"text":" ","type":"text"},{"text":"of open connections","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MaximumAvailableConnections"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/init(maxConnections:)":{"type":"topic","abstract":[{"type":"text","text":"Initialize handler to only make a set number of connections available"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/init(maxConnections:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxConnections"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/init(maxconnections:)","title":"init(maxConnections:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/ChannelHandler-Implementations":{"role":"collectionGroup","type":"topic","title":"ChannelHandler Implementations","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelhandler-implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelHandler-Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/7NIOCore21ChannelInboundHandlerP":{"title":"NIOCore.ChannelInboundHandler","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore21ChannelInboundHandlerP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/read(context:)":{"type":"topic","abstract":[{"type":"text","text":"Called to request that the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" perform a read when data is ready. The read operation will signal that we are ready to read more data."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/read(context:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/read(context:)","title":"read(context:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"role":"symbol","type":"topic","title":"ServerChildChannel","url":"\/documentation\/hummingbirdcore\/serverchildchannel","navigatorTitle":[{"text":"ServerChildChannel","kind":"identifier"}],"abstract":[{"type":"text","text":"Generic server child channel setup protocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerChildChannel","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/ChannelInboundHandler-Implementations":{"abstract":[],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelInboundHandler-Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/OutboundOut":{"role":"symbol","type":"topic","title":"AvailableConnectionsChannelHandler.OutboundOut","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/outboundout","navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/OutboundOut","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OutboundOut"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"role":"symbol","type":"topic","title":"AvailableConnectionsChannelHandler","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/InboundOut":{"type":"topic","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundOut","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundout","title":"AvailableConnectionsChannelHandler.InboundOut"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/channelRead(context:data:)":{"role":"symbol","type":"topic","title":"channelRead(context:data:)","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelread(context:data:)","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/channelRead(context:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannelValue":{"abstract":[{"type":"text","text":"Protocol for typed server child channel"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","role":"symbol","navigatorTitle":[{"text":"ServerChildChannelValue","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerChildChannelValue","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/serverchildchannelvalue","title":"ServerChildChannelValue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/ChannelOutboundHandler-Implementations":{"role":"collectionGroup","type":"topic","title":"ChannelOutboundHandler Implementations","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channeloutboundhandler-implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelOutboundHandler-Implementations","kind":"article"}}}