{"abstract":[{"text":"Collapse body into one ByteBuffer.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/request\/collectbody(upto:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"]]},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collectBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":" "},{"kind":"internalParam","text":"maxSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"maxSize","content":[{"type":"paragraph","inlineContent":[{"text":"Maxiumum size of body to collect","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Collated body"}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This will store the collated ByteBuffer back into the request so is a mutating method. If","type":"text"},{"text":" ","type":"text"},{"text":"you donâ€™t need to store the collated ByteBuffer on the request then use","type":"text"},{"text":" ","type":"text"},{"code":"request.body.collect(maxSize:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"role":"symbol","symbolKind":"method","modules":[{"name":"HummingbirdCore"}],"externalID":"s:15HummingbirdCore7RequestV11collectBody4upTo7NIOCore10ByteBufferVSi_tYaKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collectBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"title":"collectBody(upTo:)","roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request\/collectBody(upTo:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request/collectBody(upTo:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request\/collectBody(upTo:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collectBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Collapse body into one ByteBuffer."}],"type":"topic","role":"symbol","title":"collectBody(upTo:)","url":"\/documentation\/hummingbirdcore\/request\/collectbody(upto:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","title":"Request"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","type":"topic","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}]}}}