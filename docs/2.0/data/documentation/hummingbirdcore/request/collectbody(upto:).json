{"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request\/collectBody(upTo:)"},"metadata":{"title":"collectBody(upTo:)","modules":[{"name":"HummingbirdCore"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collectBody","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"}],"externalID":"s:15HummingbirdCore7RequestV11collectBody4upTo7NIOCore10ByteBufferVSi_tYaKF"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Collapse body into one ByteBuffer."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"collectBody"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"kind":"text","text":" "},{"text":"maxSize","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}]}]},{"kind":"parameters","parameters":[{"name":"maxSize","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Maxiumum size of body to collect"}]}]}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"Collated body","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This will store the collated ByteBuffer back into the request so is a mutating method. If","type":"text"},{"type":"text","text":" "},{"text":"you donâ€™t need to store the collated ByteBuffer on the request then use","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"request.body.collect(maxSize:)"},{"text":".","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/request\/collectbody(upto:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol"},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"kind":"article","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","kind":"symbol","title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request/collectBody(upTo:)":{"abstract":[{"text":"Collapse body into one ByteBuffer.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/request\/collectbody(upto:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"collectBody"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request\/collectBody(upTo:)","title":"collectBody(upTo:)","role":"symbol"}}}