{"abstract":[{"type":"text","text":"Conditional request which will only be processed if the eTag supplied is in the"},{"type":"text","text":" "},{"code":"If-Match","type":"codeVoice"},{"type":"text","text":" request header."}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdcore\/request\/ifmatch(headers:etag:context:process:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request\/ifMatch(headers:eTag:context:process:)"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifMatch"},{"kind":"text","text":"("},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields"},{"kind":"text","text":" = [:], "},{"kind":"externalParam","text":"eTag"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","text":"RequestContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"process"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","text":"ResponseGenerator"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","text":"Response"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"headers","content":[{"inlineContent":[{"type":"text","text":"Headers to add to response when condition fails"}],"type":"paragraph"}]},{"name":"eTag","content":[{"type":"paragraph","inlineContent":[{"text":"ETag for this responses content","type":"text"}]}]},{"name":"context","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Request context"}]}]},{"name":"process","content":[{"inlineContent":[{"type":"text","text":"Closure to run if eTag is not in the "},{"code":"If-None-Match","type":"codeVoice"},{"type":"text","text":" header"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"Response","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"For GET and HEAD methods, used in combination with a Range header, it can guarantee","type":"text"},{"text":" ","type":"text"},{"text":"that the new ranges requested come from the same resource as the previous one.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"For other methods, and in particular for PUT, If-Match can be used to prevent","type":"text"},{"text":" ","type":"text"},{"text":"the lost update problem. It can check if the modification of a resource that the","type":"text"},{"text":" ","type":"text"},{"text":"user wants to upload will not override another change that has been done since","type":"text"},{"text":" ","type":"text"},{"text":"the original resource was fetched.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"metadata":{"title":"ifMatch(headers:eTag:context:process:)","modules":[{"name":"HummingbirdCore"}],"extendedModule":"HummingbirdCore","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifMatch"},{"kind":"text","text":"("},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPFields","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eTag"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"process"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"}],"role":"symbol","externalID":"s:15HummingbirdCore7RequestV0A0E7ifMatch7headers4eTag7context7processAA8ResponseV9HTTPTypes10HTTPFieldsV_SSxq_yYaKXEtYaKAD0C7ContextRzAD0J9GeneratorR_r0_lF"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request/ifMatch(headers:eTag:context:process:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ifMatch","kind":"identifier"},{"text":"(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"eTag","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"process","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"}],"title":"ifMatch(headers:eTag:context:process:)","role":"symbol","type":"topic","abstract":[{"text":"Conditional request which will only be processed if the eTag supplied is in the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"If-Match"},{"text":" request header.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request\/ifMatch(headers:eTag:context:process:)","url":"\/documentation\/hummingbirdcore\/request\/ifmatch(headers:etag:context:process:)"},"logo.png":{"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"title":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","kind":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"role":"symbol","navigatorTitle":[{"text":"Response","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}],"title":"ResponseGenerator","url":"\/documentation\/hummingbird\/responsegenerator","role":"symbol","abstract":[{"text":"Object that can generate a ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"Request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"title":"RequestContext","url":"\/documentation\/hummingbird\/requestcontext","role":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"kind":"symbol"}}}