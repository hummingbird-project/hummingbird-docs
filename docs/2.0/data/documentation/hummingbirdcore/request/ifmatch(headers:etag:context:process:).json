{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"]]},"abstract":[{"type":"text","text":"Conditional request which will only be processed if the eTag supplied is in the"},{"type":"text","text":" "},{"type":"codeVoice","code":"If-Match"},{"type":"text","text":" request header."}],"metadata":{"title":"ifMatch(headers:eTag:context:process:)","role":"symbol","externalID":"s:15HummingbirdCore7RequestV0A0E7ifMatch7headers4eTag7context7processAA8ResponseV9HTTPTypes10HTTPFieldsV_SSxq_yYaKXEtYaKAD0C7ContextRzAD0J9GeneratorR_r0_lF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ifMatch","kind":"identifier"},{"text":"(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPFields","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"text":", ","kind":"text"},{"text":"eTag","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP"},{"text":", ","kind":"text"},{"text":"process","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"}],"extendedModule":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}],"roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/request\/ifmatch(headers:etag:context:process:)"]}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request\/ifMatch(headers:eTag:context:process:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifMatch"},{"kind":"text","text":"("},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","kind":"typeIdentifier","text":"HTTPFields"},{"kind":"text","text":" = [:], "},{"kind":"externalParam","text":"eTag"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier","text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"process"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","kind":"typeIdentifier","text":"ResponseGenerator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier","text":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"}]}]},{"kind":"parameters","parameters":[{"name":"headers","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Headers to add to response when condition fails"}]}]},{"name":"eTag","content":[{"inlineContent":[{"text":"ETag for this responses content","type":"text"}],"type":"paragraph"}]},{"name":"context","content":[{"type":"paragraph","inlineContent":[{"text":"Request context","type":"text"}]}]},{"name":"process","content":[{"type":"paragraph","inlineContent":[{"text":"Closure to run if eTag is not in the ","type":"text"},{"code":"If-None-Match","type":"codeVoice"},{"text":" header","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Response"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"items":[{"content":[{"inlineContent":[{"text":"For GET and HEAD methods, used in combination with a Range header, it can guarantee","type":"text"},{"text":" ","type":"text"},{"text":"that the new ranges requested come from the same resource as the previous one.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"For other methods, and in particular for PUT, If-Match can be used to prevent"},{"type":"text","text":" "},{"type":"text","text":"the lost update problem. It can check if the modification of a resource that the"},{"type":"text","text":" "},{"type":"text","text":"user wants to upload will not override another change that has been done since"},{"type":"text","text":" "},{"type":"text","text":"the original resource was fetched."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"kind":"symbol","title":"Response","url":"\/documentation\/hummingbirdcore\/response","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"type":"topic"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/responsegenerator","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseGenerator"}],"abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"ResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","title":"ResponseGenerator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","title":"Request","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request/ifMatch(headers:eTag:context:process:)":{"kind":"symbol","title":"ifMatch(headers:eTag:context:process:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifMatch"},{"kind":"text","text":"("},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eTag"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"process"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response"}],"abstract":[{"type":"text","text":"Conditional request which will only be processed if the eTag supplied is in the"},{"type":"text","text":" "},{"code":"If-Match","type":"codeVoice"},{"type":"text","text":" request header."}],"type":"topic","url":"\/documentation\/hummingbirdcore\/request\/ifmatch(headers:etag:context:process:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request\/ifMatch(headers:eTag:context:process:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"symbol","title":"RequestContext","role":"symbol"}}}