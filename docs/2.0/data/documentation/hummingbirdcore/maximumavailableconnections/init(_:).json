{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/maximumavailableconnections\/init(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections\/init(_:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections"]]},"metadata":{"roleHeading":"Initializer","externalID":"s:15HummingbirdCore27MaximumAvailableConnectionsVyACSicfc","modules":[{"name":"HummingbirdCore"}],"title":"init(_:)","symbolKind":"init","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}]},"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"maxConnections"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/MaximumAvailableConnections":{"url":"\/documentation\/hummingbirdcore\/maximumavailableconnections","title":"MaximumAvailableConnections","type":"topic","abstract":[{"type":"text","text":"Implementation of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","isActive":true},{"type":"text","text":" that sets a maximum limit to the number"},{"type":"text","text":" "},{"type":"text","text":"of open connections"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MaximumAvailableConnections"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MaximumAvailableConnections"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsDelegate":{"url":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","type":"topic","abstract":[{"text":"Delegate for ","type":"text"},{"code":"AvailableConnectionsChannelHandler","type":"codeVoice"},{"text":" that defines if we should accept","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AvailableConnectionsDelegate","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsDelegate","kind":"identifier"}],"title":"AvailableConnectionsDelegate"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/MaximumAvailableConnections/init(_:)":{"abstract":[],"url":"\/documentation\/hummingbirdcore\/maximumavailableconnections\/init(_:)","role":"symbol","title":"init(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections\/init(_:)","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}]}}}