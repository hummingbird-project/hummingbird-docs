{"sections":[],"metadata":{"symbolKind":"method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"modules":[{"name":"HummingbirdCore"}],"roleHeading":"Instance Method","title":"setCatchAll(_:)","role":"symbol","externalID":"s:15HummingbirdCore14FlatDictionaryV0A0SsRszSsRs_rlE11setCatchAllyySsF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setCatchAll","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"text":")","kind":"text"}],"extendedModule":"HummingbirdCore"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Set path components caught by recursive capture","type":"text"}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/flatdictionary\/setcatchall(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setCatchAll","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"Parameter value","type":"text"}],"type":"paragraph"}],"name":"value"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/setCatchAll(_:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","kind":"article","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"identifier":"logo.png","type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"url":"\/documentation\/hummingbirdcore\/flatdictionary","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlatDictionary"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"text":"value pairs, plus an array of hash keys for lookup for storage.","type":"text"}],"title":"FlatDictionary"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary/setCatchAll(_:)":{"url":"\/documentation\/hummingbirdcore\/flatdictionary\/setcatchall(_:)","title":"setCatchAll(_:)","type":"topic","role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"Set path components caught by recursive capture"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setCatchAll","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/setCatchAll(_:)"}}}