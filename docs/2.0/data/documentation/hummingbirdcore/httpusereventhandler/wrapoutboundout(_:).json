{"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapOutboundOut"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutboundOut","preciseIdentifier":"s:7NIOCore23_EmittingChannelHandlerP11OutboundOutQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"}],"platforms":["Linux"]}],"kind":"declarations"}],"metadata":{"externalID":"s:7NIOCore23_EmittingChannelHandlerPAAE15wrapOutboundOutyAA6NIOAnyV0fG0QzF::SYNTHESIZED::s:15HummingbirdCore20HTTPUserEventHandlerC","modules":[{"relatedModules":["NIOCore"],"name":"HummingbirdCore"}],"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapOutboundOut"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23_EmittingChannelHandlerP11OutboundOutQa","text":"OutboundOut"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"}],"symbolKind":"method","extendedModule":"NIOCore","title":"wrapOutboundOut(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/httpusereventhandler\/wrapoutboundout(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/wrapOutboundOut(_:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Wrap the provided "},{"type":"codeVoice","code":"OutboundOut"},{"type":"text","text":" that will be passed to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" by calling "},{"type":"codeVoice","code":"ChannelHandlerContext.write"},{"type":"text","text":"."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"navigatorTitle":[{"text":"HTTPUserEventHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler","url":"\/documentation\/hummingbirdcore\/httpusereventhandler","role":"symbol","type":"topic","abstract":[],"kind":"symbol","title":"HTTPUserEventHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPUserEventHandler","kind":"identifier"}]},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler/wrapOutboundOut(_:)":{"title":"wrapOutboundOut(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapOutboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutboundOut","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23_EmittingChannelHandlerP11OutboundOutQa"},{"text":") -> ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"}],"abstract":[{"type":"text","text":"Wrap the provided "},{"type":"codeVoice","code":"OutboundOut"},{"type":"text","text":" that will be passed to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" by calling "},{"type":"codeVoice","code":"ChannelHandlerContext.write"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/httpusereventhandler\/wrapoutboundout(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler\/wrapOutboundOut(_:)","type":"topic"}}}