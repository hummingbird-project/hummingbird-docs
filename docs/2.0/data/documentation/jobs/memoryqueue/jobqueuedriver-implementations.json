{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue"]]},"kind":"article","topicSections":[{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/onInit()"],"generated":true},{"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/memory"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/JobQueueDriver-Implementations"},"metadata":{"modules":[{"name":"Jobs"}],"role":"collectionGroup","title":"JobQueueDriver Implementations","roleHeading":"API Collection"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue/memory":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"memory"},{"kind":"text","text":": "},{"preciseIdentifier":"s:4Jobs11MemoryQueueC","kind":"typeIdentifier","text":"MemoryQueue"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"MemoryQueue"},{"type":"text","text":"."}]},"url":"\/documentation\/jobs\/memoryqueue\/memory","type":"topic","role":"symbol","title":"memory","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/memory","kind":"symbol","abstract":[{"type":"text","text":"Return In memory driver for Job Queue"}]},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue":{"url":"\/documentation\/jobs\/memoryqueue","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemoryQueue","kind":"identifier"}],"navigatorTitle":[{"text":"MemoryQueue","kind":"identifier"}],"title":"MemoryQueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue","abstract":[{"type":"text","text":"In memory implementation of job queue driver. Stores job data in a circular buffer"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"title":"Jobs","type":"topic","role":"collection","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"kind":"symbol","url":"\/documentation\/jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue/onInit()":{"role":"symbol","url":"\/documentation\/jobs\/memoryqueue\/oninit()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onInit","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Called when JobQueueHandler is initialised with this queue","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/onInit()","title":"onInit()","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/index","type":"topic","kind":"article","role":"collection","title":"Hummingbird Documentation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}]}}}