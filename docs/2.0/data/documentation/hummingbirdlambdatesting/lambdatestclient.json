{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting"]]},"metadata":{"symbolKind":"struct","roleHeading":"Structure","title":"LambdaTestClient","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LambdaTestClient"}],"modules":[{"name":"HummingbirdLambdaTesting"}],"role":"symbol","navigatorTitle":[{"text":"LambdaTestClient","kind":"identifier"}],"externalID":"s:24HummingbirdLambdaTesting0B10TestClientV"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Client used to send requests to lambda test framework"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient\/execute(uri:method:headers:body:testCallback:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambdatesting\/lambdatestclient"]}],"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LambdaTestClient","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Lambda","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Lambda"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP","text":"LambdaFunction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Lambda"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa","text":"Event"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestableEvent","text":"LambdaTestableEvent","kind":"typeIdentifier","preciseIdentifier":"s:24HummingbirdLambdaTesting0B13TestableEventP"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting/LambdaTestableEvent":{"title":"LambdaTestableEvent","type":"topic","url":"\/documentation\/hummingbirdlambdatesting\/lambdatestableevent","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestableEvent","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"LambdaTestableEvent","kind":"identifier"}],"role":"symbol","abstract":[],"navigatorTitle":[{"text":"LambdaTestableEvent","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting/LambdaTestClient/execute(uri:method:headers:body:testCallback:)":{"title":"execute(uri:method:headers:body:testCallback:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient\/execute(uri:method:headers:body:testCallback:)","abstract":[{"text":"Send request to lambda test framework and call `testCallback`` on the response returned","type":"text"}],"url":"\/documentation\/hummingbirdlambdatesting\/lambdatestclient\/execute(uri:method:headers:body:testcallback:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"kind":"text","text":"<"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"uri"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPFields","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"testCallback"},{"text":": (","kind":"text"},{"text":"Lambda","kind":"typeIdentifier","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV0B0xmfp"},{"kind":"text","text":"."},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP6OutputQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__6OutputQzYaKctYaKlF6ReturnL_qd__mfp","text":"Return","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Return","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__6OutputQzYaKctYaKlF6ReturnL_qd__mfp","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas."}],"title":"LambdaFunction"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting":{"title":"HummingbirdLambdaTesting","type":"topic","url":"\/documentation\/hummingbirdlambdatesting","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting","role":"collection","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting/LambdaTestClient":{"navigatorTitle":[{"kind":"identifier","text":"LambdaTestClient"}],"title":"LambdaTestClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient","abstract":[{"text":"Client used to send requests to lambda test framework","type":"text"}],"url":"\/documentation\/hummingbirdlambdatesting\/lambdatestclient","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaTestClient"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Event":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Event"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"}],"abstract":[{"type":"text","text":"Event that triggers the lambda"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","role":"symbol","title":"Event","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/event","required":true}}}