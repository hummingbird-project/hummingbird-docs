{"abstract":[{"text":"Client used to send requests to lambda test framework","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient"},"metadata":{"role":"symbol","navigatorTitle":[{"text":"LambdaTestClient","kind":"identifier"}],"title":"LambdaTestClient","externalID":"s:24HummingbirdLambdaTesting0B10TestClientV","roleHeading":"Structure","modules":[{"name":"HummingbirdLambdaTesting"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"LambdaTestClient","kind":"identifier"}],"symbolKind":"struct"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LambdaTestClient","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Lambda"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lambda","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"LambdaFunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP"},{"kind":"text","text":", "},{"text":"Lambda","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","kind":"typeIdentifier","text":"Event","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestableEvent","text":"LambdaTestableEvent","kind":"typeIdentifier","preciseIdentifier":"s:24HummingbirdLambdaTesting0B13TestableEventP"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/hummingbirdlambdatesting\/lambdatestclient"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"topicSections":[{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient\/execute(uri:method:headers:body:testCallback:)"],"title":"Instance Methods"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"role":"symbol","abstract":[{"text":"Protocol for Hummingbird Lambdas.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"LambdaFunction","kind":"identifier"}],"kind":"symbol","title":"LambdaFunction","navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting/LambdaTestClient":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient","role":"symbol","navigatorTitle":[{"text":"LambdaTestClient","kind":"identifier"}],"abstract":[{"type":"text","text":"Client used to send requests to lambda test framework"}],"title":"LambdaTestClient","type":"topic","url":"\/documentation\/hummingbirdlambdatesting\/lambdatestclient","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaTestClient"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting","role":"collection","abstract":[],"type":"topic","url":"\/documentation\/hummingbirdlambdatesting","title":"HummingbirdLambdaTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting/LambdaTestableEvent":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestableEvent","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LambdaTestableEvent"}],"abstract":[],"title":"LambdaTestableEvent","type":"topic","url":"\/documentation\/hummingbirdlambdatesting\/lambdatestableevent","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"LambdaTestableEvent","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Event":{"kind":"symbol","title":"Event","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","abstract":[{"type":"text","text":"Event that triggers the lambda"}],"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/event","required":true,"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting/LambdaTestClient/execute(uri:method:headers:body:testCallback:)":{"title":"execute(uri:method:headers:body:testCallback:)","abstract":[{"type":"text","text":"Send request to lambda test framework and call `testCallback`` on the response returned"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient\/execute(uri:method:headers:body:testCallback:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"execute"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"text":"uri","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier","text":"HTTPRequest"},{"kind":"text","text":"."},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":", "},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"testCallback"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV0B0xmfp","text":"Lambda","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP6OutputQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Return","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__6OutputQzYaKctYaKlF6ReturnL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__6OutputQzYaKctYaKlF6ReturnL_qd__mfp","text":"Return"}],"url":"\/documentation\/hummingbirdlambdatesting\/lambdatestclient\/execute(uri:method:headers:body:testcallback:)"}}}