{"variants":[{"paths":["\/documentation\/hummingbirdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdTLS is bundled with Hummingbird, but is not enabled by default. To enable TLS support, you need to add the target dependency to your target:"}]},{"type":"codeListing","code":["swift package add-target-dependency HummingbirdTLS <MyApp> --package hummingbird"],"syntax":"sh"},{"type":"paragraph","inlineContent":[{"text":"Make sure to replace ","type":"text"},{"code":"<MyApp>","type":"codeVoice"},{"text":" with the name of your Appâ€™s target.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdTLS provides TLS protocol support via "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"},{"type":"text","text":". You can add this to your application using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:tlsConfiguration:)"},{"type":"text","text":"."}]},{"type":"codeListing","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = Router()","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The function "},{"type":"codeVoice","code":"tls"},{"type":"text","text":" can be used to wrap another protocol. In the example above we use it to wrap HTTP1 server, and you can also wrap a WebSocket Supporting HTTP\/1 server."}]}]}],"hierarchy":{"paths":[[]]},"kind":"symbol","metadata":{"modules":[{"name":"HummingbirdTLS"}],"roleHeading":"Framework","title":"HummingbirdTLS","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"externalID":"HummingbirdTLS","symbolKind":"module"},"sections":[],"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"]},{"generated":true,"anchor":"Reference","title":"Reference","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Add TLS support to Hummingbird server.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","interfaceLanguage":"swift"},"topicSections":[{"anchor":"Server","title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:tlsConfiguration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]},{"generated":true,"anchor":"Structures","title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannelConfiguration"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"title":"TLSChannel","abstract":[{"text":"Sets up child channel to use TLS before accessing base channel setup","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSChannel","kind":"identifier"}],"navigatorTitle":[{"text":"TLSChannel","kind":"identifier"}],"url":"\/documentation\/hummingbirdtls\/tlschannel","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder/tls(_:tlsConfiguration:)":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tls","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HTTPServerBuilder","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"tlsConfiguration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TLSConfiguration","preciseIdentifier":"s:6NIOSSL16TLSConfigurationV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HTTPServerBuilder","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV","kind":"typeIdentifier"}],"title":"tls(_:tlsConfiguration:)","role":"symbol","abstract":[{"text":"Build server supporting HTTP with TLS","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:tlsConfiguration:)","type":"topic","url":"\/documentation\/hummingbirdcore\/httpserverbuilder\/tls(_:tlsconfiguration:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder/tls(_:configuration:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Build server supporting HTTP with TLS","type":"text"}],"title":"tls(_:configuration:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:configuration:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tls","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HTTPServerBuilder","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TLSChannelConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdTLS23TLSChannelConfigurationV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HTTPServerBuilder","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV"}],"url":"\/documentation\/hummingbirdcore\/httpserverbuilder\/tls(_:configuration:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","title":"HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","kind":"symbol","type":"topic"},"logo.png":{"identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"title":"HummingbirdTLS","abstract":[{"text":"Add TLS support to Hummingbird server.","type":"text"}],"url":"\/documentation\/hummingbirdtls","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannelConfiguration":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannelConfiguration","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSChannelConfiguration","kind":"identifier"}],"title":"TLSChannelConfiguration","navigatorTitle":[{"text":"TLSChannelConfiguration","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdtls\/tlschannelconfiguration","abstract":[{"text":"TLSChannel configuration","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"title":"HummingbirdHTTP2","kind":"symbol","role":"collection","abstract":[{"text":"Add HTTP2 support to Hummingbird server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdhttp2"}}}