{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"beforeLambdaStarts"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":" "},{"kind":"internalParam","text":"process"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"Process to run before server is started","type":"text"}],"type":"paragraph"}],"name":"process"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This is for processes that might need another Service running but need"},{"type":"text","text":" "},{"type":"text","text":"to run before the lambda has started processing requests. For example a"},{"type":"text","text":" "},{"type":"text","text":"database migration process might need the database connection pool running"},{"type":"text","text":" "},{"type":"text","text":"but should be finished before any request to the server can be made. Also"},{"type":"text","text":" "},{"type":"text","text":"there may be situations where you want another Service to have fully initialized"},{"type":"text","text":" "},{"type":"text","text":"before starting the lambda service."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can call "},{"type":"codeVoice","code":"beforeLambdaStarts"},{"type":"text","text":" multiple times and each process will still"},{"type":"text","text":" "},{"type":"text","text":"be called."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/lambdafunction\/beforelambdastarts(perform:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction"]]},"metadata":{"modules":[{"name":"HummingbirdLambda"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","externalID":"s:17HummingbirdLambda0B8FunctionV06beforeB6Starts7performyyyYaYbKc_tF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"beforeLambdaStarts"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"title":"beforeLambdaStarts(perform:)"},"abstract":[{"text":"Add a process to run before we kick off the lambda runtime service","type":"text"}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/beforeLambdaStarts(perform:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Add a process to run before we kick off the lambda runtime service"}],"role":"symbol","title":"beforeLambdaStarts(perform:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"beforeLambdaStarts"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": () "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/beforelambdastarts(perform:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"abstract":[{"text":"Represents a Lambda function with input\/output and background processes","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunction"}],"type":"topic","kind":"symbol","role":"symbol","title":"LambdaFunction","url":"\/documentation\/hummingbirdlambda\/lambdafunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","navigatorTitle":[{"kind":"identifier","text":"LambdaFunction"}]},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"type":"topic","title":"HummingbirdLambda","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"url":"\/documentation\/hummingbirdlambda","role":"collection"}}}