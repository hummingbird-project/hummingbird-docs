{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction"]]},"topicSections":[{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/runService()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"API Collection","modules":[{"name":"HummingbirdLambda"}],"role":"collectionGroup","title":"LambdaFunctionProtocol Implementations"},"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/LambdaFunctionProtocol-Implementations","interfaceLanguage":"swift"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"type":"topic","kind":"article","role":"collection","title":"Hummingbird Documentation","url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"type":"topic","title":"HummingbirdLambda","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"url":"\/documentation\/hummingbirdlambda","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/runService()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/runService()","role":"symbol","title":"runService()","abstract":[{"type":"text","text":"Helper function that runs lambda inside a ServiceGroup which will gracefully"},{"type":"text","text":" "},{"type":"text","text":"shutdown on signals SIGTERM"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/runservice()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runService","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic"},"logo.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"abstract":[{"text":"Represents a Lambda function with input\/output and background processes","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunction"}],"type":"topic","kind":"symbol","role":"symbol","title":"LambdaFunction","url":"\/documentation\/hummingbirdlambda\/lambdafunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","navigatorTitle":[{"kind":"identifier","text":"LambdaFunction"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/run()":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/run()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","abstract":[{"text":"Construct lambda runtime and run it","type":"text"}],"kind":"symbol","title":"run()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/run()","role":"symbol"}}}