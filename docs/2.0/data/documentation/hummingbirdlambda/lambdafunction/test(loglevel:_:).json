{"metadata":{"externalID":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ","extendedModule":"HummingbirdLambda","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"test"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"logLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"text":".","kind":"text"},{"text":"Level","preciseIdentifier":"s:7Logging6LoggerV5LevelO","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV","text":"LambdaTestClient"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp"}],"modules":[{"name":"HummingbirdLambda"}],"conformance":{"constraints":[{"code":"Event","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"LambdaTestableEvent"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"test(logLevel:_:)","role":"symbol","roleHeading":"Type Method"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"logLevel","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Level","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV5LevelO"},{"text":" = .debug, ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"test","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"LambdaTestClient","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"test","type":"codeVoice"},{"text":" closure uses the provided test client to make calls to the","type":"text"},{"text":" ","type":"text"},{"text":"lambda via ","type":"text"},{"code":"execute","type":"codeVoice"},{"text":". You can verify the contents of the output","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"event returned."}]},{"inlineContent":[{"text":"The example below is using the ","type":"text"},{"code":".router","type":"codeVoice"},{"text":" framework to test","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct HelloLambda: APIGatewayLambdaFunction {","    init(context: LambdaInitializationContext) {}","","    func buildResponder() -> some  HTTPResponder<Context> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { request, _ in","            return \"Hello\"","        }","        return router.buildResponder()","    }","}","try await HelloLambda.test { client in","    try await client.execute(uri: \"\/hello\", method: .get) { response in","        XCTAssertEqual(response.body, \"Hello\")","    }","}"]}]}],"abstract":[{"text":"Test ","type":"text"},{"code":"LambdaFunction","type":"codeVoice"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/lambdafunction\/test(loglevel:_:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/test(logLevel:_:)":{"abstract":[{"type":"text","text":"Test "},{"type":"codeVoice","code":"LambdaFunction"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Event"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"LambdaTestableEvent"},{"type":"text","text":"."}]},"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"logLevel","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV5LevelO","kind":"typeIdentifier","text":"Level"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV","kind":"typeIdentifier","text":"LambdaTestClient"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/test(loglevel:_:)","type":"topic","role":"symbol","title":"test(logLevel:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting/LambdaTestClient":{"navigatorTitle":[{"kind":"identifier","text":"LambdaTestClient"}],"title":"LambdaTestClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient","abstract":[{"text":"Client used to send requests to lambda test framework","type":"text"}],"url":"\/documentation\/hummingbirdlambdatesting\/lambdatestclient","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaTestClient"}],"role":"symbol"},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","role":"collection","title":"HummingbirdLambda","type":"topic","url":"\/documentation\/hummingbirdlambda"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","kind":"article","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas."}],"title":"LambdaFunction"}}}