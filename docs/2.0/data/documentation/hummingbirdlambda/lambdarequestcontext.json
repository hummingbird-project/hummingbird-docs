{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda0B14RequestContextP5EventQa","text":"Event","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext\/Event","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"mentions":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],"kind":"mentions"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"All Hummingbird Lambdas require that your request context conforms to"},{"type":"text","text":" "},{"type":"text","text":"LambdaRequestContext"},{"type":"codeVoice","code":". By default ``LambdaFunction`` will use ``BasicLambdaRequestContext`` for a request context. To get ``LambdaFunction`` to use a custom context you need to set the "},{"type":"text","text":"Context` associatedtype."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext"},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"],"type":"inheritsFrom","kind":"relationships"},{"title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext"],"type":"conformingTypes","kind":"relationships"}],"metadata":{"externalID":"s:17HummingbirdLambda0B14RequestContextP","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"LambdaRequestContext","kind":"identifier"}],"modules":[{"name":"HummingbirdLambda"}],"title":"LambdaRequestContext","symbolKind":"protocol","roleHeading":"Protocol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"kind":"symbol","sections":[],"seeAlsoSections":[{"title":"Request context","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource"],"anchor":"Request-context"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/lambdarequestcontext"]}],"topicSections":[{"title":"Associated Types","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext\/Event"],"anchor":"Associated-Types"}],"abstract":[{"type":"text","text":"A Request Context that is initialized with the Event that triggered the Lambda"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdlambda","type":"topic","title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContextSource":{"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContextSource","kind":"identifier"}],"title":"LambdaRequestContextSource","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource","type":"topic","role":"symbol","navigatorTitle":[{"text":"LambdaRequestContextSource","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","title":"Request Contexts","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"url":"\/documentation\/hummingbird\/requestcontexts","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","title":"LambdaRequestContext","kind":"symbol","abstract":[{"text":"A Request Context that is initialized with the Event that triggered the Lambda","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"LambdaRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP","type":"unresolvable","title":"Swift.SendableMetatype"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicLambdaRequestContext"}],"title":"BasicLambdaRequestContext","abstract":[{"type":"text","text":"The default Lambda request context."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"Request","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext/Event":{"type":"topic","kind":"symbol","role":"symbol","abstract":[],"title":"Event","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Event","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext\/Event","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext\/event","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Protocol for source of request contexts"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContextSource"}],"navigatorTitle":[{"kind":"identifier","text":"RequestContextSource"}],"url":"\/documentation\/hummingbird\/requestcontextsource","type":"topic","title":"RequestContextSource"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","title":"InitializableFromSource","kind":"symbol","abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"url":"\/documentation\/hummingbird\/initializablefromsource","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}]}}}