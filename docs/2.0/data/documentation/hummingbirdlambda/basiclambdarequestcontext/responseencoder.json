{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:20FoundationEssentials11JSONEncoderC","text":"JSONEncoder","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/responseencoder"]}],"metadata":{"title":"responseEncoder","role":"symbol","externalID":"s:11Hummingbird14RequestContextPAA20FoundationEssentials11JSONEncoderC7EncoderRtzrlE08responseG0AFvp::SYNTHESIZED::s:17HummingbirdLambda05BasicB14RequestContextV","extendedModule":"Hummingbird","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responseEncoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONEncoder","preciseIdentifier":"s:20FoundationEssentials11JSONEncoderC"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Encoder"},{"type":"text","text":" is "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"roleHeading":"Instance Property","modules":[{"name":"HummingbirdLambda","relatedModules":["Hummingbird"]}],"symbolKind":"property"},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/responseEncoder","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RequestContext.responseEncoder"},{"type":"text","text":"."}],"references":{"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","kind":"symbol","title":"BasicLambdaRequestContext","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicLambdaRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"BasicLambdaRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","abstract":[{"text":"The default Lambda request context.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/responseEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/responseEncoder","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/responseencoder","kind":"symbol","title":"responseEncoder","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responseEncoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONEncoder","preciseIdentifier":"s:20FoundationEssentials11JSONEncoderC"}],"type":"topic","abstract":[],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Encoder"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"JSONEncoder"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}}}}