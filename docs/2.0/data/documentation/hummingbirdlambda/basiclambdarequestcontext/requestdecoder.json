{"metadata":{"roleHeading":"Instance Property","symbolKind":"property","extendedModule":"Hummingbird","externalID":"s:11Hummingbird14RequestContextPAA20FoundationEssentials11JSONDecoderC7DecoderRtzrlE07requestG0AFvp::SYNTHESIZED::s:17HummingbirdLambda05BasicB14RequestContextV","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdLambda"}],"role":"symbol","conformance":{"constraints":[{"code":"Decoder","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC","text":"JSONDecoder"}],"title":"requestDecoder"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/requestDecoder"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RequestContext.requestDecoder"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/requestdecoder"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"logo.png":{"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The default Lambda request context."}],"title":"BasicLambdaRequestContext","navigatorTitle":[{"text":"BasicLambdaRequestContext","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicLambdaRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"title":"HummingbirdLambda","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/requestDecoder":{"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/requestdecoder","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/requestDecoder","role":"symbol","title":"requestDecoder","kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Decoder","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}}}}