{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/requestDecoder","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["Linux"]}]}],"metadata":{"roleHeading":"Instance Property","externalID":"s:11Hummingbird14RequestContextPAA20FoundationEssentials11JSONDecoderC7DecoderRtzrlE07requestG0AFvp::SYNTHESIZED::s:17HummingbirdLambda05BasicB14RequestContextV","extendedModule":"Hummingbird","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Decoder","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC","text":"JSONDecoder"}],"role":"symbol","symbolKind":"property","title":"requestDecoder","modules":[{"name":"HummingbirdLambda","relatedModules":["Hummingbird"]}]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RequestContext.requestDecoder"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/requestdecoder"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/RequestContext-Implementations"]]},"references":{"logo.png":{"alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/RequestContext-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/RequestContext-Implementations","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/requestcontext-implementations","role":"collectionGroup","title":"RequestContext Implementations","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/requestDecoder":{"role":"symbol","conformance":{"constraints":[{"code":"Decoder","type":"codeVoice"},{"type":"text","text":" is "},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/requestDecoder","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/requestdecoder","abstract":[],"type":"topic","title":"requestDecoder","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird Documentation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BasicLambdaRequestContext","kind":"identifier"}],"abstract":[{"text":"The default Lambda request context.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","role":"symbol","type":"topic","title":"BasicLambdaRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","type":"topic","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"}}}