{"kind":"symbol","topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(responder:event:output:services:logger:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(router:event:output:services:logger:)"]},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/processesRunBeforeLambdaStart","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/responder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/services"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/addServices(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)"]},{"generated":true,"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/LambdaFunctionProtocol-Implementations"]}],"metadata":{"title":"LambdaFunction","externalID":"s:17HummingbirdLambda0B8FunctionV","navigatorTitle":[{"kind":"identifier","text":"LambdaFunction"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"HummingbirdLambda"}],"role":"symbol","symbolKind":"struct"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Represents a Lambda function with input\/output and background processes"}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"]}],"seeAlsoSections":[{"generated":true,"anchor":"Lambda-function","title":"Lambda function","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Responder","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Event","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Responder","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","text":"HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Event","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent","text":"LambdaEvent","preciseIdentifier":"s:17HummingbirdLambda0B5EventP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput","text":"LambdaOutput","preciseIdentifier":"s:17HummingbirdLambda0B6OutputP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Responder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","text":"Context","preciseIdentifier":"s:11Hummingbird13HTTPResponderP7ContextQa","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","text":"InitializableFromSource","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Responder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","text":"Context","preciseIdentifier":"s:11Hummingbird13HTTPResponderP7ContextQa","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","text":"Source","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource","text":"LambdaRequestContextSource","preciseIdentifier":"s:17HummingbirdLambda0B20RequestContextSourceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Event","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Setup lambda that is triggered by ","type":"text"},{"code":"Event","type":"codeVoice"},{"text":" and has output ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"Event","type":"codeVoice"},{"text":" type is","type":"text"},{"text":" ","type":"text"},{"text":"converted to a Hummingbird ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":" and passed into the ","type":"text"},{"code":"responder","type":"codeVoice"},{"text":". The","type":"text"},{"text":" ","type":"text"},{"text":"resulting ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"text":" is then converted to the ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" type of the lambda.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example an APIGateway Lamdba is setup as follows","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let router = Router(context: BasicLambdaRequestContext<APIGatewayRequest>.self)","router.get { request, context in","    \"Hello!\"","}","let lambda = LambdaFunction(","    event: APIGatewayRequest.self,","    output: APIGatewayResponse.self,","    router: router",")","try await lambda.runService()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdLambda includes typealiases for lambdas that accept Event and Output types"},{"type":"text","text":" "},{"type":"text","text":"for APIGateway: "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","type":"reference"},{"type":"text","text":", APIGateway2: "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"and FunctionURLs: "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction","type":"reference"},{"type":"text","text":"."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/lambdafunction"]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","abstract":[{"text":"Represents a Lambda function with input\/output and background processes","type":"text"}],"type":"topic","title":"LambdaFunction","navigatorTitle":[{"kind":"identifier","text":"LambdaFunction"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunction"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunctionProtocol":{"role":"symbol","type":"topic","title":"LambdaFunctionProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","url":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LambdaFunctionProtocol"}],"abstract":[{"text":"Protocol for a AWS Lambda function.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunctionProtocol"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayLambdaFunction":{"role":"symbol","type":"topic","title":"APIGatewayLambdaFunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","url":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","kind":"symbol","navigatorTitle":[{"text":"APIGatewayLambdaFunction","kind":"identifier"}],"abstract":[{"text":"Typealias for Lambda function triggered by APIGateway","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"APIGatewayLambdaFunction","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder/Context":{"title":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","type":"topic","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"url":"\/documentation\/hummingbird\/httpresponder\/context","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(responder:event:output:services:logger:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(responder:event:output:services:logger:)","role":"symbol","title":"init(responder:event:output:services:logger:)","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(responder:event:output:services:logger:)","type":"topic","abstract":[{"type":"text","text":"Initialize LambdaFunction"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"responder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV9Responderxmfp","text":"Responder","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV5Eventq_mfp","text":"Event","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"output","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6Outputq0_mfp","text":"Output","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"services","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","text":"Service","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","title":"ServiceLifecycle.Service","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"type":"topic","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"url":"\/documentation\/hummingbirdcore\/response","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Response"}],"title":"Response","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Request","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"kind":"symbol","title":"Request"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FunctionURLLambdaFunction":{"role":"symbol","type":"topic","title":"FunctionURLLambdaFunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction","url":"\/documentation\/hummingbirdlambda\/functionurllambdafunction","kind":"symbol","navigatorTitle":[{"text":"FunctionURLLambdaFunction","kind":"identifier"}],"abstract":[{"text":"Typealias for Lambda function triggered by function URL","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FunctionURLLambdaFunction","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","title":"Source","url":"\/documentation\/hummingbird\/initializablefromsource\/source","required":true,"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","url":"\/documentation\/hummingbird\/initializablefromsource","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"role":"symbol","abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"kind":"symbol","title":"InitializableFromSource"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/httpresponder","title":"HTTPResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/beforeLambdaStarts(perform:)":{"kind":"symbol","title":"beforeLambdaStarts(perform:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"beforeLambdaStarts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Add a process to run before we kick off the lambda runtime service"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/beforelambdastarts(perform:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaEvent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaEvent"}],"navigatorTitle":[{"kind":"identifier","text":"LambdaEvent"}],"url":"\/documentation\/hummingbirdlambda\/lambdaevent","title":"LambdaEvent","abstract":[{"type":"text","text":"Lambda event type that can generate HTTP Request"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayV2LambdaFunction":{"role":"symbol","type":"topic","title":"APIGatewayV2LambdaFunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","url":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","kind":"symbol","navigatorTitle":[{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}],"abstract":[{"text":"Typealias for Lambda function triggered by APIGatewayV2","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/addServices(_:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/addServices(_:)","role":"symbol","title":"addServices(_:)","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/addservices(_:)","abstract":[{"type":"text","text":"Add service to be managed by lambda function’s ServiceGroup"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addServices"},{"kind":"text","text":"("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier","text":"Service"},{"kind":"text","text":"...)"}]},"logo.png":{"alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/responder":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/responder","role":"symbol","title":"responder","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","abstract":[{"type":"text","text":"routes requests to responders based on URI"}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV9Responderxmfp","kind":"typeIdentifier","text":"Responder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/processesRunBeforeLambdaStart":{"title":"processesRunBeforeLambdaStart","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/processesRunBeforeLambdaStart","abstract":[{"type":"text","text":"Processes to be run before lambda is started"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"processesRunBeforeLambdaStart"},{"kind":"text","text":": [() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":"]"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/processesrunbeforelambdastart"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaOutput":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput","role":"symbol","title":"LambdaOutput","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdaoutput","abstract":[{"text":"Lambda output type that can be generated from HTTP Response","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LambdaOutput"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaOutput"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(router:event:output:services:logger:)":{"title":"init(router:event:output:services:logger:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(router:event:output:services:logger:)","abstract":[{"type":"text","text":"Initialize LambdaFunction"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ResponderBuilder","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"router","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ResponderBuilder","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6router5event6output8services6loggerACyxq_q0_Gqd___q_mq0_mSay16ServiceLifecycle0I0_pG7Logging6LoggerVSgtc9ResponderQyd__Rsz0A020HTTPResponderBuilderRd__lufc0mO0L_qd__mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Event","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV5Eventq_mfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"output","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Output","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6Outputq0_mfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"services","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(router:event:output:services:logger:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/LambdaFunctionProtocol-Implementations":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/LambdaFunctionProtocol-Implementations","role":"collectionGroup","title":"LambdaFunctionProtocol Implementations","kind":"article","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/lambdafunctionprotocol-implementations","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContextSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaRequestContextSource"}],"type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource","title":"LambdaRequestContextSource","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContextSource"}]},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"type":"unresolvable","title":"Swift.SendableMetatype","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"type":"topic","role":"collection","title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/logger":{"title":"logger","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/logger","abstract":[{"type":"text","text":"Logger"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/logger"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/services":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/services","role":"symbol","title":"services","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/services","abstract":[{"text":"services attached to the application.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"services","kind":"identifier"},{"text":": [","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}