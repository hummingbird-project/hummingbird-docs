{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/lambdafunction"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(responder:event:output:services:logger:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(router:event:output:services:logger:)"],"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/processesRunBeforeLambdaStart","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/responder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/services"],"title":"Instance Properties","anchor":"Instance-Properties"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/addServices(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)"],"title":"Instance Methods","anchor":"Instance-Methods"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/LambdaFunctionProtocol-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"kind":"symbol","relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Conforms To","kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction"},"abstract":[{"text":"Represents a Lambda function with input\/output and background processes","type":"text"}],"sections":[],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"title":"LambdaFunction","roleHeading":"Structure","modules":[{"name":"HummingbirdLambda"}],"symbolKind":"struct","externalID":"s:17HummingbirdLambda0B8FunctionV","role":"symbol"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction"],"title":"Lambda function","anchor":"Lambda-function"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Responder","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Event","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Responder","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"HTTPResponder","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP"},{"text":", ","kind":"text"},{"text":"Event","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"LambdaEvent","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent","preciseIdentifier":"s:17HummingbirdLambda0B5EventP"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"LambdaOutput","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput","preciseIdentifier":"s:17HummingbirdLambda0B6OutputP"},{"text":", ","kind":"text"},{"text":"Responder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","preciseIdentifier":"s:11Hummingbird13HTTPResponderP7ContextQa"},{"text":" : ","kind":"text"},{"text":"InitializableFromSource","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP"},{"text":", ","kind":"text"},{"text":"Responder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","preciseIdentifier":"s:11Hummingbird13HTTPResponderP7ContextQa"},{"text":".","kind":"text"},{"text":"Source","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa"},{"text":" == ","kind":"text"},{"text":"LambdaRequestContextSource","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource","preciseIdentifier":"s:17HummingbirdLambda0B20RequestContextSourceV"},{"text":"<","kind":"text"},{"text":"Event","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Setup lambda that is triggered by ","type":"text"},{"code":"Event","type":"codeVoice"},{"text":" and has output ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"Event","type":"codeVoice"},{"text":" type is","type":"text"},{"text":" ","type":"text"},{"text":"converted to a Hummingbird ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":" and passed into the ","type":"text"},{"code":"responder","type":"codeVoice"},{"text":". The","type":"text"},{"text":" ","type":"text"},{"text":"resulting ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"text":" is then converted to the ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" type of the lambda.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example an APIGateway Lamdba is setup as follows","type":"text"}]},{"type":"codeListing","code":["let router = Router(context: BasicLambdaRequestContext<APIGatewayRequest>.self)","router.get { request, context in","    \"Hello!\"","}","let lambda = LambdaFunction(","    event: APIGatewayRequest.self,","    output: APIGatewayResponse.self,","    router: router",")","try await lambda.runService()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdLambda includes typealiases for lambdas that accept Event and Output types"},{"type":"text","text":" "},{"type":"text","text":"for APIGateway: "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction"},{"type":"text","text":", APIGateway2: "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"},{"type":"text","text":" "},{"type":"text","text":"and FunctionURLs: "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction"},{"type":"text","text":"."}]}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContextSource":{"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource","title":"LambdaRequestContextSource","navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContextSource"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaRequestContextSource"}],"type":"topic","role":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"url":"\/documentation\/hummingbirdcore\/response","title":"Response","navigatorTitle":[{"text":"Response","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(router:event:output:services:logger:)":{"abstract":[{"text":"Initialize LambdaFunction","type":"text"}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ResponderBuilder"},{"kind":"text","text":">("},{"kind":"externalParam","text":"router"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6router5event6output8services6loggerACyxq_q0_Gqd___q_mq0_mSay16ServiceLifecycle0I0_pG7Logging6LoggerVSgtc9ResponderQyd__Rsz0A020HTTPResponderBuilderRd__lufc0mO0L_qd__mfp","kind":"typeIdentifier","text":"ResponderBuilder"},{"kind":"text","text":", "},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV5Eventq_mfp","kind":"typeIdentifier","text":"Event"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"output"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6Outputq0_mfp","kind":"typeIdentifier","text":"Output"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"services"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier","text":"Service"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(router:event:output:services:logger:)","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(router:event:output:services:logger:)","title":"init(router:event:output:services:logger:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"title":"HTTPResponder","url":"\/documentation\/hummingbird\/httpresponder","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaOutput":{"url":"\/documentation\/hummingbirdlambda\/lambdaoutput","title":"LambdaOutput","navigatorTitle":[{"text":"LambdaOutput","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaOutput","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"Lambda output type that can be generated from HTTP Response","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction","title":"LambdaFunction","navigatorTitle":[{"kind":"identifier","text":"LambdaFunction"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunction"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Represents a Lambda function with input\/output and background processes"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/logger":{"type":"topic","role":"symbol","title":"logger","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/logger","abstract":[{"text":"Logger","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/logger","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","title":"ServiceLifecycle.Service","type":"unresolvable"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/beforeLambdaStarts(perform:)":{"type":"topic","abstract":[{"type":"text","text":"Add a process to run before we kick off the lambda runtime service"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)","title":"beforeLambdaStarts(perform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"beforeLambdaStarts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/beforelambdastarts(perform:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(responder:event:output:services:logger:)":{"abstract":[{"text":"Initialize LambdaFunction","type":"text"}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"responder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV9Responderxmfp","kind":"typeIdentifier","text":"Responder"},{"kind":"text","text":", "},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV5Eventq_mfp","kind":"typeIdentifier","text":"Event"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"output"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6Outputq0_mfp","kind":"typeIdentifier","text":"Output"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"services"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier","text":"Service"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(responder:event:output:services:logger:)","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(responder:event:output:services:logger:)","title":"init(responder:event:output:services:logger:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayLambdaFunction":{"title":"APIGatewayLambdaFunction","url":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","navigatorTitle":[{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"type":"topic","role":"symbol","abstract":[{"text":"Typealias for Lambda function triggered by APIGateway","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/addServices(_:)":{"type":"topic","abstract":[{"text":"Add service to be managed by lambda function’s ServiceGroup","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/addServices(_:)","title":"addServices(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addServices","kind":"identifier"},{"text":"(","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Service","kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P"},{"text":"...)","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/addservices(_:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/responder":{"type":"topic","abstract":[{"text":"routes requests to responders based on URI","type":"text"}],"kind":"symbol","title":"responder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/responder","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Responder","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV9Responderxmfp","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","title":"Source","url":"\/documentation\/hummingbird\/initializablefromsource\/source","kind":"symbol","abstract":[],"required":true,"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/services":{"abstract":[{"type":"text","text":"services attached to the application."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"services","kind":"identifier"},{"text":": [","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Service","kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/services","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/services","title":"services"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaEvent":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaEvent","kind":"identifier"}],"navigatorTitle":[{"text":"LambdaEvent","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdaevent","role":"symbol","abstract":[{"type":"text","text":"Lambda event type that can generate HTTP Request"}],"title":"LambdaEvent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunctionProtocol":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunctionProtocol","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","navigatorTitle":[{"text":"LambdaFunctionProtocol","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol","title":"LambdaFunctionProtocol","abstract":[{"type":"text","text":"Protocol for a AWS Lambda function."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/processesRunBeforeLambdaStart":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/processesrunbeforelambdastart","title":"processesRunBeforeLambdaStart","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/processesRunBeforeLambdaStart","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"processesRunBeforeLambdaStart"},{"kind":"text","text":": [() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"]"}],"type":"topic","role":"symbol","abstract":[{"text":"Processes to be run before lambda is started","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"title":"InitializableFromSource","url":"\/documentation\/hummingbird\/initializablefromsource","navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"A type that can be initialized from another type","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder/Context":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","role":"symbol","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"title":"Context","abstract":[],"required":true,"url":"\/documentation\/hummingbird\/httpresponder\/context"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"type":"topic","role":"collection","title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/LambdaFunctionProtocol-Implementations":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/lambdafunctionprotocol-implementations","title":"LambdaFunctionProtocol Implementations","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/LambdaFunctionProtocol-Implementations","abstract":[],"role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FunctionURLLambdaFunction":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FunctionURLLambdaFunction"}],"navigatorTitle":[{"kind":"identifier","text":"FunctionURLLambdaFunction"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/functionurllambdafunction","role":"symbol","abstract":[{"text":"Typealias for Lambda function triggered by function URL","type":"text"}],"title":"FunctionURLLambdaFunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayV2LambdaFunction":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIGatewayV2LambdaFunction"}],"navigatorTitle":[{"kind":"identifier","text":"APIGatewayV2LambdaFunction"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","role":"symbol","abstract":[{"type":"text","text":"Typealias for Lambda function triggered by APIGatewayV2"}],"title":"APIGatewayV2LambdaFunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","title":"Request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}]}}}