{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Responder"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Event"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Responder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP","text":"HTTPResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Event"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B5EventP","text":"LambdaEvent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B6OutputP","text":"LambdaOutput","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Responder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP7ContextQa","text":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP","text":"InitializableFromSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Responder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP7ContextQa","text":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","text":"Source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B20RequestContextSourceV","text":"LambdaRequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Event"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"Setup lambda that is triggered by "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" and has output "},{"type":"codeVoice","code":"Output"},{"type":"text","text":". The "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" type is"},{"type":"text","text":" "},{"type":"text","text":"converted to a Hummingbird "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"type":"text","text":" and passed into the "},{"type":"codeVoice","code":"responder"},{"type":"text","text":". The"},{"type":"text","text":" "},{"type":"text","text":"resulting "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference"},{"type":"text","text":" is then converted to the "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" type of the lambda."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example an APIGateway Lamdba is setup as follows"}],"type":"paragraph"},{"code":["let router = Router(context: BasicLambdaRequestContext<APIGatewayRequest>.self)","router.get { request, context in","    \"Hello!\"","}","let lambda = LambdaFunction(","    event: APIGatewayRequest.self,","    output: APIGatewayResponse.self,","    router: router",")","try await lambda.runService()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"HummingbirdLambda includes typealiases for lambdas that accept Event and Output types"},{"type":"text","text":" "},{"type":"text","text":"for APIGateway: "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","type":"reference"},{"type":"text","text":", APIGateway2: "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"and FunctionURLs: "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"text":"Represents a Lambda function with input\/output and background processes","type":"text"}],"seeAlsoSections":[{"anchor":"Lambda-function","title":"Lambda function","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction"],"generated":true}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(responder:event:output:services:logger:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(router:event:output:services:logger:)"],"generated":true},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/processesRunBeforeLambdaStart","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/responder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/services"],"generated":true},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/addServices(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/LambdaFunctionProtocol-Implementations"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/lambdafunction"]}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"]}],"metadata":{"modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Structure","role":"symbol","title":"LambdaFunction","externalID":"s:17HummingbirdLambda0B8FunctionV","navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaEvent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdaevent","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaEvent"}],"navigatorTitle":[{"kind":"identifier","text":"LambdaEvent"}],"title":"LambdaEvent","abstract":[{"type":"text","text":"Lambda event type that can generate HTTP Request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaOutput":{"abstract":[{"text":"Lambda output type that can be generated from HTTP Response","type":"text"}],"title":"LambdaOutput","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdaoutput","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaOutput"}],"navigatorTitle":[{"kind":"identifier","text":"LambdaOutput"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"navigatorTitle":[{"kind":"identifier","text":"LambdaFunction"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunction"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction","abstract":[{"type":"text","text":"Represents a Lambda function with input\/output and background processes"}],"title":"LambdaFunction","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunctionProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunctionProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"LambdaFunctionProtocol"}],"title":"LambdaFunctionProtocol","abstract":[{"type":"text","text":"Protocol for a AWS Lambda function."}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/beforeLambdaStarts(perform:)":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/beforelambdastarts(perform:)","abstract":[{"text":"Add a process to run before we kick off the lambda runtime service","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"beforeLambdaStarts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"beforeLambdaStarts(perform:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"role":"symbol","abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}],"title":"InitializableFromSource","url":"\/documentation\/hummingbird\/initializablefromsource"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"title":"Response","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","navigatorTitle":[{"text":"Response","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"url":"\/documentation\/hummingbirdcore\/response","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(responder:event:output:services:logger:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(responder:event:output:services:logger:)","title":"init(responder:event:output:services:logger:)","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(responder:event:output:services:logger:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"responder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Responder","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV9Responderxmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Event","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV5Eventq_mfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"output","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Output","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6Outputq0_mfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"services","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"abstract":[{"type":"text","text":"Initialize LambdaFunction"}]},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"title":"ServiceLifecycle.Service","identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP","type":"unresolvable","title":"Swift.SendableMetatype"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/addServices(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/addServices(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addServices"},{"kind":"text","text":"("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P","text":"Service"},{"kind":"text","text":"...)"}],"title":"addServices(_:)","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/addservices(_:)","abstract":[{"text":"Add service to be managed by lambda function’s ServiceGroup","type":"text"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder/Context":{"title":"Context","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"required":true,"url":"\/documentation\/hummingbird\/httpresponder\/context","type":"topic","abstract":[],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/request","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","title":"HTTPResponder","type":"topic","url":"\/documentation\/hummingbird\/httpresponder","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/LambdaFunctionProtocol-Implementations":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/lambdafunctionprotocol-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/LambdaFunctionProtocol-Implementations","type":"topic","role":"collectionGroup","title":"LambdaFunctionProtocol Implementations","kind":"article","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/services":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/services","title":"services","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/services","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"services"},{"kind":"text","text":": ["},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P","text":"Service"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"services attached to the application."}]},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/logger":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/logger","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/logger","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"role":"symbol","title":"logger","kind":"symbol","abstract":[{"type":"text","text":"Logger"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(router:event:output:services:logger:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(router:event:output:services:logger:)","title":"init(router:event:output:services:logger:)","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(router:event:output:services:logger:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ResponderBuilder","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"router","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ResponderBuilder","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6router5event6output8services6loggerACyxq_q0_Gqd___q_mq0_mSay16ServiceLifecycle0I0_pG7Logging6LoggerVSgtc9ResponderQyd__Rsz0A020HTTPResponderBuilderRd__lufc0mO0L_qd__mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Event","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV5Eventq_mfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"output","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Output","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6Outputq0_mfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"services","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"abstract":[{"text":"Initialize LambdaFunction","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"title":"HummingbirdLambda","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayLambdaFunction":{"url":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","navigatorTitle":[{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"role":"symbol","title":"APIGatewayLambdaFunction","kind":"symbol","abstract":[{"type":"text","text":"Typealias for Lambda function triggered by APIGateway"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FunctionURLLambdaFunction":{"abstract":[{"type":"text","text":"Typealias for Lambda function triggered by function URL"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction","title":"FunctionURLLambdaFunction","navigatorTitle":[{"kind":"identifier","text":"FunctionURLLambdaFunction"}],"url":"\/documentation\/hummingbirdlambda\/functionurllambdafunction","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FunctionURLLambdaFunction"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/responder":{"role":"symbol","abstract":[{"type":"text","text":"routes requests to responders based on URI"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/responder","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Responder","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV9Responderxmfp"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","title":"responder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayV2LambdaFunction":{"url":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","navigatorTitle":[{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}],"role":"symbol","title":"APIGatewayV2LambdaFunction","kind":"symbol","abstract":[{"type":"text","text":"Typealias for Lambda function triggered by APIGatewayV2"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContextSource":{"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContextSource","kind":"identifier"}],"title":"LambdaRequestContextSource","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource","navigatorTitle":[{"text":"LambdaRequestContextSource","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}],"title":"Source","abstract":[],"url":"\/documentation\/hummingbird\/initializablefromsource\/source","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/processesRunBeforeLambdaStart":{"abstract":[{"text":"Processes to be run before lambda is started","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/processesRunBeforeLambdaStart","title":"processesRunBeforeLambdaStart","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/processesrunbeforelambdastart","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"processesRunBeforeLambdaStart","kind":"identifier"},{"text":": [() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic"}}}