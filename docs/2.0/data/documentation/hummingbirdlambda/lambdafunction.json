{"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"type":"inheritedBy","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"],"title":"Inherited By"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Defines the "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" and "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" types, how you convert from "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true,"type":"reference"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":". Create a type conforming to this protocol and tag it","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with "},{"type":"codeVoice","code":"@main"},{"text":".","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["struct MyLambda: LambdaFunction {","    typealias Event = APIGatewayRequest","    typealias Output = APIGatewayResponse","    typealias Context = MyLambdaRequestContext \/\/ must conform to `LambdaRequestContext`","","    init(context: LambdaInitializationContext) {}","","    \/\/\/ build responder that will create a response from a request","    func buildResponder() -> some Responder<Context> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in","            \"Hello\"","        }","        return router.buildResponder()","    }","}"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","isActive":true},{"type":"text","text":" for specializations of this protocol."}]}],"name":"See Also","type":"aside"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/lambdafunction"]}],"abstract":[{"text":"Protocol for Hummingbird Lambdas.","type":"text"}],"kind":"symbol","metadata":{"modules":[{"name":"HummingbirdLambda"}],"title":"LambdaFunction","externalID":"s:17HummingbirdLambda0B8FunctionP","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"LambdaFunction"}],"roleHeading":"Protocol"},"sections":[],"seeAlsoSections":[{"anchor":"Lambda-protocols","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"],"title":"Lambda protocols"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Context","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Responder"],"generated":true,"title":"Associated Types","anchor":"Associated-Types"},{"anchor":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(context:)"],"title":"Initializers","generated":true},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/output(from:)-41rdr","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/request(context:from:)-2wtco","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/shutdown()-1wnul"]},{"title":"Type Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/main()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)"],"anchor":"Type-Methods","generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayLambdaFunction":{"kind":"symbol","title":"APIGatewayLambdaFunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas that use APIGateway"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"url":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","navigatorTitle":[{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Event":{"kind":"symbol","title":"Event","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","abstract":[{"type":"text","text":"Event that triggers the lambda"}],"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/event","required":true,"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/output(from:)-41rdr":{"role":"symbol","abstract":[{"type":"text","text":"Convert from "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Out"},{"text":" type","type":"text"}],"required":true,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/output(from:)-41rdr","type":"topic","defaultImplementations":2,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP6OutputQa","text":"Output","kind":"typeIdentifier"}],"kind":"symbol","title":"output(from:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/output(from:)-41rdr"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Output":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Output of lambda"}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"},{"kind":"text","text":" : "},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/output","title":"Output","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","type":"topic","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird Documentation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/test(logLevel:_:)":{"title":"test(logLevel:_:)","role":"symbol","abstract":[{"type":"text","text":"Test "},{"code":"LambdaFunction","type":"codeVoice"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"logLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV5LevelO","text":"Level","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"LambdaTestClient","kind":"typeIdentifier","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp","text":"Value"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/test(loglevel:_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Event"},{"type":"text","text":" conforms to "},{"code":"LambdaTestableEvent","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/main()":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/main()","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/main()","abstract":[{"text":"Initializes and runs the Lambda function.","type":"text"}],"title":"main()","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"main"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/request","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"role":"symbol","abstract":[{"text":"Protocol for Hummingbird Lambdas.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"LambdaFunction","kind":"identifier"}],"kind":"symbol","title":"LambdaFunction","navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayV2LambdaFunction":{"abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas that use APIGatewayV2"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","title":"APIGatewayV2LambdaFunction","url":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"APIGatewayV2LambdaFunction"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIGatewayV2LambdaFunction"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/shutdown()-1wnul":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/shutdown()-1wnul","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/shutdown()-1wnul","abstract":[{"type":"text","text":"Called when Lambda is terminating. This is where you can cleanup any resources"}],"title":"shutdown()","required":true,"kind":"symbol","role":"symbol","defaultImplementations":1,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"shutdown","kind":"identifier"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/buildResponder()":{"required":true,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/buildresponder()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/buildResponder()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP9ResponderQa","text":"Responder","kind":"typeIdentifier"}],"title":"buildResponder()","abstract":[],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(context:)":{"required":true,"title":"init(context:)","role":"symbol","abstract":[{"text":"Initialize application.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(context:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"LambdaInitializationContext","preciseIdentifier":"s:20AWSLambdaRuntimeCore27LambdaInitializationContextV"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(context:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"title":"Response","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"url":"\/documentation\/hummingbirdcore\/response"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Context":{"abstract":[{"type":"text","text":"Request context"}],"title":"Context","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Context","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Context","kind":"identifier"},{"kind":"text","text":" : "},{"text":"InitializableFromSource","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda05BasicB14RequestContextV","text":"BasicLambdaRequestContext"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Event","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa"},{"kind":"text","text":">"}],"required":true,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/context"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/request(context:from:)-2wtco":{"title":"request(context:from:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:20AWSLambdaRuntimeCore13LambdaContextV","kind":"typeIdentifier","text":"LambdaContext"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Event","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/request(context:from:)-2wtco","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/request(context:from:)-2wtco","defaultImplementations":2,"kind":"symbol","role":"symbol","required":true,"abstract":[{"text":"Convert from ","type":"text"},{"code":"In","type":"codeVoice"},{"text":" type to ","type":"text"},{"code":"Request","type":"codeVoice"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Responder":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Responder","role":"symbol","required":true,"abstract":[{"type":"text","text":"HTTP Responder"}],"title":"Responder","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP","kind":"typeIdentifier"}]}}}