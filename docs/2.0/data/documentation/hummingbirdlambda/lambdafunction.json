{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(responder:event:output:services:logger:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(router:event:output:services:logger:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/processesRunBeforeLambdaStart","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/responder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/services"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/addServices(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/LambdaFunctionProtocol-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"abstract":[{"type":"text","text":"Represents a Lambda function with input\/output and background processes"}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction"],"generated":true,"anchor":"Lambda-function","title":"Lambda function"}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/lambdafunction"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Responder"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Event"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Responder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","text":"HTTPResponder"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Event"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B5EventP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent","text":"LambdaEvent"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B6OutputP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput","text":"LambdaOutput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Responder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","text":"InitializableFromSource"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Responder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","text":"Context"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","text":"Source"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B20RequestContextSourceV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource","text":"LambdaRequestContextSource"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Event"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Setup lambda that is triggered by "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" and has output "},{"type":"codeVoice","code":"Output"},{"type":"text","text":". The "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" type is"},{"type":"text","text":" "},{"type":"text","text":"converted to a Hummingbird "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and passed into the "},{"type":"codeVoice","code":"responder"},{"type":"text","text":". The"},{"type":"text","text":" "},{"type":"text","text":"resulting "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"type":"text","text":" is then converted to the "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" type of the lambda."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example an APIGateway Lamdba is setup as follows"}],"type":"paragraph"},{"code":["let router = Router(context: BasicLambdaRequestContext<APIGatewayRequest>.self)","router.get { request, context in","    \"Hello!\"","}","let lambda = LambdaFunction(","    event: APIGatewayRequest.self,","    output: APIGatewayResponse.self,","    router: router",")","try await lambda.runService()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"HummingbirdLambda includes typealiases for lambdas that accept Event and Output types"},{"type":"text","text":" "},{"type":"text","text":"for APIGateway: "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","isActive":true},{"type":"text","text":", APIGateway2: "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and FunctionURLs: "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"title":"LambdaFunction","modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"role":"symbol","externalID":"s:17HummingbirdLambda0B8FunctionV"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContextSource":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContextSource","kind":"identifier"}],"title":"LambdaRequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource","abstract":[],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"LambdaRequestContextSource","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"title":"InitializableFromSource","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","role":"symbol","navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"url":"\/documentation\/hummingbird\/initializablefromsource"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayLambdaFunction":{"title":"APIGatewayLambdaFunction","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"abstract":[{"type":"text","text":"Typealias for Lambda function triggered by APIGateway"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"url":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/LambdaFunctionProtocol-Implementations":{"abstract":[],"title":"LambdaFunctionProtocol Implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/LambdaFunctionProtocol-Implementations","role":"collectionGroup","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/lambdafunctionprotocol-implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"title":"HTTPResponder","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"type":"topic","url":"\/documentation\/hummingbird\/httpresponder"},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"title":"Swift.SendableMetatype","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"},"logo.png":{"alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayV2LambdaFunction":{"title":"APIGatewayV2LambdaFunction","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","role":"symbol","navigatorTitle":[{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}],"abstract":[{"text":"Typealias for Lambda function triggered by APIGatewayV2","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"title":"LambdaFunction","abstract":[{"text":"Represents a Lambda function with input\/output and background processes","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","role":"symbol","navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/services":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/services","abstract":[{"text":"services attached to the application.","type":"text"}],"title":"services","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/services","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"services"},{"kind":"text","text":": ["},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier","text":"Service"},{"kind":"text","text":"]"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/logger":{"abstract":[{"text":"Logger","type":"text"}],"title":"logger","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/logger","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/logger","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdlambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","type":"topic","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"title":"HummingbirdLambda","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/processesRunBeforeLambdaStart":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/processesRunBeforeLambdaStart","abstract":[{"type":"text","text":"Processes to be run before lambda is started"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/processesrunbeforelambdastart","title":"processesRunBeforeLambdaStart","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"processesRunBeforeLambdaStart","kind":"identifier"},{"text":": [() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":"]"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"Request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaEvent":{"role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdaevent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent","navigatorTitle":[{"text":"LambdaEvent","kind":"identifier"}],"type":"topic","abstract":[{"text":"Lambda event type that can generate HTTP Request","type":"text"}],"title":"LambdaEvent","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaEvent","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(responder:event:output:services:logger:)":{"title":"init(responder:event:output:services:logger:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(responder:event:output:services:logger:)","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(responder:event:output:services:logger:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"responder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV9Responderxmfp","kind":"typeIdentifier","text":"Responder"},{"kind":"text","text":", "},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV5Eventq_mfp","kind":"typeIdentifier","text":"Event"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"output"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6Outputq0_mfp","kind":"typeIdentifier","text":"Output"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"services"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier","text":"Service"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Initialize LambdaFunction"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/responder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/responder","type":"topic","abstract":[{"type":"text","text":"routes requests to responders based on URI"}],"title":"responder","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV9Responderxmfp","kind":"typeIdentifier","text":"Responder"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(router:event:output:services:logger:)":{"abstract":[{"type":"text","text":"Initialize LambdaFunction"}],"title":"init(router:event:output:services:logger:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(router:event:output:services:logger:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(router:event:output:services:logger:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ResponderBuilder","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"router","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ResponderBuilder","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6router5event6output8services6loggerACyxq_q0_Gqd___q_mq0_mSay16ServiceLifecycle0I0_pG7Logging6LoggerVSgtc9ResponderQyd__Rsz0A020HTTPResponderBuilderRd__lufc0mO0L_qd__mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Event","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV5Eventq_mfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"output","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Output","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6Outputq0_mfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"services","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":"?)","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/beforeLambdaStarts(perform:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)","type":"topic","abstract":[{"type":"text","text":"Add a process to run before we kick off the lambda runtime service"}],"title":"beforeLambdaStarts(perform:)","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/beforelambdastarts(perform:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"beforeLambdaStarts"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder/Context":{"required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"title":"Context","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/httpresponder\/context"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"title":"Source","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","required":true,"role":"symbol","abstract":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"}],"url":"\/documentation\/hummingbird\/initializablefromsource\/source"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/addServices(_:)":{"abstract":[{"text":"Add service to be managed by lambda function’s ServiceGroup","type":"text"}],"title":"addServices(_:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/addServices(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/addservices(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addServices","kind":"identifier"},{"text":"(","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier"},{"text":"...)","kind":"text"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","type":"unresolvable","title":"ServiceLifecycle.Service"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaOutput":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput","title":"LambdaOutput","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaOutput","kind":"identifier"}],"navigatorTitle":[{"text":"LambdaOutput","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdaoutput","role":"symbol","abstract":[{"text":"Lambda output type that can be generated from HTTP Response","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FunctionURLLambdaFunction":{"title":"FunctionURLLambdaFunction","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction","role":"symbol","navigatorTitle":[{"text":"FunctionURLLambdaFunction","kind":"identifier"}],"abstract":[{"text":"Typealias for Lambda function triggered by function URL","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FunctionURLLambdaFunction","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/functionurllambdafunction"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunctionProtocol":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunctionProtocol","kind":"identifier"}],"title":"LambdaFunctionProtocol","abstract":[{"text":"Protocol for a AWS Lambda function.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","role":"symbol","navigatorTitle":[{"text":"LambdaFunctionProtocol","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"title":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","kind":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"role":"symbol","navigatorTitle":[{"text":"Response","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/response"}}}