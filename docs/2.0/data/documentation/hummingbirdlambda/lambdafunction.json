{"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(responder:event:output:services:logger:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(router:event:output:services:logger:)"],"generated":true},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/processesRunBeforeLambdaStart","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/responder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/services"],"generated":true},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/addServices(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/LambdaFunctionProtocol-Implementations"],"generated":true}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Responder"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Event"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Responder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","text":"HTTPResponder"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Event"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B5EventP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent","text":"LambdaEvent"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B6OutputP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput","text":"LambdaOutput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Responder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","text":"InitializableFromSource"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Responder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","text":"Context"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","text":"Source"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B20RequestContextSourceV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource","text":"LambdaRequestContextSource"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Event"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Setup lambda that is triggered by "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" and has output "},{"code":"Output","type":"codeVoice"},{"type":"text","text":". The "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" type is"},{"type":"text","text":" "},{"type":"text","text":"converted to a Hummingbird "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and passed into the "},{"code":"responder","type":"codeVoice"},{"type":"text","text":". The"},{"type":"text","text":" "},{"type":"text","text":"resulting "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"type":"text","text":" is then converted to the "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" type of the lambda."}]},{"type":"paragraph","inlineContent":[{"text":"For example an APIGateway Lamdba is setup as follows","type":"text"}]},{"type":"codeListing","code":["let router = Router(context: BasicLambdaRequestContext<APIGatewayRequest>.self)","router.get { request, context in","    \"Hello!\"","}","let lambda = LambdaFunction(","    event: APIGatewayRequest.self,","    output: APIGatewayResponse.self,","    router: router",")","try await lambda.runService()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdLambda includes typealiases for lambdas that accept Event and Output types","type":"text"},{"text":" ","type":"text"},{"text":"for APIGateway: ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","type":"reference"},{"text":", APIGateway2: ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","type":"reference"},{"text":" ","type":"text"},{"text":"and FunctionURLs: ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction","type":"reference"},{"text":".","type":"text"}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/lambdafunction"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"],"type":"conformsTo"}],"metadata":{"externalID":"s:17HummingbirdLambda0B8FunctionV","role":"symbol","title":"LambdaFunction","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"modules":[{"name":"HummingbirdLambda"}],"navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"symbolKind":"struct"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Represents a Lambda function with input\/output and background processes"}],"seeAlsoSections":[{"anchor":"Lambda-function","title":"Lambda function","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction"],"generated":true}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaOutput":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaOutput","kind":"identifier"}],"type":"topic","abstract":[{"text":"Lambda output type that can be generated from HTTP Response","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput","url":"\/documentation\/hummingbirdlambda\/lambdaoutput","title":"LambdaOutput","role":"symbol","navigatorTitle":[{"text":"LambdaOutput","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/responder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/responder","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","abstract":[{"type":"text","text":"routes requests to responders based on URI"}],"type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV9Responderxmfp","kind":"typeIdentifier","text":"Responder"}],"role":"symbol","title":"responder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","title":"InitializableFromSource","kind":"symbol","abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"url":"\/documentation\/hummingbird\/initializablefromsource","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(responder:event:output:services:logger:)":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(responder:event:output:services:logger:)","abstract":[{"type":"text","text":"Initialize LambdaFunction"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"responder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Responder","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV9Responderxmfp"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Event","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV5Eventq_mfp"},{"text":".Type, ","kind":"text"},{"text":"output","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6Outputq0_mfp"},{"text":".Type, ","kind":"text"},{"text":"services","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Service","kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P"},{"text":"], ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":"?)","kind":"text"}],"title":"init(responder:event:output:services:logger:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(responder:event:output:services:logger:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"Request","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder/Context":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"url":"\/documentation\/hummingbird\/httpresponder\/context","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder\/Context","type":"topic","title":"Context","required":true,"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"type":"unresolvable","title":"Swift.SendableMetatype","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContextSource":{"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContextSource","kind":"identifier"}],"title":"LambdaRequestContextSource","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource","type":"topic","role":"symbol","navigatorTitle":[{"text":"LambdaRequestContextSource","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdlambda","type":"topic","title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/logger":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/logger","title":"logger","abstract":[{"text":"Logger","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/logger"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/LambdaFunctionProtocol-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/LambdaFunctionProtocol-Implementations","title":"LambdaFunctionProtocol Implementations","kind":"article","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/lambdafunctionprotocol-implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/services":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/services","title":"services","abstract":[{"type":"text","text":"services attached to the application."}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/services","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"services"},{"kind":"text","text":": ["},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"url":"\/documentation\/hummingbirdcore\/response","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"title":"Response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Response"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(router:event:output:services:logger:)":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(router:event:output:services:logger:)","abstract":[{"type":"text","text":"Initialize LambdaFunction"}],"title":"init(router:event:output:services:logger:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ResponderBuilder","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"router","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ResponderBuilder","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6router5event6output8services6loggerACyxq_q0_Gqd___q_mq0_mSay16ServiceLifecycle0I0_pG7Logging6LoggerVSgtc9ResponderQyd__Rsz0A020HTTPResponderBuilderRd__lufc0mO0L_qd__mfp"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Event","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV5Eventq_mfp"},{"text":".Type, ","kind":"text"},{"text":"output","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionV6Outputq0_mfp"},{"text":".Type, ","kind":"text"},{"text":"services","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Service","kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P"},{"text":"], ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(router:event:output:services:logger:)"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"title":"LambdaFunction","abstract":[{"text":"Represents a Lambda function with input\/output and background processes","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","type":"topic","role":"symbol","navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"url":"\/documentation\/hummingbird\/initializablefromsource\/source","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"}],"title":"Source","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","type":"topic","required":true,"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayV2LambdaFunction":{"url":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}],"title":"APIGatewayV2LambdaFunction","abstract":[{"text":"Typealias for Lambda function triggered by APIGatewayV2","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","type":"topic","role":"symbol","navigatorTitle":[{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaEvent":{"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Lambda event type that can generate HTTP Request"}],"navigatorTitle":[{"text":"LambdaEvent","kind":"identifier"}],"title":"LambdaEvent","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaEvent","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent","url":"\/documentation\/hummingbirdlambda\/lambdaevent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FunctionURLLambdaFunction":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction","title":"FunctionURLLambdaFunction","kind":"symbol","abstract":[{"text":"Typealias for Lambda function triggered by function URL","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/functionurllambdafunction","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FunctionURLLambdaFunction","kind":"identifier"}],"navigatorTitle":[{"text":"FunctionURLLambdaFunction","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayLambdaFunction":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","title":"APIGatewayLambdaFunction","kind":"symbol","abstract":[{"type":"text","text":"Typealias for Lambda function triggered by APIGateway"}],"url":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"APIGatewayLambdaFunction","kind":"identifier"}],"navigatorTitle":[{"text":"APIGatewayLambdaFunction","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","title":"ServiceLifecycle.Service"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/httpresponder","role":"symbol","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","title":"HTTPResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/processesRunBeforeLambdaStart":{"role":"symbol","type":"topic","title":"processesRunBeforeLambdaStart","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/processesrunbeforelambdastart","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"processesRunBeforeLambdaStart","kind":"identifier"},{"text":": [() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/processesRunBeforeLambdaStart","abstract":[{"text":"Processes to be run before lambda is started","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/addServices(_:)":{"role":"symbol","type":"topic","title":"addServices(_:)","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/addservices(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addServices"},{"kind":"text","text":"("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier","text":"Service"},{"kind":"text","text":"...)"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/addServices(_:)","abstract":[{"type":"text","text":"Add service to be managed by lambda function’s ServiceGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunctionProtocol":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","title":"LambdaFunctionProtocol","kind":"symbol","abstract":[{"text":"Protocol for a AWS Lambda function.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunctionProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"LambdaFunctionProtocol"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/beforeLambdaStarts(perform:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"beforeLambdaStarts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"title":"beforeLambdaStarts(perform:)","abstract":[{"text":"Add a process to run before we kick off the lambda runtime service","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/beforeLambdaStarts(perform:)","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/beforelambdastarts(perform:)","kind":"symbol","role":"symbol"}}}