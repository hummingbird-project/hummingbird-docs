{"abstract":[{"text":"Build the responder","type":"text"}],"metadata":{"modules":[{"name":"HummingbirdLambda"}],"title":"responder","role":"symbol","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Responder","preciseIdentifier":"s:17HummingbirdLambda0B16FunctionProtocolP9ResponderQa","kind":"typeIdentifier"}],"roleHeading":"Instance Property","externalID":"s:17HummingbirdLambda0B16FunctionProtocolP9responder9ResponderQzvp","required":true},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/responder-swift.property"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol\/responder-swift.property","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol\/Responder-swift.associatedtype","kind":"typeIdentifier","text":"Responder","preciseIdentifier":"s:17HummingbirdLambda0B16FunctionProtocolP9ResponderQa"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" }"}]}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"kind":"symbol","type":"topic","title":"HummingbirdLambda","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"url":"\/documentation\/hummingbirdlambda","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunctionProtocol":{"type":"topic","title":"LambdaFunctionProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunctionProtocol"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LambdaFunctionProtocol"}],"role":"symbol","abstract":[{"text":"Protocol for a AWS Lambda function.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunctionProtocol/responder-swift.property":{"kind":"symbol","abstract":[{"text":"Build the responder","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B16FunctionProtocolP9ResponderQa","kind":"typeIdentifier","text":"Responder"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/responder-swift.property","type":"topic","required":true,"title":"responder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol\/responder-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunctionProtocol/Responder-swift.associatedtype":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol\/Responder-swift.associatedtype","abstract":[{"text":"Responder that generates a response from a request and context","type":"text"}],"role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol\/responder-swift.associatedtype","type":"topic","required":true,"title":"Responder","kind":"symbol"}}}