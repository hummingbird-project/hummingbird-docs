{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"revertInconsistent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"client","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PostgresClient","preciseIdentifier":"s:11PostgresNIO0A6ClientC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"groups","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"DatabaseMigrationGroup","preciseIdentifier":"s:18PostgresMigrations22DatabaseMigrationGroupV","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrationGroup"},{"text":"] = [], ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"dryRun","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Postgres client"}],"type":"paragraph"}],"name":"client"},{"content":[{"inlineContent":[{"type":"text","text":"Migration groups to revert, an empty array means all groups"}],"type":"paragraph"}],"name":"groups"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Logger to use"}]}],"name":"logger"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should migrations actually be reverted, or should we just report what would be reverted"}]}],"name":"dryRun"}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"This will revert any migrations in the applied migration list after an inconsistency has been found in","type":"text"},{"text":" ","type":"text"},{"text":"list eg a migration is missing or the order of migrations has changed. This is a destructive action","type":"text"},{"text":" ","type":"text"},{"text":"so it is best to run this with dryRun set to true before running it without so you know what migrations","type":"text"},{"text":" ","type":"text"},{"text":"it will revert.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For a migration to be removed it has to have been registered either using","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations\/add(_:skipDuplicates:)","isActive":true,"type":"reference"},{"text":" or ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations\/register(_:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"symbol","roleHeading":"Instance Method","title":"revertInconsistent(client:groups:logger:dryRun:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"revertInconsistent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"client","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11PostgresNIO0A6ClientC","text":"PostgresClient","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"groups","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:18PostgresMigrations22DatabaseMigrationGroupV","text":"DatabaseMigrationGroup","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"dryRun","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"externalID":"s:18PostgresMigrations08DatabaseB0C18revertInconsistent6client6groups6logger6dryRuny0A3NIO0A6ClientC_SayAA0C14MigrationGroupVG7Logging6LoggerVSbtYaKF","modules":[{"name":"PostgresMigrations"}],"symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations\/revertInconsistent(client:groups:logger:dryRun:)","interfaceLanguage":"swift"},"abstract":[{"text":"Revert database migrations that are inconsistent with the migration list","type":"text"}],"variants":[{"paths":["\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistent(client:groups:logger:dryrun:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrations/register(_:)":{"url":"\/documentation\/postgresmigrations\/databasemigrations\/register(_:)","abstract":[{"text":"Register migration without it being applied","type":"text"}],"title":"register(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations\/register(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:18PostgresMigrations17DatabaseMigrationP","text":"DatabaseMigration","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrations/revertInconsistent(client:groups:logger:dryRun:)":{"kind":"symbol","type":"topic","title":"revertInconsistent(client:groups:logger:dryRun:)","abstract":[{"type":"text","text":"Revert database migrations that are inconsistent with the migration list"}],"url":"\/documentation\/postgresmigrations\/databasemigrations\/revertinconsistent(client:groups:logger:dryrun:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"revertInconsistent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"client","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PostgresClient","kind":"typeIdentifier","preciseIdentifier":"s:11PostgresNIO0A6ClientC"},{"text":", ","kind":"text"},{"text":"groups","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"DatabaseMigrationGroup","kind":"typeIdentifier","preciseIdentifier":"s:18PostgresMigrations22DatabaseMigrationGroupV"},{"text":"], ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":", ","kind":"text"},{"text":"dryRun","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations\/revertInconsistent(client:groups:logger:dryRun:)"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrationGroup":{"navigatorTitle":[{"kind":"identifier","text":"DatabaseMigrationGroup"}],"url":"\/documentation\/postgresmigrations\/databasemigrationgroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrationGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseMigrationGroup"}],"type":"topic","title":"DatabaseMigrationGroup","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Group identifier for a group of migrations."}]},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations":{"kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Postgres database migration service","type":"text"}],"url":"\/documentation\/postgresmigrations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","title":"PostgresMigrations","type":"topic"},"logo.png":{"identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrations":{"url":"\/documentation\/postgresmigrations\/databasemigrations","kind":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseMigrations"}],"abstract":[{"text":"Database migration support","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations","role":"symbol","title":"DatabaseMigrations","navigatorTitle":[{"kind":"identifier","text":"DatabaseMigrations"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrations/add(_:skipDuplicates:)":{"title":"add(_:skipDuplicates:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations\/add(_:skipDuplicates:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DatabaseMigration","preciseIdentifier":"s:18PostgresMigrations17DatabaseMigrationP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"skipDuplicates"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","url":"\/documentation\/postgresmigrations\/databasemigrations\/add(_:skipduplicates:)","abstract":[{"type":"text","text":"Add migration to list of migrations to be be applied"}]}}}