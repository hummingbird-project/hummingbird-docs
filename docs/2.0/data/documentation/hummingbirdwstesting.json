{"metadata":{"symbolKind":"module","images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Framework","modules":[{"name":"HummingbirdWSTesting"}],"title":"HummingbirdWSTesting","role":"collection","externalID":"HummingbirdWSTesting"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrates with the Hummingbird test framework "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","type":"reference","isActive":true},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"]},{"inlineContent":[{"type":"text","text":"WebSocket testing requires a live server so it only works with the "},{"type":"codeVoice","code":".live"},{"text":" and ","type":"text"},{"code":".ahc","type":"codeVoice"},{"type":"text","text":" test frameworks."}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting"},"topicSections":[{"title":"Testing","anchor":"Testing","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"]}],"kind":"symbol","abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"variants":[{"paths":["\/documentation\/hummingbirdwstesting"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"anchor":"Related-Documentation","title":"Related Documentation"}],"hierarchy":{"paths":[[]]},"sections":[],"references":{"logo.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"title":"HummingbirdWebSocket","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdwebsocket"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"title":"WSClient","role":"collection","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/wsclient","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"url":"\/documentation\/hummingbirdtesting","title":"HummingbirdTesting","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Test WebSocket endpoint"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ws"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8WSClient28WebSocketClientConfigurationV","text":"WebSocketClientConfiguration","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebSocketDataHandler","kind":"typeIdentifier","preciseIdentifier":"s:6WSCore20WebSocketDataHandlera"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:8WSClient15WebSocketClientV","kind":"typeIdentifier","text":"WebSocketClient"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:8WSClient15WebSocketClientV7ContextV"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:6WSCore19WebSocketCloseFrameV","text":"WebSocketCloseFrame","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"ws(_:configuration:logger:handler:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"abstract":[{"text":"Testing framework for WebSockets","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","kind":"symbol","title":"HummingbirdWSTesting","url":"\/documentation\/hummingbirdwstesting","role":"collection"}}}