{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"title":"Related Documentation","anchor":"Related-Documentation"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting"},"metadata":{"roleHeading":"Framework","role":"collection","externalID":"HummingbirdWSTesting","title":"HummingbirdWSTesting","images":[{"type":"icon","identifier":"logo.png"}],"symbolKind":"module","modules":[{"name":"HummingbirdWSTesting"}]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Integrates with the Hummingbird test framework ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},{"text":".","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"WebSocket testing requires a live server so it only works with the "},{"type":"codeVoice","code":".live"},{"type":"text","text":" and "},{"type":"codeVoice","code":".ahc"},{"text":" test frameworks.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdwstesting"]}],"kind":"symbol","hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"topicSections":[{"anchor":"Testing","title":"Testing","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"]}],"references":{"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"title":"ws(_:configuration:logger:handler:)","type":"topic","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","abstract":[{"type":"text","text":"Test WebSocket endpoint"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ws"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"WebSocketClientConfiguration","preciseIdentifier":"s:8WSClient28WebSocketClientConfigurationV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebSocketDataHandler","preciseIdentifier":"s:6WSCore20WebSocketDataHandlera","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:8WSClient15WebSocketClientV","text":"WebSocketClient","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:8WSClient15WebSocketClientV7ContextV","kind":"typeIdentifier","text":"Context"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"WebSocketCloseFrame","preciseIdentifier":"s:6WSCore19WebSocketCloseFrameV","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"title":"WSClient","type":"topic","url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"url":"\/documentation\/hummingbirdwstesting","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdWSTesting","type":"topic","abstract":[{"text":"Testing framework for WebSockets","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","title":"HummingbirdTesting","role":"collection","url":"\/documentation\/hummingbirdtesting","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Test framework for Hummingbird.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","title":"HummingbirdWebSocket","role":"collection","url":"\/documentation\/hummingbirdwebsocket","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}