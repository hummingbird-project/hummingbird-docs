{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda"]}],"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"collection","title":"HummingbirdLambda","images":[{"identifier":"logo.png","type":"icon"}],"externalID":"HummingbirdLambda","roleHeading":"Framework","modules":[{"name":"HummingbirdLambda"}],"symbolKind":"module"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","interfaceLanguage":"swift"},"abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"topicSections":[{"title":"Lambda function","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction"],"anchor":"Lambda-function"},{"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource"],"anchor":"Request-context"},{"generated":true,"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput"],"anchor":"Protocols"}],"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting"],"anchor":"Related-Documentation"},{"generated":true,"title":"Reference Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"anchor":"Reference-Documentation"}],"primaryContentSections":[{"kind":"mentions","mentions":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Package that allows you to use the Hummingbird Router and Middleware inside an AWS Lambda.","type":"text"}]},{"text":"Usage","level":2,"type":"heading","anchor":"Usage"},{"type":"paragraph","inlineContent":[{"text":"Creating a Hummingbird Lambda is very similar to how you create a Hummingbird server application. You create your","type":"text"},{"text":" ","type":"text"},{"text":"router, create a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","isActive":true,"type":"reference"},{"text":" using the router and then run the lambda function.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["typealias AppRequestContext = BasicLambdaRequestContext<APIGatewayV2Request>","","\/\/ Create router and add a single route returning \"Hello\" and name in its body","let router = Router(context: AppRequestContext.self)","router.get(\"hello\/{name}\") { request, context in","    let name = try context.parameters.require(\"name\")","    return \"Hello \\(name)\"","}","\/\/ create APIGatewayV2 lambda using router and run.","let lambda = LambdaFunction(","    router: router,","    event: APIGatewayV2Request.self,","    output: APIGatewayV2Response.self",")","try await lambda.runService()"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdValkey":{"title":"HummingbirdValkey","url":"\/documentation\/hummingbirdvalkey","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","abstract":[{"text":"Add Valkey\/Redis support to Hummingbird server with valkey-swift.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"kind":"symbol","url":"\/documentation\/jobs","type":"topic","role":"collection","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","title":"Jobs","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"title":"LambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContext"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaRequestContext"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","abstract":[{"type":"text","text":"A Request Context that is initialized with the Event that triggered the Lambda"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdauth","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"title":"HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayLambdaFunction":{"title":"APIGatewayLambdaFunction","url":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","navigatorTitle":[{"text":"APIGatewayLambdaFunction","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"APIGatewayLambdaFunction","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Typealias for Lambda function triggered by APIGateway"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","kind":"symbol","role":"symbol"},"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","title":"HummingbirdLambda","type":"topic","role":"collection","url":"\/documentation\/hummingbirdlambda","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunctionProtocol":{"title":"LambdaFunctionProtocol","url":"\/documentation\/hummingbirdlambda\/lambdafunctionprotocol","navigatorTitle":[{"text":"LambdaFunctionProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunctionProtocol","kind":"identifier"}],"abstract":[{"text":"Protocol for a AWS Lambda function.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunctionProtocol","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"title":"WSClient","url":"\/documentation\/wsclient","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"type":"topic","url":"\/documentation\/mustache","kind":"symbol","role":"collection","abstract":[{"text":"Mustache template engine.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicLambdaRequestContext","kind":"identifier"}],"title":"BasicLambdaRequestContext","abstract":[{"type":"text","text":"The default Lambda request context."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","navigatorTitle":[{"text":"BasicLambdaRequestContext","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaEvent":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaEvent"}],"abstract":[{"type":"text","text":"Lambda event type that can generate HTTP Request"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdaevent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaEvent","navigatorTitle":[{"kind":"identifier","text":"LambdaEvent"}],"title":"LambdaEvent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting","title":"HummingbirdLambdaTesting","abstract":[],"kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/hummingbirdlambdatesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"title":"LambdaFunction","url":"\/documentation\/hummingbirdlambda\/lambdafunction","navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Represents a Lambda function with input\/output and background processes"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","title":"HummingbirdFluent","type":"topic","role":"collection","url":"\/documentation\/hummingbirdfluent","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"type":"text","text":"Integration with Vapor’s Fluent ORM framework."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FunctionURLLambdaFunction":{"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FunctionURLLambdaFunction"}],"title":"FunctionURLLambdaFunction","type":"topic","abstract":[{"type":"text","text":"Typealias for Lambda function triggered by function URL"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FunctionURLLambdaFunction","url":"\/documentation\/hummingbirdlambda\/functionurllambdafunction","navigatorTitle":[{"kind":"identifier","text":"FunctionURLLambdaFunction"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"title":"HummingbirdPostgres","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Working with Postgres databases.","type":"text"}],"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"url":"\/documentation\/hummingbirdwebsocket","kind":"symbol","type":"topic","role":"collection","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","title":"HummingbirdWebSocket","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"title":"HummingbirdCompression","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","url":"\/documentation\/hummingbirdcompression"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"title":"Request Contexts","url":"\/documentation\/hummingbird\/requestcontexts","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaOutput":{"role":"symbol","title":"LambdaOutput","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaOutput","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaOutput","url":"\/documentation\/hummingbirdlambda\/lambdaoutput","abstract":[{"text":"Lambda output type that can be generated from HTTP Response","type":"text"}],"navigatorTitle":[{"text":"LambdaOutput","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContextSource":{"title":"LambdaRequestContextSource","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontextsource","navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContextSource"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaRequestContextSource"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContextSource","abstract":[],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","url":"\/documentation\/hummingbird","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayV2LambdaFunction":{"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}],"title":"APIGatewayV2LambdaFunction","abstract":[{"text":"Typealias for Lambda function triggered by APIGatewayV2","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","url":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","navigatorTitle":[{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}],"kind":"symbol"}}}