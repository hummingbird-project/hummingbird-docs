{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/Configuration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/Response"],"anchor":"Structures","title":"Structures","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/init(host:port:configuration:eventLoopGroupProvider:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/channelPromise"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/close(mode:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/connect()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/delete(_:headers:body:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/execute(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/executeAndDontWaitForResponse(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/get(_:headers:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/getChannel()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/head(_:headers:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/post(_:headers:body:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/put(_:headers:body:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/shutdown()"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/withClient(host:port:configuration:eventLoopGroupProvider:operation:)"],"anchor":"Type-Methods","title":"Type Methods","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/Error"],"anchor":"Enumerations","title":"Enumerations","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient"},"variants":[{"paths":["\/documentation\/hummingbirdtesting\/testclient"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"],"title":"Conforms To"}],"abstract":[{"text":"Bare bones single connection HTTP client.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"]]},"kind":"symbol","metadata":{"symbolKind":"struct","modules":[{"name":"HummingbirdTesting"}],"title":"TestClient","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestClient"}],"roleHeading":"Structure","role":"symbol","externalID":"s:18HummingbirdTesting10TestClientV","navigatorTitle":[{"kind":"identifier","text":"TestClient"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestClient"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"This HTTP client is used for internal testing of Hummingbird and is also"},{"type":"text","text":" "},{"type":"text","text":"the client used by "},{"type":"codeVoice","code":".live"},{"type":"text","text":" testing framework."}],"type":"paragraph"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/withClient(host:port:configuration:eventLoopGroupProvider:operation:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withClient","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting10TestClientV13ConfigurationV","text":"Configuration"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eventLoopGroupProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore25NIOEventLoopGroupProviderO","text":"NIOEventLoopGroupProvider"},{"kind":"text","text":", "},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": (`Self`"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting10TestClientV04withD04host4port13configuration22eventLoopGroupProvider9operationxSS_SiAC13ConfigurationV7NIOCore08NIOEventjkL0OxACYaYbKctYaKlFZ5ValueL_xmfp","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting10TestClientV04withD04host4port13configuration22eventLoopGroupProvider9operationxSS_SiAC13ConfigurationV7NIOCore08NIOEventjkL0OxACYaYbKctYaKlFZ5ValueL_xmfp","text":"Value"}],"abstract":[{"text":"Run closure with temporary test client","type":"text"}],"url":"\/documentation\/hummingbirdtesting\/testclient\/withclient(host:port:configuration:eventloopgroupprovider:operation:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/withClient(host:port:configuration:eventLoopGroupProvider:operation:)","title":"withClient(host:port:configuration:eventLoopGroupProvider:operation:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/getChannel()":{"abstract":[],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/getChannel()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getChannel"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"}],"title":"getChannel()","kind":"symbol","url":"\/documentation\/hummingbirdtesting\/testclient\/getchannel()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/put(_:headers:body:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"put"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","kind":"typeIdentifier","text":"HTTPFields"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:18HummingbirdTesting10TestClientV","kind":"typeIdentifier","text":"TestClient"},{"kind":"text","text":"."},{"preciseIdentifier":"s:18HummingbirdTesting10TestClientV8ResponseV","kind":"typeIdentifier","text":"Response"}],"url":"\/documentation\/hummingbirdtesting\/testclient\/put(_:headers:body:)","kind":"symbol","title":"put(_:headers:body:)","type":"topic","abstract":[{"type":"text","text":"PUT request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/put(_:headers:body:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/Error":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Error"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/Error","url":"\/documentation\/hummingbirdtesting\/testclient\/error","title":"TestClient.Error","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"abstract":[],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/close(mode:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/close(mode:)","url":"\/documentation\/hummingbirdtesting\/testclient\/close(mode:)","title":"close(mode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/executeAndDontWaitForResponse(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/executeAndDontWaitForResponse(_:)","title":"executeAndDontWaitForResponse(_:)","url":"\/documentation\/hummingbirdtesting\/testclient\/executeanddontwaitforresponse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"executeAndDontWaitForResponse","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting10TestClientV","text":"TestClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting10TestClientV7RequestV","text":"Request","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Execute request to server but don’t wait for response.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/Request":{"abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"type":"topic","kind":"symbol","role":"symbol","title":"TestClient.Request","url":"\/documentation\/hummingbirdtesting\/testclient\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/Request","navigatorTitle":[{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP","title":"Swift.SendableMetatype"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/Configuration":{"title":"TestClient.Configuration","navigatorTitle":[{"text":"Configuration","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"TestClient configuration"}],"url":"\/documentation\/hummingbirdtesting\/testclient\/configuration","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Configuration","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/Configuration"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/channelPromise":{"title":"channelPromise","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/hummingbirdtesting\/testclient\/channelpromise","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelPromise","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/channelPromise"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/execute(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/execute(_:)","url":"\/documentation\/hummingbirdtesting\/testclient\/execute(_:)","title":"execute(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting10TestClientV","text":"TestClient"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting10TestClientV7RequestV","text":"Request"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting10TestClientV","text":"TestClient"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting10TestClientV8ResponseV","text":"Response"}],"abstract":[{"text":"Execute request to server. Return ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that will be fulfilled with HTTP response","type":"text"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/shutdown()":{"url":"\/documentation\/hummingbirdtesting\/testclient\/shutdown()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdown"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/shutdown()","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"shutdown client"}],"title":"shutdown()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/connect()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/connect()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"()","kind":"text"}],"title":"connect()","url":"\/documentation\/hummingbirdtesting\/testclient\/connect()","abstract":[{"text":"connect to HTTP server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/head(_:headers:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/head(_:headers:)","type":"topic","abstract":[{"type":"text","text":"HEAD request"}],"kind":"symbol","role":"symbol","title":"head(_:headers:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"head","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","kind":"typeIdentifier","text":"HTTPFields"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"TestClient","preciseIdentifier":"s:18HummingbirdTesting10TestClientV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","preciseIdentifier":"s:18HummingbirdTesting10TestClientV8ResponseV","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdtesting\/testclient\/head(_:headers:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/Response":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"TestClient.Response","url":"\/documentation\/hummingbirdtesting\/testclient\/response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/Response","navigatorTitle":[{"text":"Response","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/init(host:port:configuration:eventLoopGroupProvider:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Configuration","preciseIdentifier":"s:18HummingbirdTesting10TestClientV13ConfigurationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"eventLoopGroupProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOEventLoopGroupProvider","preciseIdentifier":"s:7NIOCore25NIOEventLoopGroupProviderO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(host:port:configuration:eventLoopGroupProvider:)","type":"topic","url":"\/documentation\/hummingbirdtesting\/testclient\/init(host:port:configuration:eventloopgroupprovider:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/init(host:port:configuration:eventLoopGroupProvider:)","abstract":[{"type":"text","text":"Initialize TestClient"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient":{"abstract":[{"type":"text","text":"Bare bones single connection HTTP client."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClient","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"TestClient","url":"\/documentation\/hummingbirdtesting\/testclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","navigatorTitle":[{"text":"TestClient","kind":"identifier"}]},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/delete(_:headers:body:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"delete","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting10TestClientV","text":"TestClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting10TestClientV8ResponseV","text":"Response","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdtesting\/testclient\/delete(_:headers:body:)","kind":"symbol","title":"delete(_:headers:body:)","type":"topic","abstract":[{"text":"DELETE request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/delete(_:headers:body:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","role":"collection","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/post(_:headers:body:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/post(_:headers:body:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"post","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting10TestClientV","text":"TestClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting10TestClientV8ResponseV","text":"Response","kind":"typeIdentifier"}],"role":"symbol","type":"topic","title":"post(_:headers:body:)","url":"\/documentation\/hummingbirdtesting\/testclient\/post(_:headers:body:)","kind":"symbol","abstract":[{"type":"text","text":"POST request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/get(_:headers:)":{"title":"get(_:headers:)","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdtesting\/testclient\/get(_:headers:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting10TestClientV","text":"TestClient"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting10TestClientV8ResponseV","text":"Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/get(_:headers:)","role":"symbol","abstract":[{"text":"GET request","type":"text"}]}}}