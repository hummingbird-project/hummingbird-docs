{"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/port"],"generated":true,"anchor":"Instance-Properties"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/execute(uri:method:headers:body:testCallback:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/executeRequest(uri:method:headers:body:)"],"generated":true,"title":"Instance Methods"}],"metadata":{"symbolKind":"protocol","title":"TestClientProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"identifier"}],"roleHeading":"Protocol","externalID":"s:18HummingbirdTesting18TestClientProtocolP","role":"symbol","modules":[{"name":"HummingbirdTesting"}],"navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestClientProtocol"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtesting\/testclientprotocol"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Protocol for client used by HummingbirdTesting"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/executeRequest(uri:method:headers:body:)":{"abstract":[{"text":"Execute URL request and provide response","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/executeRequest(uri:method:headers:body:)","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"executeRequest","kind":"identifier"},{"kind":"text","text":"("},{"text":"uri","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":", "},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPFields","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"kind":"text","text":", "},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"TestResponse","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting12TestResponseV"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/executerequest(uri:method:headers:body:)","kind":"symbol","type":"topic","title":"executeRequest(uri:method:headers:body:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/port":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"port","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/port","type":"topic","abstract":[],"required":true,"role":"symbol","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/port","title":"port"},"logo.png":{"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"url":"\/documentation\/hummingbirdtesting","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdTesting","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/execute(uri:method:headers:body:testCallback:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/execute(uri:method:headers:body:testCallback:)","abstract":[{"text":"Send request to associated test framework and call test callback on the response returned","type":"text"}],"type":"topic","title":"execute(uri:method:headers:body:testCallback:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"execute","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"uri","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"body"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":"?, "},{"text":"testCallback","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:18HummingbirdTesting12TestResponseV","text":"TestResponse","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Return","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolPAAE7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__AA0C8ResponseVYaKctYaKlF6ReturnL_qd__mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Return","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolPAAE7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__AA0C8ResponseVYaKctYaKlF6ReturnL_qd__mfp","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/execute(uri:method:headers:body:testcallback:)"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"url":"\/documentation\/hummingbirdtesting\/testclientprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestClientProtocol"}],"navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}],"title":"TestClientProtocol","abstract":[{"text":"Protocol for client used by HummingbirdTesting","type":"text"}],"type":"topic","role":"symbol"}}}