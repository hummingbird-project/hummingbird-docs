{"primaryContentSections":[{"mentions":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TodosAuthExample"],"kind":"mentions"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"codeListing","syntax":"swift","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"]},{"text":"Storage","type":"heading","level":2,"anchor":"Storage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}]},{"type":"codeListing","syntax":"swift","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"]},{"type":"paragraph","inlineContent":[{"text":"For more information:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Follow the tutorial: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Read the "},{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","type":"reference","isActive":true}]}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfluent"]}],"metadata":{"symbolKind":"module","role":"collection","modules":[{"name":"HummingbirdFluent"}],"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdFluent","roleHeading":"Framework","externalID":"HummingbirdFluent"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"sections":[],"hierarchy":{"paths":[[]]},"abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"topicSections":[{"anchor":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"],"title":"Fluent"},{"anchor":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"],"title":"Storage"}],"seeAlsoSections":[{"anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TodosAuthExample"],"title":"Related Documentation"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"title":"Reference Documentation","anchor":"Reference-Documentation"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"type":"topic","role":"collection","title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"type":"topic","abstract":[{"type":"text","text":"Integration with Vapor’s Fluent ORM framework."}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdfluent","kind":"symbol","title":"HummingbirdFluent","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"type":"topic","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/persistentdata","kind":"article","title":"Persistent data","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","type":"topic","role":"collection","abstract":[{"type":"text","text":"Working with Postgres databases."}],"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdPostgres"},"https://docs.vapor.codes/fluent/overview/":{"type":"link","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","title":"Fluent docs","titleInlineContent":[{"type":"text","text":"Fluent docs"}],"url":"https:\/\/docs.vapor.codes\/fluent\/overview\/"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"title":"FluentPersistDriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FluentPersistDriver"}],"kind":"symbol","abstract":[{"text":"Fluent driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FluentPersistDriver"}],"url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdcore","kind":"symbol","title":"HummingbirdCore","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"type":"topic","abstract":[{"type":"text","text":"Manage Fluent database migrations"}],"url":"\/documentation\/hummingbirdfluent\/fluentmigrations","kind":"symbol","navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"title":"FluentMigrations","role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FluentMigrations","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"url":"\/tutorials\/fluent","type":"topic","title":"Store Data with Fluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","role":"overview","kind":"overview","abstract":[{"text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies.","type":"text"}]},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","url":"\/documentation\/wsclient","type":"topic","role":"collection","abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"WSClient"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection","url":"\/documentation\/jobs","title":"Jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","url":"\/documentation\/hummingbirdauth","type":"topic","role":"collection","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"type":"topic","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdwebsocket","kind":"symbol","title":"HummingbirdWebSocket","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdValkey":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","url":"\/documentation\/hummingbirdvalkey","type":"topic","role":"collection","abstract":[{"type":"text","text":"Add Valkey\/Redis support to Hummingbird server with valkey-swift."}],"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdValkey"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"abstract":[{"type":"text","text":"Manage fluent databases and migrations"}],"navigatorTitle":[{"text":"Fluent","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fluent","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdfluent\/fluent","title":"Fluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TodosAuthExample":{"role":"article","type":"topic","title":"Todos with Authentication Example","url":"\/documentation\/hummingbird\/todosauthexample","abstract":[{"type":"text","text":"Example combining Authentication with CRUD operations using fluent-kit"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TodosAuthExample","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","url":"\/documentation\/mustache","type":"topic","role":"collection","abstract":[{"text":"Mustache template engine.","type":"text"}],"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","url":"\/documentation\/postgresmigrations","type":"topic","role":"collection","abstract":[{"type":"text","text":"Postgres database migration service"}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"PostgresMigrations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","url":"\/documentation\/hummingbirdcompression","type":"topic","role":"collection","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdCompression"}}}