{"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"topicSections":[{"title":"Fluent","anchor":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"]},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"],"anchor":"Storage"}],"metadata":{"externalID":"HummingbirdFluent","images":[{"type":"icon","identifier":"logo.png"}],"modules":[{"name":"HummingbirdFluent"}],"roleHeading":"Framework","symbolKind":"module","title":"HummingbirdFluent","role":"collection"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"seeAlsoSections":[{"title":"Reference Documentation","anchor":"Reference-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfluent"]}],"primaryContentSections":[{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"type":"codeListing","syntax":"swift"},{"level":2,"type":"heading","text":"Storage","anchor":"Storage"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Follow the tutorial: "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Read the "},{"isActive":true,"type":"reference","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"role":"overview","abstract":[{"type":"text","text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies."}],"url":"\/tutorials\/fluent","type":"topic","kind":"overview","title":"Store Data with Fluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"type":"topic","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","url":"\/documentation\/jobs","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","role":"symbol","navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"abstract":[{"type":"text","text":"Manage Fluent database migrations"}],"title":"FluentMigrations","type":"topic","url":"\/documentation\/hummingbirdfluent\/fluentmigrations","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"FluentMigrations","kind":"identifier"}]},"https://docs.vapor.codes/fluent/overview/":{"titleInlineContent":[{"text":"Fluent docs","type":"text"}],"title":"Fluent docs","type":"link","url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"title":"HummingbirdFluent","type":"topic","url":"\/documentation\/hummingbirdfluent"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"title":"WSClient","kind":"symbol","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"type":"topic","url":"\/documentation\/wsclient","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird Documentation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"role":"collection","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdcompression","type":"topic","kind":"symbol","title":"HummingbirdCompression","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"role":"symbol","abstract":[{"type":"text","text":"Fluent driver for persist system for storing persistent cross request key\/value pairs"}],"url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FluentPersistDriver"}],"kind":"symbol","title":"FluentPersistDriver","navigatorTitle":[{"text":"FluentPersistDriver","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"kind":"symbol","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"title":"HummingbirdPostgres","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"role":"symbol","abstract":[{"type":"text","text":"Manage fluent databases and migrations"}],"url":"\/documentation\/hummingbirdfluent\/fluent","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fluent"}],"kind":"symbol","title":"Fluent","navigatorTitle":[{"text":"Fluent","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"role":"collection","type":"topic","abstract":[{"text":"Mustache template engine.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/mustache","title":"Mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"role":"collection","type":"topic","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"kind":"symbol","url":"\/documentation\/hummingbirdredis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","type":"topic","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"title":"HummingbirdWebSocket","kind":"symbol","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdwebsocket","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","images":[{"type":"icon","identifier":"logo.png"}]}}}