{"metadata":{"images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Framework","role":"collection","externalID":"HummingbirdFluent","title":"HummingbirdFluent","modules":[{"name":"HummingbirdFluent"}],"symbolKind":"module"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"],"anchor":"Fluent","title":"Fluent"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"],"anchor":"Storage","title":"Storage"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfluent"]}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"syntax":"swift","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"type":"codeListing"},{"text":"Storage","anchor":"Storage","level":2,"type":"heading"},{"inlineContent":[{"text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"For more information:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Follow the tutorial: "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Read the "},{"isActive":true,"type":"reference","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Integration with Vaporâ€™s Fluent ORM framework."}],"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"anchor":"Reference-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"generated":true,"title":"Reference Documentation"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"title":"Fluent","url":"\/documentation\/hummingbirdfluent\/fluent","navigatorTitle":[{"kind":"identifier","text":"Fluent"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fluent"}],"type":"topic","role":"symbol","abstract":[{"text":"Manage fluent databases and migrations","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"type":"topic","role":"collection","title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbird","kind":"symbol","title":"Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"title":"FluentMigrations","url":"\/documentation\/hummingbirdfluent\/fluentmigrations","abstract":[{"type":"text","text":"Manage Fluent database migrations"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","kind":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FluentMigrations","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdCore","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdValkey":{"type":"topic","role":"collection","title":"HummingbirdValkey","url":"\/documentation\/hummingbirdvalkey","abstract":[{"type":"text","text":"Add Valkey\/Redis support to Hummingbird server with valkey-swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"url":"\/documentation\/hummingbirdpostgres","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","type":"topic","title":"HummingbirdPostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"url":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}]},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"title":"FluentPersistDriver","url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","navigatorTitle":[{"kind":"identifier","text":"FluentPersistDriver"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FluentPersistDriver"}],"type":"topic","role":"symbol","abstract":[{"text":"Fluent driver for persist system for storing persistent cross request key\/value pairs","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"Mustache","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","url":"\/documentation\/mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"role":"collection","url":"\/documentation\/hummingbirdcompression","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdCompression"},"https://docs.vapor.codes/fluent/overview/":{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","titleInlineContent":[{"type":"text","text":"Fluent docs"}],"url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","title":"Fluent docs","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"role":"collection","kind":"symbol","url":"\/documentation\/wsclient","title":"WSClient","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdWebSocket","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"url":"\/documentation\/hummingbirdwebsocket","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","title":"HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","kind":"symbol","abstract":[{"type":"text","text":"Integration with Vaporâ€™s Fluent ORM framework."}],"images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"type":"topic","abstract":[{"text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies.","type":"text"}],"kind":"overview","title":"Store Data with Fluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","url":"\/tutorials\/fluent","role":"overview"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"Jobs","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","url":"\/documentation\/jobs","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"role":"collection","type":"topic"}}}