{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdfluent"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"title":"Fluent","anchor":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"]},{"title":"Storage","anchor":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"]}],"abstract":[{"type":"text","text":"Integration with Vaporâ€™s Fluent ORM framework."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"anchor":"Storage","type":"heading","level":2,"text":"Storage"},{"inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}],"type":"paragraph"},{"code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"For more information:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Follow the tutorial: "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Read the ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/"}]}]}]}],"kind":"content"}],"seeAlsoSections":[{"title":"Reference Documentation","generated":true,"anchor":"Reference-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"]}],"kind":"symbol","hierarchy":{"paths":[[]]},"metadata":{"modules":[{"name":"HummingbirdFluent"}],"title":"HummingbirdFluent","externalID":"HummingbirdFluent","images":[{"identifier":"logo.png","type":"icon"}],"symbolKind":"module","roleHeading":"Framework","role":"collection"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"role":"symbol","navigatorTitle":[{"text":"FluentPersistDriver","kind":"identifier"}],"title":"FluentPersistDriver","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","abstract":[{"type":"text","text":"Fluent driver for persist system for storing persistent cross request key\/value pairs"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FluentPersistDriver","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"type":"topic","role":"collection","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"kind":"symbol","url":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"url":"\/tutorials\/fluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","kind":"overview","title":"Store Data with Fluent","role":"overview","abstract":[{"text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies.","type":"text"}],"type":"topic"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","type":"topic","title":"Mustache","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Mustache template engine.","type":"text"}],"url":"\/documentation\/mustache","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","role":"collection","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdCompression","type":"topic","url":"\/documentation\/hummingbirdcompression"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","role":"collection","abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"kind":"symbol","type":"topic","title":"WSClient","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","role":"collection","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"kind":"symbol","type":"topic","title":"HummingbirdLambda","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Fluent"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","role":"symbol","abstract":[{"type":"text","text":"Manage fluent databases and migrations"}],"title":"Fluent","type":"topic","url":"\/documentation\/hummingbirdfluent\/fluent","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fluent"}]},"https://docs.vapor.codes/fluent/overview/":{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","title":"Fluent docs","titleInlineContent":[{"text":"Fluent docs","type":"text"}],"type":"link","url":"https:\/\/docs.vapor.codes\/fluent\/overview\/"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"role":"collection","title":"Jobs","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","url":"\/documentation\/jobs","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdValkey":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","role":"collection","abstract":[{"type":"text","text":"Add Valkey\/Redis support to Hummingbird server with valkey-swift."}],"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdValkey","type":"topic","url":"\/documentation\/hummingbirdvalkey"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","role":"collection","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"kind":"symbol","type":"topic","title":"HummingbirdWebSocket","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"abstract":[{"text":"Integration with Vaporâ€™s Fluent ORM framework.","type":"text"}],"title":"HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","type":"topic","title":"FluentMigrations","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FluentMigrations"}],"abstract":[{"type":"text","text":"Manage Fluent database migrations"}],"kind":"symbol","url":"\/documentation\/hummingbirdfluent\/fluentmigrations","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"FluentMigrations"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"type":"topic","role":"collection","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdpostgres","title":"HummingbirdPostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","images":[{"type":"icon","identifier":"logo.png"}]}}}