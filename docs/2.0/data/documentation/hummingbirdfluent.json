{"metadata":{"externalID":"HummingbirdFluent","images":[{"identifier":"logo.png","type":"icon"}],"symbolKind":"module","roleHeading":"Framework","role":"collection","modules":[{"name":"HummingbirdFluent"}],"title":"HummingbirdFluent"},"abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"topicSections":[{"title":"Fluent","anchor":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"]},{"title":"Storage","anchor":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfluent"]}],"primaryContentSections":[{"mentions":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],"kind":"mentions"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"type":"codeListing","syntax":"swift"},{"level":2,"text":"Storage","type":"heading","anchor":"Storage"},{"inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}],"type":"paragraph"},{"code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"For more information:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Follow the tutorial: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Read the ","type":"text"},{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","isActive":true,"type":"reference"}]}]}],"type":"unorderedList"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[[]]},"seeAlsoSections":[{"title":"Reference Documentation","anchor":"Reference-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"generated":true}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"kind":"symbol","url":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","type":"topic","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}]},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"url":"\/tutorials\/fluent","kind":"overview","title":"Store Data with Fluent","type":"topic","role":"overview","abstract":[{"type":"text","text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"https://docs.vapor.codes/fluent/overview/":{"url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","title":"Fluent docs","titleInlineContent":[{"type":"text","text":"Fluent docs"}],"type":"link"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"kind":"symbol","title":"Mustache","url":"\/documentation\/mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","type":"topic","abstract":[{"text":"Mustache template engine.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","url":"\/documentation\/hummingbirdcore","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","title":"HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fluent"}],"navigatorTitle":[{"kind":"identifier","text":"Fluent"}],"type":"topic","url":"\/documentation\/hummingbirdfluent\/fluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","role":"symbol","kind":"symbol","abstract":[{"text":"Manage fluent databases and migrations","type":"text"}],"title":"Fluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdValkey":{"kind":"symbol","title":"HummingbirdValkey","url":"\/documentation\/hummingbirdvalkey","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","type":"topic","abstract":[{"text":"Add Valkey\/Redis support to Hummingbird server with valkey-swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"kind":"article","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"url":"\/documentation\/hummingbird\/persistentdata","images":[{"type":"icon","identifier":"logo.png"}],"title":"Persistent data","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","kind":"symbol","url":"\/documentation\/hummingbirdfluent","title":"HummingbirdFluent","type":"topic","abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"title":"FluentMigrations","kind":"symbol","url":"\/documentation\/hummingbirdfluent\/fluentmigrations","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FluentMigrations","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Manage Fluent database migrations"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","type":"topic","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","kind":"symbol","url":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression","type":"topic","abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"title":"Jobs","type":"topic","url":"\/documentation\/jobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FluentPersistDriver","kind":"identifier"}],"navigatorTitle":[{"text":"FluentPersistDriver","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","role":"symbol","kind":"symbol","abstract":[{"text":"Fluent driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"title":"FluentPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","kind":"symbol","url":"\/documentation\/hummingbirdpostgres","title":"HummingbirdPostgres","type":"topic","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"kind":"symbol","title":"HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","type":"topic","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}]},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"title":"WSClient","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/wsclient","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"role":"collection"}}}