{"seeAlsoSections":[{"title":"Reference Documentation","anchor":"Reference-Documentation","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"]}],"abstract":[{"type":"text","text":"Integration with Vapor’s Fluent ORM framework."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"],"anchor":"Fluent","title":"Fluent"},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"],"anchor":"Storage"}],"variants":[{"paths":["\/documentation\/hummingbirdfluent"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","metadata":{"title":"HummingbirdFluent","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"modules":[{"name":"HummingbirdFluent"}],"roleHeading":"Framework","symbolKind":"module","externalID":"HummingbirdFluent"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"codeListing","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"syntax":"swift"},{"type":"heading","text":"Storage","anchor":"Storage","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}]},{"type":"codeListing","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Follow the tutorial: "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","type":"reference","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Read the "},{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","type":"reference","isActive":true}]}]}]}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"abstract":[{"text":"Manage fluent databases and migrations","type":"text"}],"navigatorTitle":[{"text":"Fluent","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","url":"\/documentation\/hummingbirdfluent\/fluent","title":"Fluent","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fluent"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","title":"HummingbirdFluent","abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"kind":"symbol","type":"topic","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdfluent"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"type":"topic","kind":"symbol","title":"Mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","url":"\/documentation\/mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","abstract":[{"type":"text","text":"Working with Postgres databases."}],"role":"collection","title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"abstract":[{"type":"text","text":"Fluent driver for persist system for storing persistent cross request key\/value pairs"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","title":"FluentPersistDriver","navigatorTitle":[{"kind":"identifier","text":"FluentPersistDriver"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"FluentPersistDriver","kind":"identifier"}],"url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver"},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"url":"\/tutorials\/fluent","title":"Store Data with Fluent","type":"topic","kind":"overview","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","abstract":[{"type":"text","text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies."}],"role":"overview"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"title":"FluentMigrations","navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdfluent\/fluentmigrations","type":"topic","abstract":[{"text":"Manage Fluent database migrations","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FluentMigrations"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","title":"HummingbirdAuth","role":"collection","url":"\/documentation\/hummingbirdauth","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"kind":"symbol","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"title":"HummingbirdRedis","type":"topic","url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"title":"WSClient","type":"topic","url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"},"https://docs.vapor.codes/fluent/overview/":{"type":"link","title":"Fluent docs","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","titleInlineContent":[{"text":"Fluent docs","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","kind":"symbol","url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","title":"HummingbirdWebSocket","role":"collection","url":"\/documentation\/hummingbirdwebsocket","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","type":"topic","role":"collection","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"type":"icon","identifier":"logo.png"}]},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"title":"Hummingbird Documentation","type":"topic","url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"title":"Jobs","type":"topic","url":"\/documentation\/jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdCompression","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","url":"\/documentation\/hummingbirdcompression","kind":"symbol","role":"collection"}}}