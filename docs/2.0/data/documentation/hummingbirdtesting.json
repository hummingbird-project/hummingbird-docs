{"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"Provides methods for easy setup of unit tests using either the XCTest or Swift Testing frameworks.","type":"text"}],"type":"paragraph"},{"text":"Usage","anchor":"Usage","level":3,"type":"heading"},{"inlineContent":[{"text":"Setup your server and run requests to the routes you want to test.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let router = Router()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = Application(router: router)","try await app.test(.router) { client in","    try await client.execute(uri: \"test\", method: .GET) { response in","        #expect(response.status == .ok)","        #expect(String(buffer: response.body) == \"testing\")","    }","}"],"type":"codeListing"}]}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","interfaceLanguage":"swift"},"metadata":{"symbolKind":"module","externalID":"HummingbirdTesting","roleHeading":"Framework","modules":[{"name":"HummingbirdTesting"}],"title":"HummingbirdTesting","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection"},"abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Test Setup","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"],"anchor":"Test-Setup"},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol"],"anchor":"Protocols","generated":true},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse"],"anchor":"Structures","generated":true}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"anchor":"Related-Documentation"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtesting"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme":{"navigatorTitle":[{"text":"TestHTTPScheme","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","url":"\/documentation\/hummingbirdtesting\/testhttpscheme","role":"symbol","type":"topic","abstract":[{"text":"HTTP Scheme to use with AsyncHTTPClient test framework","type":"text"}],"title":"TestHTTPScheme","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestHTTPScheme","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"type":"topic","title":"HummingbirdTesting","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestingSetup":{"navigatorTitle":[{"text":"TestingSetup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","url":"\/documentation\/hummingbirdtesting\/testingsetup","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Type of test framework"}],"title":"TestingSetup","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestingSetup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","type":"topic","title":"Hummingbird","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"abstract":[{"type":"text","text":"Test "},{"type":"codeVoice","code":"Application"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"TestingSetup","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV"},{"kind":"text","text":", ("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"TestClientProtocol","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"}],"title":"test(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestResponse":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdtesting\/testresponse","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse","abstract":[{"text":"Response structure returned by testing framework","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestResponse"}],"title":"TestResponse","navigatorTitle":[{"kind":"identifier","text":"TestResponse"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient":{"abstract":[{"type":"text","text":"Bare bones single connection HTTP client."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClient","kind":"identifier"}],"title":"TestClient","kind":"symbol","navigatorTitle":[{"text":"TestClient","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdtesting\/testclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"abstract":[{"type":"text","text":"Protocol for client used by HummingbirdTesting"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"identifier"}],"title":"TestClientProtocol","kind":"symbol","navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdtesting\/testclientprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","role":"symbol"},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","alt":null}}}