{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","hierarchy":{"paths":[[]]},"metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"externalID":"HummingbirdTesting","title":"HummingbirdTesting","symbolKind":"module","role":"collection","modules":[{"name":"HummingbirdTesting"}],"roleHeading":"Framework"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"anchor":"Related-Documentation"}],"variants":[{"paths":["\/documentation\/hummingbirdtesting"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","interfaceLanguage":"swift"},"topicSections":[{"title":"Test Setup","anchor":"Test-Setup","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"]},{"anchor":"Protocols","title":"Protocols","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol"]},{"generated":true,"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse"],"anchor":"Structures"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Provides methods for easy setup of unit tests using either the XCTest or Swift Testing frameworks.","type":"text"}]},{"level":3,"text":"Usage","anchor":"Usage","type":"heading"},{"inlineContent":[{"text":"Setup your server and run requests to the routes you want to test.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let router = Router()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = Application(router: router)","try await app.test(.router) { client in","    try await client.execute(uri: \"test\", method: .GET) { response in","        #expect(response.status == .ok)","        #expect(String(buffer: response.body) == \"testing\")","    }","}"]}]}],"references":{"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient":{"role":"symbol","abstract":[{"type":"text","text":"Bare bones single connection HTTP client."}],"url":"\/documentation\/hummingbirdtesting\/testclient","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestClient"}],"kind":"symbol","title":"TestClient","navigatorTitle":[{"text":"TestClient","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"abstract":[{"type":"text","text":"Protocol for client used by HummingbirdTesting"}],"kind":"symbol","title":"TestClientProtocol","navigatorTitle":[{"kind":"identifier","text":"TestClientProtocol"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestClientProtocol","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"title":"test(_:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","abstract":[{"text":"Test ","type":"text"},{"type":"codeVoice","code":"Application"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV","text":"TestingSetup"},{"text":", (","kind":"text"},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP","kind":"typeIdentifier","text":"TestClientProtocol"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","text":"Value"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","text":"Value"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestResponse":{"kind":"symbol","title":"TestResponse","navigatorTitle":[{"text":"TestResponse","kind":"identifier"}],"url":"\/documentation\/hummingbirdtesting\/testresponse","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestResponse"}],"role":"symbol","abstract":[{"text":"Response structure returned by testing framework","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"title":"HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme":{"kind":"symbol","abstract":[{"text":"HTTP Scheme to use with AsyncHTTPClient test framework","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","type":"topic","navigatorTitle":[{"text":"TestHTTPScheme","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestHTTPScheme"}],"title":"TestHTTPScheme","url":"\/documentation\/hummingbirdtesting\/testhttpscheme"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestingSetup":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestingSetup"}],"navigatorTitle":[{"kind":"identifier","text":"TestingSetup"}],"url":"\/documentation\/hummingbirdtesting\/testingsetup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","abstract":[{"type":"text","text":"Type of test framework"}],"kind":"symbol","title":"TestingSetup","role":"symbol"}}}