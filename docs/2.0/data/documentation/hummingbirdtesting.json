{"variants":[{"paths":["\/documentation\/hummingbirdtesting"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"externalID":"HummingbirdTesting","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","modules":[{"name":"HummingbirdTesting"}],"roleHeading":"Framework","title":"HummingbirdTesting","symbolKind":"module"},"kind":"symbol","sections":[],"topicSections":[{"anchor":"Test-Setup","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"],"title":"Test Setup"},{"anchor":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol"],"generated":true,"title":"Protocols"},{"anchor":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse"],"generated":true,"title":"Structures"}],"abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Provides methods for easy setup of unit tests using either the XCTest or Swift Testing frameworks.","type":"text"}]},{"anchor":"Usage","text":"Usage","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Setup your server and run requests to the routes you want to test.","type":"text"}]},{"code":["let router = Router()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = Application(router: router)","try await app.test(.router) { client in","    try await client.execute(uri: \"test\", method: .GET) { response in","        #expect(response.status == .ok)","        #expect(String(buffer: response.body) == \"testing\")","    }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient":{"title":"TestClient","url":"\/documentation\/hummingbirdtesting\/testclient","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestClient"}],"navigatorTitle":[{"kind":"identifier","text":"TestClient"}],"role":"symbol","abstract":[{"type":"text","text":"Bare bones single connection HTTP client."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"abstract":[{"text":"Test ","type":"text"},{"code":"Application","type":"codeVoice"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","role":"symbol","title":"test(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"preciseIdentifier":"s:18HummingbirdTesting0B5SetupV","kind":"typeIdentifier","text":"TestingSetup"},{"kind":"text","text":", ("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP","kind":"typeIdentifier","text":"TestClientProtocol"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","url":"\/documentation\/hummingbirdtesting\/testclientprotocol","abstract":[{"text":"Protocol for client used by HummingbirdTesting","type":"text"}],"kind":"symbol","type":"topic","title":"TestClientProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"identifier"}],"role":"symbol"},"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme":{"title":"TestHTTPScheme","url":"\/documentation\/hummingbirdtesting\/testhttpscheme","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestHTTPScheme","kind":"identifier"}],"navigatorTitle":[{"text":"TestHTTPScheme","kind":"identifier"}],"role":"symbol","abstract":[{"text":"HTTP Scheme to use with AsyncHTTPClient test framework","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdtesting","kind":"symbol","title":"HummingbirdTesting","type":"topic","role":"collection","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestingSetup":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestingSetup","kind":"identifier"}],"role":"symbol","title":"TestingSetup","kind":"symbol","navigatorTitle":[{"text":"TestingSetup","kind":"identifier"}],"abstract":[{"type":"text","text":"Type of test framework"}],"url":"\/documentation\/hummingbirdtesting\/testingsetup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestResponse":{"abstract":[{"text":"Response structure returned by testing framework","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestResponse"}],"type":"topic","kind":"symbol","title":"TestResponse","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse","url":"\/documentation\/hummingbirdtesting\/testresponse","navigatorTitle":[{"kind":"identifier","text":"TestResponse"}]}}}