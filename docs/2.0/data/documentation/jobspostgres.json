{"topicSections":[{"title":"Job Queue","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue"],"anchor":"Job-Queue"}],"metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"Framework","title":"JobsPostgres","role":"collection","externalID":"JobsPostgres","symbolKind":"module","modules":[{"name":"JobsPostgres"}]},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"JobsPostgres provides a Hummingbird Jobs Queue driver using "},{"type":"reference","identifier":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/","isActive":true},{"type":"text","text":" and the "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","isActive":true},{"type":"text","text":" library."}]},{"text":"Setup","type":"heading","anchor":"Setup","level":2},{"type":"paragraph","inlineContent":[{"text":"The Postgres job queue driver uses ","type":"text"},{"code":"PostgresClient","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"PostgresNIO","type":"codeVoice"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations","type":"reference"},{"text":" from the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","type":"reference"},{"text":" library to perform the database migrations needed for the driver.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Postgres job queue configuration includes two values."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pollTime"},{"type":"text","text":": This is the amount of time between the last time the queue was empty and the next time the driver starts looking for pending jobs."}]}]},{"content":[{"inlineContent":[{"code":"queueName","type":"codeVoice"},{"text":": Name of queue used to differentiate itself from other queues.","type":"text"}],"type":"paragraph"}]}]},{"code":["import JobsPostgres","import PostgresNIO","import ServiceLifecycle","","let postgresClient = PostgresClient(...)","let postgresMigrations = DatabaseMigrations()","let jobQueue = JobQueue(","    .postgres(","        client: postgresClient,","        migrations: postgresMigrations,","        configuration: .init(","            pollTime: .milliseconds(50),","            queueName: \"MyJobQueue\"","        ),","        logger: logger","    ), ","    numWorkers: 4, ","    logger: logger",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The easiest way to ensure the migrations are run is to use the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrationService","type":"reference"},{"text":" and add that as a ","type":"text"},{"code":"Service","type":"codeVoice"},{"text":" to your ","type":"text"},{"code":"ServiceGroup","type":"codeVoice"},{"text":". The job queue service will not run until the migrations have been run in either ","type":"text"},{"code":"dryRun","type":"codeVoice"},{"text":" mode or for real.","type":"text"}]},{"code":["let migrationService = DatabaseMigrationService(","    client: postgresClient,","    migrations: postgresMigrations,","    logger: logger,","    dryRun: false",")","let serviceGroup = ServiceGroup(","    configuration: .init(","        services: [postgresClient, migrationService, jobQueue],","        gracefulShutdownSignals: [.sigterm, .sigint],","        logger: jobQueue.queue.logger","    )",")","try await serviceGroup.run()"],"type":"codeListing","syntax":"swift"},{"text":"Additional Features","type":"heading","anchor":"Additional-Features","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are features specific to the Postgres Job Queue implementation. Some of these are available in other queues and others not."}]},{"text":"Push Options","type":"heading","anchor":"Push-Options","level":3},{"type":"paragraph","inlineContent":[{"text":"When pushing a job to the queue there are a couple of options you can provide.","type":"text"}]},{"text":"Delaying jobs","type":"heading","anchor":"Delaying-jobs","level":4},{"type":"paragraph","inlineContent":[{"type":"text","text":"As with all queue drivers you can add a delay before a job is processed. The job will sit in the pending queue and will not be available for processing until time has passed its delay until time."}]},{"code":["\/\/ Add TestJob to the queue, but don't process it for 2 minutes","try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))"],"type":"codeListing","syntax":"swift"},{"text":"Job Priority","type":"heading","anchor":"Job-Priority","level":4},{"type":"paragraph","inlineContent":[{"type":"text","text":"The postgres queue allows you to give a job a priority. Jobs with higher priorities are run before jobs with lower priorities. There are five priorities "},{"type":"codeVoice","code":".lowest"},{"type":"text","text":", "},{"type":"codeVoice","code":".lower"},{"type":"text","text":", "},{"type":"codeVoice","code":".normal"},{"type":"text","text":", "},{"type":"codeVoice","code":".higher"},{"type":"text","text":" and "},{"type":"codeVoice","code":".highest"},{"type":"text","text":"."}]},{"code":["\/\/ Add BackgroundJob to the queue. It will only get processed if there are no jobs","\/\/ with a higher priority on the queue.","try await jobQueue.push(BackgroundJob(), options: .init(priority: .lowest))"],"type":"codeListing","syntax":"swift"},{"text":"Cancellation","type":"heading","anchor":"Cancellation","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue"},{"type":"text","text":" conforms to protocol "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue"},{"type":"text","text":". This requires support for cancelling jobs that are in the pending queue. It adds one new function "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/cancel(jobID:)"},{"type":"text","text":". If you supply this function with the "},{"type":"codeVoice","code":"JobID"},{"type":"text","text":" returned by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)"},{"type":"text","text":" it will remove it from the pending queue."}]},{"code":["\/\/ Add TestJob to the queue and immediately cancel it","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.cancel(jobID: jobID)"],"type":"codeListing","syntax":"swift"},{"text":"Pause and Resume","type":"heading","anchor":"Pause-and-Resume","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","isActive":true},{"type":"text","text":" conforms to protocol "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue","isActive":true},{"type":"text","text":". This requires support for pausing and resuming jobs that are in the pending queue. It adds two new functions "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/pause(jobID:)","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/resume(jobID:)","isActive":true},{"type":"text","text":". If you supply these function with the "},{"type":"codeVoice","code":"JobID"},{"type":"text","text":" returned by "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)","isActive":true},{"type":"text","text":" you can remove from the pending queue and add them back in at a later date."}]},{"code":["\/\/ Add TestJob to the queue and immediately remove it and then add it back to the queue","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.pause(jobID: jobID)","try await jobQueue.resume(jobID: jobID)"],"type":"codeListing","syntax":"swift"}]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"],"anchor":"Related-Documentation"}],"hierarchy":{"paths":[[]]},"kind":"symbol","abstract":[{"text":"Postgres implementation for Hummingbird jobs framework","type":"text"}],"variants":[{"paths":["\/documentation\/jobspostgres"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"},"references":{"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations":{"kind":"symbol","title":"PostgresMigrations","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","abstract":[{"text":"Postgres database migration service","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","url":"\/documentation\/postgresmigrations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","title":"HummingbirdPostgres","role":"collection","url":"\/documentation\/hummingbirdpostgres","type":"topic","abstract":[{"type":"text","text":"Working with Postgres databases."}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"url":"\/documentation\/jobs","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","title":"Jobs","role":"collection","type":"topic"},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/resume(jobID:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/resume(jobID:)","title":"resume(jobID:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resume"},{"kind":"text","text":"("},{"kind":"externalParam","text":"jobID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa","kind":"typeIdentifier","text":"JobID"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue\/resume(jobid:)","kind":"symbol","abstract":[{"text":"Resume job","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","type":"topic","abstract":[{"type":"text","text":"Postgres Job queue implementation"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PostgresJobQueue"}],"navigatorTitle":[{"kind":"identifier","text":"PostgresJobQueue"}],"title":"PostgresJobQueue","url":"\/documentation\/jobspostgres\/postgresjobqueue"},"https://api.vapor.codes/postgresnio/documentation/postgresnio/":{"identifier":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/","url":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/","titleInlineContent":[{"text":"PostgresNIO","type":"text"}],"title":"PostgresNIO","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrations":{"url":"\/documentation\/postgresmigrations\/databasemigrations","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DatabaseMigrations","kind":"identifier"}],"navigatorTitle":[{"text":"DatabaseMigrations","kind":"identifier"}],"abstract":[{"text":"Database migration support","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations","kind":"symbol","title":"DatabaseMigrations","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrationService":{"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DatabaseMigrationService","kind":"identifier"}],"navigatorTitle":[{"text":"DatabaseMigrationService","kind":"identifier"}],"title":"DatabaseMigrationService","abstract":[{"type":"text","text":"Service that runs a database migration"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrationService","role":"symbol","url":"\/documentation\/postgresmigrations\/databasemigrationservice"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"url":"\/documentation\/jobsredis","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","title":"JobsRedis","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"kind":"symbol","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/cancel(jobID:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/cancel(jobID:)","title":"cancel(jobID:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JobID","kind":"typeIdentifier","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Cancel job"}],"url":"\/documentation\/jobspostgres\/postgresjobqueue\/cancel(jobid:)"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/pause(jobID:)":{"url":"\/documentation\/jobspostgres\/postgresjobqueue\/pause(jobid:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pause","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UUID","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials4UUIDV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"Pause job"}],"title":"pause(jobID:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/pause(jobID:)","kind":"symbol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}],"url":"\/documentation\/jobspostgres","images":[{"identifier":"logo.png","type":"icon"}],"title":"JobsPostgres","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/push(_:options:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)","title":"push(_:options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Parameters","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:4Jobs10JobRequestV","text":"JobRequest","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12JobsPostgres0B8JobQueueC4push_7options20FoundationEssentials4UUIDV0A00C7RequestVyxG_AC0C7OptionsVtYaKAI0C10ParametersRzlF0L0L_xmfp","text":"Parameters","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C7OptionsV","text":"JobOptions","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"JobID","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa"}],"role":"symbol","kind":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue\/push(_:options:)","abstract":[{"text":"Push Job onto queue","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/ResumableJobQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue","title":"ResumableJobQueue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResumableJobQueue"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResumableJobQueue"}],"url":"\/documentation\/jobs\/resumablejobqueue","type":"topic","abstract":[{"text":"Protocol for Job queue driver which implements resumable jobs","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/CancellableJobQueue":{"url":"\/documentation\/jobs\/cancellablejobqueue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancellableJobQueue"}],"navigatorTitle":[{"kind":"identifier","text":"CancellableJobQueue"}],"abstract":[{"text":"Protocol for Job queue driver which implement cancellable jobs","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue","title":"CancellableJobQueue","role":"symbol","type":"topic"}}}