{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[[]]},"topicSections":[{"anchor":"Job-Queue","title":"Job Queue","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue"]}],"abstract":[{"text":"Postgres implementation for Hummingbird jobs framework","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"JobsPostgres provides a Hummingbird Jobs Queue driver using ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/"},{"text":" and the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations"},{"text":" library.","type":"text"}]},{"text":"Setup","type":"heading","level":2,"anchor":"Setup"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Postgres job queue driver uses "},{"type":"codeVoice","code":"PostgresClient"},{"type":"text","text":" from "},{"type":"codeVoice","code":"PostgresNIO"},{"type":"text","text":" and "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations","isActive":true,"type":"reference"},{"type":"text","text":" from the "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","isActive":true,"type":"reference"},{"type":"text","text":" library to perform the database migrations needed for the driver."}]},{"type":"paragraph","inlineContent":[{"text":"The Postgres job queue configuration includes two values.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pollTime"},{"type":"text","text":": This is the amount of time between the last time the queue was empty and the next time the driver starts looking for pending jobs."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"queueName"},{"type":"text","text":": Name of queue used to differentiate itself from other queues."}]}]}]},{"syntax":"swift","code":["import JobsPostgres","import PostgresNIO","import ServiceLifecycle","","let postgresClient = PostgresClient(...)","let postgresMigrations = DatabaseMigrations()","let jobQueue = JobQueue(","    .postgres(","        client: postgresClient,","        migrations: postgresMigrations,","        configuration: .init(","            pollTime: .milliseconds(50),","            queueName: \"MyJobQueue\"","        ),","        logger: logger","    ), ","    numWorkers: 4, ","    logger: logger",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The easiest way to ensure the migrations are run is to use the "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrationService","type":"reference","isActive":true},{"type":"text","text":" and add that as a "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" to your "},{"code":"ServiceGroup","type":"codeVoice"},{"type":"text","text":". The job queue service will not run until the migrations have been run in either "},{"code":"dryRun","type":"codeVoice"},{"type":"text","text":" mode or for real."}]},{"syntax":"swift","code":["let migrationService = DatabaseMigrationService(","    client: postgresClient,","    migrations: postgresMigrations,","    logger: logger,","    dryRun: false",")","let serviceGroup = ServiceGroup(","    configuration: .init(","        services: [postgresClient, migrationService, jobQueue],","        gracefulShutdownSignals: [.sigterm, .sigint],","        logger: jobQueue.queue.logger","    )",")","try await serviceGroup.run()"],"type":"codeListing"},{"text":"Additional Features","type":"heading","level":2,"anchor":"Additional-Features"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are features specific to the Postgres Job Queue implementation. Some of these are available in other queues and others not."}]},{"text":"Push Options","type":"heading","level":3,"anchor":"Push-Options"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When pushing a job to the queue there are a couple of options you can provide."}]},{"text":"Delaying jobs","type":"heading","level":4,"anchor":"Delaying-jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As with all queue drivers you can add a delay before a job is processed. The job will sit in the pending queue and will not be available for processing until time has passed its delay until time."}]},{"syntax":"swift","code":["\/\/ Add TestJob to the queue, but don't process it for 2 minutes","try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))"],"type":"codeListing"},{"text":"Job Priority","type":"heading","level":4,"anchor":"Job-Priority"},{"type":"paragraph","inlineContent":[{"text":"The postgres queue allows you to give a job a priority. Jobs with higher priorities are run before jobs with lower priorities. There are five priorities ","type":"text"},{"code":".lowest","type":"codeVoice"},{"text":", ","type":"text"},{"code":".lower","type":"codeVoice"},{"text":", ","type":"text"},{"code":".normal","type":"codeVoice"},{"text":", ","type":"text"},{"code":".higher","type":"codeVoice"},{"text":" and ","type":"text"},{"code":".highest","type":"codeVoice"},{"text":".","type":"text"}]},{"syntax":"swift","code":["\/\/ Add BackgroundJob to the queue. It will only get processed if there are no jobs","\/\/ with a higher priority on the queue.","try await jobQueue.push(BackgroundJob(), options: .init(priority: .lowest))"],"type":"codeListing"},{"text":"Cancellation","type":"heading","level":3,"anchor":"Cancellation"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue"},{"text":" conforms to protocol ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue"},{"text":". This requires support for cancelling jobs that are in the pending queue. It adds one new function ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/cancel(jobID:)"},{"text":". If you supply this function with the ","type":"text"},{"type":"codeVoice","code":"JobID"},{"text":" returned by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)"},{"text":" it will remove it from the pending queue.","type":"text"}]},{"syntax":"swift","code":["\/\/ Add TestJob to the queue and immediately cancel it","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.cancel(jobID: jobID)"],"type":"codeListing"},{"text":"Pause and Resume","type":"heading","level":3,"anchor":"Pause-and-Resume"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue"},{"text":" conforms to protocol ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue"},{"text":". This requires support for pausing and resuming jobs that are in the pending queue. It adds two new functions ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/pause(jobID:)"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/resume(jobID:)"},{"text":". If you supply these function with the ","type":"text"},{"code":"JobID","type":"codeVoice"},{"text":" returned by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)"},{"text":" you can remove from the pending queue and add them back in at a later date.","type":"text"}]},{"syntax":"swift","code":["\/\/ Add TestJob to the queue and immediately remove it and then add it back to the queue","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.pause(jobID: jobID)","try await jobQueue.resume(jobID: jobID)"],"type":"codeListing"}]}],"metadata":{"externalID":"JobsPostgres","title":"JobsPostgres","modules":[{"name":"JobsPostgres"}],"roleHeading":"Framework","images":[{"identifier":"logo.png","type":"icon"}],"symbolKind":"module","role":"collection"},"variants":[{"paths":["\/documentation\/jobspostgres"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"]},{"generated":true,"anchor":"Reference","title":"Reference","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"},"references":{"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/push(_:options:)":{"abstract":[{"type":"text","text":"Push Job onto queue"}],"type":"topic","kind":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue\/push(_:options:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)","role":"symbol","title":"push(_:options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"push"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Parameters"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:4Jobs10JobRequestV","text":"JobRequest"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC4push_7options20FoundationEssentials4UUIDV0A00C7RequestVyxG_AC0C7OptionsVtYaKAI0C10ParametersRzlF0L0L_xmfp","text":"Parameters"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C7OptionsV","text":"JobOptions"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa","text":"JobID"}]},"https://api.vapor.codes/postgresnio/documentation/postgresnio/":{"identifier":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/","url":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/","titleInlineContent":[{"type":"text","text":"PostgresNIO"}],"title":"PostgresNIO","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations","role":"symbol","type":"topic","url":"\/documentation\/postgresmigrations\/databasemigrations","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DatabaseMigrations","kind":"identifier"}],"navigatorTitle":[{"text":"DatabaseMigrations","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Database migration support","type":"text"}],"title":"DatabaseMigrations"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/cancel(jobID:)":{"type":"topic","url":"\/documentation\/jobspostgres\/postgresjobqueue\/cancel(jobid:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa","text":"JobID","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"Cancel job"}],"title":"cancel(jobID:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/cancel(jobID:)"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/ResumableJobQueue":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResumableJobQueue","kind":"identifier"}],"abstract":[{"text":"Protocol for Job queue driver which implements resumable jobs","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ResumableJobQueue","kind":"identifier"}],"url":"\/documentation\/jobs\/resumablejobqueue","title":"ResumableJobQueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrationService":{"abstract":[{"text":"Service that runs a database migration","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DatabaseMigrationService","kind":"identifier"}],"type":"topic","kind":"symbol","title":"DatabaseMigrationService","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrationService","url":"\/documentation\/postgresmigrations\/databasemigrationservice","navigatorTitle":[{"text":"DatabaseMigrationService","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/pause(jobID:)":{"title":"pause(jobID:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pause","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UUID","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials4UUIDV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/jobspostgres\/postgresjobqueue\/pause(jobid:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/pause(jobID:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Pause job"}]},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations":{"role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","abstract":[{"type":"text","text":"Postgres database migration service"}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/postgresmigrations","title":"PostgresMigrations"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/jobs","kind":"symbol","type":"topic","title":"Jobs","role":"collection","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/CancellableJobQueue":{"abstract":[{"text":"Protocol for Job queue driver which implement cancellable jobs","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancellableJobQueue"}],"type":"topic","kind":"symbol","title":"CancellableJobQueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue","url":"\/documentation\/jobs\/cancellablejobqueue","navigatorTitle":[{"kind":"identifier","text":"CancellableJobQueue"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"abstract":[{"type":"text","text":"Working with Postgres databases."}],"title":"HummingbirdPostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","type":"topic","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdpostgres","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"JobsRedis","kind":"symbol","type":"topic","url":"\/documentation\/jobsredis","role":"collection","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PostgresJobQueue"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PostgresJobQueue"}],"abstract":[{"type":"text","text":"Postgres Job queue implementation"}],"title":"PostgresJobQueue","kind":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/resume(jobID:)":{"abstract":[{"text":"Resume job","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue\/resume(jobid:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/resume(jobID:)","role":"symbol","title":"resume(jobID:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resume"},{"kind":"text","text":"("},{"kind":"externalParam","text":"jobID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa","text":"JobID"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","title":"JobsPostgres","url":"\/documentation\/jobspostgres","abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}],"role":"collection"}}}