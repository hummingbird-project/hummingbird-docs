{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/jobspostgres"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"JobsPostgres provides a Hummingbird Jobs Queue driver using ","type":"text"},{"identifier":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/","isActive":true,"type":"reference"},{"type":"text","text":" and the "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","type":"reference","isActive":true},{"text":" library.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Setup","text":"Setup","type":"heading"},{"inlineContent":[{"type":"text","text":"The Postgres job queue driver uses "},{"type":"codeVoice","code":"PostgresClient"},{"text":" from ","type":"text"},{"code":"PostgresNIO","type":"codeVoice"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations","isActive":true,"type":"reference"},{"type":"text","text":" from the "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","isActive":true,"type":"reference"},{"text":" library to perform the database migrations needed for the driver.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Postgres job queue configuration includes two values."}]},{"items":[{"content":[{"inlineContent":[{"code":"pollTime","type":"codeVoice"},{"text":": This is the amount of time between the last time the queue was empty and the next time the driver starts looking for pending jobs.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"queueName"},{"type":"text","text":": Name of queue used to differentiate itself from other queues."}],"type":"paragraph"}]}],"type":"unorderedList"},{"code":["import JobsPostgres","import PostgresNIO","import ServiceLifecycle","","let postgresClient = PostgresClient(...)","let postgresMigrations = DatabaseMigrations()","let jobQueue = JobQueue(","    .postgres(","        client: postgresClient,","        migrations: postgresMigrations,","        configuration: .init(","            pollTime: .milliseconds(50),","            queueName: \"MyJobQueue\"","        ),","        logger: logger","    ), ","    numWorkers: 4, ","    logger: logger",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The easiest way to ensure the migrations are run is to use the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrationService"},{"type":"text","text":" and add that as a "},{"type":"codeVoice","code":"Service"},{"text":" to your ","type":"text"},{"code":"ServiceGroup","type":"codeVoice"},{"type":"text","text":". The job queue service will not run until the migrations have been run in either "},{"type":"codeVoice","code":"dryRun"},{"type":"text","text":" mode or for real."}]},{"code":["let migrationService = DatabaseMigrationService(","    client: postgresClient,","    migrations: postgresMigrations,","    logger: logger,","    dryRun: false",")","let serviceGroup = ServiceGroup(","    configuration: .init(","        services: [postgresClient, migrationService, jobQueue],","        gracefulShutdownSignals: [.sigterm, .sigint],","        logger: jobQueue.queue.logger","    )",")","try await serviceGroup.run()"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":2,"text":"Additional Features","anchor":"Additional-Features"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are features specific to the Postgres Job Queue implementation. Some of these are available in other queues and others not."}]},{"text":"Push Options","anchor":"Push-Options","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"When pushing a job to the queue there are a couple of options you can provide.","type":"text"}]},{"anchor":"Delaying-jobs","type":"heading","level":4,"text":"Delaying jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As with all queue drivers you can add a delay before a job is processed. The job will sit in the pending queue and will not be available for processing until time has passed its delay until time."}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Add TestJob to the queue, but don't process it for 2 minutes","try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))"]},{"text":"Job Priority","type":"heading","level":4,"anchor":"Job-Priority"},{"inlineContent":[{"text":"The postgres queue allows you to give a job a priority. Jobs with higher priorities are run before jobs with lower priorities. There are five priorities ","type":"text"},{"type":"codeVoice","code":".lowest"},{"type":"text","text":", "},{"type":"codeVoice","code":".lower"},{"type":"text","text":", "},{"code":".normal","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":".higher"},{"type":"text","text":" and "},{"code":".highest","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Add BackgroundJob to the queue. It will only get processed if there are no jobs","\/\/ with a higher priority on the queue.","try await jobQueue.push(BackgroundJob(), options: .init(priority: .lowest))"]},{"anchor":"Cancellation","level":3,"type":"heading","text":"Cancellation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","isActive":true,"type":"reference"},{"type":"text","text":" conforms to protocol "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue","isActive":true,"type":"reference"},{"type":"text","text":". This requires support for cancelling jobs that are in the pending queue. It adds one new function "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/cancel(jobID:)","type":"reference"},{"type":"text","text":". If you supply this function with the "},{"type":"codeVoice","code":"JobID"},{"type":"text","text":" returned by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)"},{"text":" it will remove it from the pending queue.","type":"text"}]},{"code":["\/\/ Add TestJob to the queue and immediately cancel it","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.cancel(jobID: jobID)"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Pause and Resume","anchor":"Pause-and-Resume","level":3},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","isActive":true},{"type":"text","text":" conforms to protocol "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue"},{"text":". This requires support for pausing and resuming jobs that are in the pending queue. It adds two new functions ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/pause(jobID:)","type":"reference","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/resume(jobID:)","type":"reference","isActive":true},{"text":". If you supply these function with the ","type":"text"},{"code":"JobID","type":"codeVoice"},{"text":" returned by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)","type":"reference"},{"text":" you can remove from the pending queue and add them back in at a later date.","type":"text"}]},{"code":["\/\/ Add TestJob to the queue and immediately remove it and then add it back to the queue","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.pause(jobID: jobID)","try await jobQueue.resume(jobID: jobID)"],"syntax":"swift","type":"codeListing"}]}],"topicSections":[{"title":"Job Queue","anchor":"Job-Queue","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue"]}],"seeAlsoSections":[{"anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"],"title":"Related Documentation"}],"hierarchy":{"paths":[[]]},"metadata":{"title":"JobsPostgres","images":[{"identifier":"logo.png","type":"icon"}],"symbolKind":"module","modules":[{"name":"JobsPostgres"}],"externalID":"JobsPostgres","roleHeading":"Framework","role":"collection"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"},"abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","title":"Jobs","kind":"symbol","url":"\/documentation\/jobs","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/push(_:options:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)","abstract":[{"text":"Push Job onto queue","type":"text"}],"role":"symbol","title":"push(_:options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Parameters","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"JobRequest","kind":"typeIdentifier","preciseIdentifier":"s:4Jobs10JobRequestV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Parameters","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC4push_7options20FoundationEssentials4UUIDV0A00C7RequestVyxG_AC0C7OptionsVtYaKAI0C10ParametersRzlF0L0L_xmfp"},{"text":">, ","kind":"text"},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C7OptionsV","kind":"typeIdentifier","text":"JobOptions"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"JobID","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/jobspostgres\/postgresjobqueue\/push(_:options:)"},"https://api.vapor.codes/postgresnio/documentation/postgresnio/":{"identifier":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/","url":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/","type":"link","title":"PostgresNIO","titleInlineContent":[{"type":"text","text":"PostgresNIO"}]},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrationService":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrationService","type":"topic","navigatorTitle":[{"text":"DatabaseMigrationService","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DatabaseMigrationService","kind":"identifier"}],"title":"DatabaseMigrationService","abstract":[{"type":"text","text":"Service that runs a database migration"}],"url":"\/documentation\/postgresmigrations\/databasemigrationservice"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"PostgresJobQueue","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PostgresJobQueue"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","url":"\/documentation\/jobspostgres\/postgresjobqueue","title":"PostgresJobQueue","abstract":[{"text":"Postgres Job queue implementation","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations":{"kind":"symbol","url":"\/documentation\/postgresmigrations","title":"PostgresMigrations","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","type":"topic","abstract":[{"text":"Postgres database migration service","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/CancellableJobQueue":{"navigatorTitle":[{"kind":"identifier","text":"CancellableJobQueue"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue","abstract":[{"type":"text","text":"Protocol for Job queue driver which implement cancellable jobs"}],"type":"topic","role":"symbol","title":"CancellableJobQueue","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"CancellableJobQueue","kind":"identifier"}],"url":"\/documentation\/jobs\/cancellablejobqueue","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrations":{"title":"DatabaseMigrations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseMigrations"}],"url":"\/documentation\/postgresmigrations\/databasemigrations","type":"topic","role":"symbol","navigatorTitle":[{"text":"DatabaseMigrations","kind":"identifier"}],"abstract":[{"text":"Database migration support","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","url":"\/documentation\/jobspostgres","title":"JobsPostgres","abstract":[{"text":"Postgres implementation for Hummingbird jobs framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/cancel(jobID:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cancel","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"jobID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa","kind":"typeIdentifier","text":"JobID"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"Cancel job"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/cancel(jobID:)","role":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue\/cancel(jobid:)","title":"cancel(jobID:)"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/pause(jobID:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/pause(jobID:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pause"},{"kind":"text","text":"("},{"kind":"externalParam","text":"jobID"},{"text":": ","kind":"text"},{"text":"UUID","preciseIdentifier":"s:20FoundationEssentials4UUIDV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"pause(jobID:)","url":"\/documentation\/jobspostgres\/postgresjobqueue\/pause(jobid:)","type":"topic","kind":"symbol","abstract":[{"text":"Pause job","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"title":"JobsRedis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","kind":"symbol","url":"\/documentation\/jobsredis","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"collection","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/resume(jobID:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"resume"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JobID","kind":"typeIdentifier","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Resume job","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/resume(jobID:)","kind":"symbol","title":"resume(jobID:)","role":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue\/resume(jobid:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","type":"topic","kind":"symbol","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/ResumableJobQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue","role":"symbol","abstract":[{"text":"Protocol for Job queue driver which implements resumable jobs","type":"text"}],"title":"ResumableJobQueue","navigatorTitle":[{"text":"ResumableJobQueue","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResumableJobQueue"}],"url":"\/documentation\/jobs\/resumablejobqueue","kind":"symbol"},"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","alt":null}}}