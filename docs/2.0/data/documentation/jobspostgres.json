{"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue"],"title":"Job Queue","anchor":"Job-Queue"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","interfaceLanguage":"swift"},"abstract":[{"text":"Postgres implementation for Hummingbird jobs framework","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"],"title":"Related Documentation","anchor":"Related-Documentation"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"],"title":"Reference","anchor":"Reference"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/jobspostgres"]}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"JobsPostgres provides a Hummingbird Jobs Queue driver using "},{"type":"reference","identifier":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/","isActive":true},{"type":"text","text":" and the "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","isActive":true},{"type":"text","text":" library."}]},{"level":2,"type":"heading","anchor":"Setup","text":"Setup"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Postgres job queue driver uses "},{"type":"codeVoice","code":"PostgresClient"},{"type":"text","text":" from "},{"type":"codeVoice","code":"PostgresNIO"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations","isActive":true},{"type":"text","text":" from the "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","isActive":true},{"type":"text","text":" library to perform the database migrations needed for the driver."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Postgres job queue configuration includes two values."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pollTime"},{"text":": This is the amount of time between the last time the queue was empty and the next time the driver starts looking for pending jobs.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"queueName"},{"type":"text","text":": Name of queue used to differentiate itself from other queues."}]}]}]},{"type":"codeListing","syntax":"swift","code":["import JobsPostgres","import PostgresNIO","import ServiceLifecycle","","let postgresClient = PostgresClient(...)","let postgresMigrations = DatabaseMigrations()","let jobQueue = JobQueue(","    .postgres(","        client: postgresClient,","        migrations: postgresMigrations,","        configuration: .init(","            pollTime: .milliseconds(50),","            queueName: \"MyJobQueue\"","        ),","        logger: logger","    ), ","    numWorkers: 4, ","    logger: logger",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The easiest way to ensure the migrations are run is to use the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrationService"},{"type":"text","text":" and add that as a "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" to your "},{"code":"ServiceGroup","type":"codeVoice"},{"type":"text","text":". The job queue service will not run until the migrations have been run in either "},{"code":"dryRun","type":"codeVoice"},{"type":"text","text":" mode or for real."}]},{"type":"codeListing","syntax":"swift","code":["let migrationService = DatabaseMigrationService(","    client: postgresClient,","    migrations: postgresMigrations,","    logger: logger,","    dryRun: false",")","let serviceGroup = ServiceGroup(","    configuration: .init(","        services: [postgresClient, migrationService, jobQueue],","        gracefulShutdownSignals: [.sigterm, .sigint],","        logger: jobQueue.queue.logger","    )",")","try await serviceGroup.run()"]},{"level":2,"type":"heading","anchor":"Additional-Features","text":"Additional Features"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are features specific to the Postgres Job Queue implementation. Some of these are available in other queues and others not."}]},{"level":3,"type":"heading","anchor":"Push-Options","text":"Push Options"},{"type":"paragraph","inlineContent":[{"text":"When pushing a job to the queue there are a couple of options you can provide.","type":"text"}]},{"level":4,"type":"heading","anchor":"Delaying-jobs","text":"Delaying jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As with all queue drivers you can add a delay before a job is processed. The job will sit in the pending queue and will not be available for processing until time has passed its delay until time."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Add TestJob to the queue, but don't process it for 2 minutes","try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))"]},{"level":4,"type":"heading","anchor":"Job-Priority","text":"Job Priority"},{"type":"paragraph","inlineContent":[{"text":"The postgres queue allows you to give a job a priority. Jobs with higher priorities are run before jobs with lower priorities. There are five priorities ","type":"text"},{"code":".lowest","type":"codeVoice"},{"text":", ","type":"text"},{"code":".lower","type":"codeVoice"},{"text":", ","type":"text"},{"code":".normal","type":"codeVoice"},{"text":", ","type":"text"},{"code":".higher","type":"codeVoice"},{"text":" and ","type":"text"},{"code":".highest","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Add BackgroundJob to the queue. It will only get processed if there are no jobs","\/\/ with a higher priority on the queue.","try await jobQueue.push(BackgroundJob(), options: .init(priority: .lowest))"]},{"level":3,"type":"heading","anchor":"Cancellation","text":"Cancellation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue"},{"type":"text","text":" conforms to protocol "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue"},{"type":"text","text":". This requires support for cancelling jobs that are in the pending queue. It adds one new function "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/cancel(jobID:)"},{"type":"text","text":". If you supply this function with the "},{"code":"JobID","type":"codeVoice"},{"type":"text","text":" returned by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)"},{"type":"text","text":" it will remove it from the pending queue."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Add TestJob to the queue and immediately cancel it","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.cancel(jobID: jobID)"]},{"level":3,"type":"heading","anchor":"Pause-and-Resume","text":"Pause and Resume"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","type":"reference","isActive":true},{"type":"text","text":" conforms to protocol "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue","type":"reference","isActive":true},{"type":"text","text":". This requires support for pausing and resuming jobs that are in the pending queue. It adds two new functions "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/pause(jobID:)","type":"reference","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/resume(jobID:)","type":"reference","isActive":true},{"type":"text","text":". If you supply these function with the "},{"type":"codeVoice","code":"JobID"},{"type":"text","text":" returned by "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)","type":"reference","isActive":true},{"type":"text","text":" you can remove from the pending queue and add them back in at a later date."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Add TestJob to the queue and immediately remove it and then add it back to the queue","let jobID = try await jobQueue.push(TestJob(), options: .init(delayUntil: .now + 120))","try await jobQueue.pause(jobID: jobID)","try await jobQueue.resume(jobID: jobID)"]}]}],"kind":"symbol","metadata":{"symbolKind":"module","images":[{"type":"icon","identifier":"logo.png"}],"title":"JobsPostgres","roleHeading":"Framework","modules":[{"name":"JobsPostgres"}],"externalID":"JobsPostgres","role":"collection"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/cancel(jobID:)":{"abstract":[{"text":"Cancel job","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/cancel(jobID:)","url":"\/documentation\/jobspostgres\/postgresjobqueue\/cancel(jobid:)","title":"cancel(jobID:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa","text":"JobID","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"type":"topic","abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}],"title":"JobsPostgres","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","url":"\/documentation\/jobspostgres","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrationService":{"abstract":[{"text":"Service that runs a database migration","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrationService","url":"\/documentation\/postgresmigrations\/databasemigrationservice","navigatorTitle":[{"kind":"identifier","text":"DatabaseMigrationService"}],"title":"DatabaseMigrationService","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseMigrationService"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/pause(jobID:)":{"type":"topic","url":"\/documentation\/jobspostgres\/postgresjobqueue\/pause(jobid:)","kind":"symbol","title":"pause(jobID:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pause","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:20FoundationEssentials4UUIDV","kind":"typeIdentifier","text":"UUID"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"text":"Pause job","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/pause(jobID:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","url":"\/documentation\/jobsredis","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"role":"collection","title":"JobsRedis","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"type":"topic","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","url":"\/documentation\/jobs","title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/push(_:options:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Parameters","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"JobRequest","kind":"typeIdentifier","preciseIdentifier":"s:4Jobs10JobRequestV"},{"text":"<","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC4push_7options20FoundationEssentials4UUIDV0A00C7RequestVyxG_AC0C7OptionsVtYaKAI0C10ParametersRzlF0L0L_xmfp"},{"text":">, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JobOptions","kind":"typeIdentifier","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C7OptionsV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"JobID","kind":"typeIdentifier","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa"}],"abstract":[{"text":"Push Job onto queue","type":"text"}],"type":"topic","url":"\/documentation\/jobspostgres\/postgresjobqueue\/push(_:options:)","kind":"symbol","title":"push(_:options:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/push(_:options:)"},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations/DatabaseMigrations":{"abstract":[{"type":"text","text":"Database migration support"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations\/DatabaseMigrations","url":"\/documentation\/postgresmigrations\/databasemigrations","navigatorTitle":[{"text":"DatabaseMigrations","kind":"identifier"}],"title":"DatabaseMigrations","type":"topic","role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DatabaseMigrations","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue/resume(jobID:)":{"abstract":[{"text":"Resume job","type":"text"}],"kind":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue\/resume(jobid:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue\/resume(jobID:)","title":"resume(jobID:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resume","kind":"identifier"},{"text":"(","kind":"text"},{"text":"jobID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JobID","preciseIdentifier":"s:12JobsPostgres0B8JobQueueC0C2IDa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"role":"symbol","type":"topic","title":"PostgresJobQueue","url":"\/documentation\/jobspostgres\/postgresjobqueue","navigatorTitle":[{"kind":"identifier","text":"PostgresJobQueue"}],"abstract":[{"type":"text","text":"Postgres Job queue implementation"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PostgresJobQueue"}]},"https://api.vapor.codes/postgresnio/documentation/postgresnio/":{"url":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/","type":"link","identifier":"https:\/\/api.vapor.codes\/postgresnio\/documentation\/postgresnio\/","titleInlineContent":[{"text":"PostgresNIO","type":"text"}],"title":"PostgresNIO"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/CancellableJobQueue":{"abstract":[{"type":"text","text":"Protocol for Job queue driver which implement cancellable jobs"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/CancellableJobQueue","url":"\/documentation\/jobs\/cancellablejobqueue","navigatorTitle":[{"kind":"identifier","text":"CancellableJobQueue"}],"title":"CancellableJobQueue","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancellableJobQueue"}]},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/PostgresMigrations":{"abstract":[{"type":"text","text":"Postgres database migration service"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/PostgresMigrations","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","url":"\/documentation\/postgresmigrations","title":"PostgresMigrations"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/ResumableJobQueue":{"type":"topic","url":"\/documentation\/jobs\/resumablejobqueue","kind":"symbol","title":"ResumableJobQueue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResumableJobQueue"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/ResumableJobQueue","abstract":[{"type":"text","text":"Protocol for Job queue driver which implements resumable jobs"}],"navigatorTitle":[{"kind":"identifier","text":"ResumableJobQueue"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","url":"\/documentation\/hummingbirdpostgres","kind":"symbol","title":"HummingbirdPostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","abstract":[{"type":"text","text":"Working with Postgres databases."}],"role":"collection"}}}