{"abstract":[{"text":"Middleware for decompressing request bodies","type":"text"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"sections":[],"kind":"symbol","metadata":{"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestDecompressionMiddleware"}],"title":"RequestDecompressionMiddleware","role":"symbol","modules":[{"name":"HummingbirdCompression"}],"symbolKind":"struct","externalID":"s:22HummingbirdCompression30RequestDecompressionMiddlewareV","navigatorTitle":[{"kind":"identifier","text":"RequestDecompressionMiddleware"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware\/init(windowSize:)"],"title":"Initializers"},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware\/handle(_:context:next:)"],"title":"Instance Methods"}],"variants":[{"paths":["\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestDecompressionMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"If the content-encoding header is set to gzip or deflate then the middleware will attempt"},{"type":"text","text":" "},{"type":"text","text":"to decompress the contents of the request body and pass that down the middleware chain."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware/init(windowSize:)":{"kind":"symbol","url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware\/init(windowsize:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Initialize RequestDecompressionMiddleware"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"windowSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware\/init(windowSize:)","title":"init(windowSize:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"role":"collection","abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","url":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware":{"kind":"symbol","abstract":[{"text":"Middleware for decompressing request bodies","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestDecompressionMiddleware"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","navigatorTitle":[{"kind":"identifier","text":"RequestDecompressionMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","title":"RequestDecompressionMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"kind":"symbol","abstract":[{"text":"Version of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"reference"},{"text":" whose Input is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"text":" and output is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/routermiddleware","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","title":"RouterMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"title":"Request","role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Request","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}]},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"navigatorTitle":[{"kind":"identifier","text":"Response"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"title":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","url":"\/documentation\/hummingbirdcore\/response","type":"topic","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware/handle(_:context:next:)":{"abstract":[],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware\/handle(_:context:next:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22HummingbirdCompression30RequestDecompressionMiddlewareV7Contextxmfp","text":"Context"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22HummingbirdCompression30RequestDecompressionMiddlewareV7Contextxmfp","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response"}],"kind":"symbol","title":"handle(_:context:next:)","url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware\/handle(_:context:next:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestContext"}],"title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","url":"\/documentation\/hummingbird\/requestcontext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"type":"topic","role":"symbol"}}}