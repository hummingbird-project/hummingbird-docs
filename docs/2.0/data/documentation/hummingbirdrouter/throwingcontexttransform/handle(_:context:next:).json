{"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Process HTTP request and return an HTTP response"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Input","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform\/Input","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV5Inputa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV0D0xmfp"},{"kind":"text","text":", "},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Input","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform\/Input","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV5Inputa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV0D0xmfp","text":"Context"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform\/Output","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV6Outputa","text":"Output","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Output","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform\/Output","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV6Outputa","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Request"}]}],"name":"input"},{"content":[{"inlineContent":[{"text":"Request context","type":"text"}],"type":"paragraph"}],"name":"context"},{"name":"next","content":[{"inlineContent":[{"type":"text","text":"Next middleware to run, if no route handler is found"}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"Response","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform\/handle(_:context:next:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"method","modules":[{"name":"HummingbirdRouter"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:17HummingbirdRouter24ThrowingContextTransformV6handle_7context4next0A4Core8ResponseVAG7RequestV_xAiK_xtYaKXEtYaKF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"text":"Input","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV5Inputa"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV0D0xmfp","kind":"typeIdentifier","text":"Context"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV5Inputa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV0D0xmfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Output","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV6Outputa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV6Outputa"}],"title":"handle(_:context:next:)"},"variants":[{"paths":["\/documentation\/hummingbirdrouter\/throwingcontexttransform\/handle(_:context:next:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ThrowingContextTransform/Output":{"kind":"symbol","title":"ThrowingContextTransform.Output","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform\/Output","url":"\/documentation\/hummingbirdrouter\/throwingcontexttransform\/output","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Output","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Output"}],"role":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"title":"HummingbirdRouter","url":"\/documentation\/hummingbirdrouter","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ThrowingContextTransform":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingContextTransform"}],"url":"\/documentation\/hummingbirdrouter\/throwingcontexttransform","abstract":[{"type":"text","text":"Router middleware that transforms the "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"reference"},{"text":" and uses it with the contained","type":"text"},{"type":"text","text":" "},{"text":"Middleware chain. Used by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup\/init(_:context:builder:)","type":"reference"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"ThrowingContextTransform","kind":"identifier"}],"title":"ThrowingContextTransform","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"type":"topic","title":"RequestContext","role":"symbol","url":"\/documentation\/hummingbird\/requestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ThrowingContextTransform/handle(_:context:next:)":{"title":"handle(_:context:next:)","url":"\/documentation\/hummingbirdrouter\/throwingcontexttransform\/handle(_:context:next:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform\/handle(_:context:next:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV5Inputa","text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV0D0xmfp","text":"Context"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Input","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV5Inputa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV0D0xmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV6Outputa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter24ThrowingContextTransformV6Outputa","text":"Output"}],"abstract":[{"type":"text","text":"Process HTTP request and return an HTTP response"}]},"logo.png":{"alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouteGroup/init(_:context:builder:)":{"url":"\/documentation\/hummingbirdrouter\/routegroup\/init(_:context:builder:)","kind":"symbol","abstract":[{"text":"Create RouteGroup from RequestContext transform and result builder","type":"text"}],"role":"symbol","title":"init(_:context:builder:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup\/init(_:context:builder:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ChildHandler","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"ChildContext","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdRouter10RouteGroupV_7context7builderACyxAA24ThrowingContextTransformVyxqd_0_qd__GG0A00B4PathV_qd_0_mqd__yXEtc06ParentH0AJ012ChildRequestH0PQyd_0_RszAHRs_AJ18MiddlewareProtocolRd__AjNRd_0_AA0bmH0Rd_0_0H0Qyd__Rsd_0_0A4Core0M0V5InputRtd__AU8ResponseV6OutputRtd__r0_lufc0lH0L_qd_0_mfp","text":"ChildContext","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"builder","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ChildHandler","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter10RouteGroupV_7context7builderACyxAA24ThrowingContextTransformVyxqd_0_qd__GG0A00B4PathV_qd_0_mqd__yXEtc06ParentH0AJ012ChildRequestH0PQyd_0_RszAHRs_AJ18MiddlewareProtocolRd__AjNRd_0_AA0bmH0Rd_0_0H0Qyd__Rsd_0_0A4Core0M0V5InputRtd__AU8ResponseV6OutputRtd__r0_lufc0L7HandlerL_qd__mfp"},{"kind":"text","text":")"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ThrowingContextTransform/Input":{"kind":"symbol","title":"ThrowingContextTransform.Input","url":"\/documentation\/hummingbirdrouter\/throwingcontexttransform\/input","type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform\/Input","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Input"}],"navigatorTitle":[{"kind":"identifier","text":"Input"}]}}}