{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/requestDecoder","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"}],"externalID":"s:11Hummingbird14RequestContextPAA20FoundationEssentials11JSONDecoderC7DecoderRtzrlE07requestG0AFvp::SYNTHESIZED::s:17HummingbirdRouter05BasicB14RequestContextV","symbolKind":"property","extendedModule":"Hummingbird","roleHeading":"Instance Property","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Decoder"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"JSONDecoder"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"modules":[{"name":"HummingbirdRouter","relatedModules":["Hummingbird"]}],"title":"requestDecoder","role":"symbol"},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RequestContext.requestDecoder","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/requestdecoder"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"type":"topic","title":"BasicRouterRequestContext","navigatorTitle":[{"text":"BasicRouterRequestContext","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRouterRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","abstract":[{"type":"text","text":"Basic implementation of a context that can be used with `RouterBuilder``"}],"kind":"symbol"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdrouter","role":"collection","title":"HummingbirdRouter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext/requestDecoder":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/requestDecoder","title":"requestDecoder","kind":"symbol","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/requestdecoder","abstract":[],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Decoder","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}]}}}}