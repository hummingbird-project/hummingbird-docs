{"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC","kind":"typeIdentifier","text":"JSONDecoder"}],"externalID":"s:11Hummingbird14RequestContextPAA20FoundationEssentials11JSONDecoderC7DecoderRtzrlE07requestG0AFvp::SYNTHESIZED::s:17HummingbirdRouter05BasicB14RequestContextV","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdRouter"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Decoder","type":"codeVoice"},{"type":"text","text":" is "},{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Instance Property","title":"requestDecoder","extendedModule":"Hummingbird","role":"symbol","symbolKind":"property"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/requestDecoder","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RequestContext.requestDecoder"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/requestdecoder"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"role":"symbol","abstract":[{"type":"text","text":"Basic implementation of a context that can be used with `RouterBuilder``"}],"title":"BasicRouterRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRouterRequestContext"}],"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BasicRouterRequestContext"}]},"logo.png":{"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"title":"HummingbirdRouter","url":"\/documentation\/hummingbirdrouter","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext/requestDecoder":{"role":"symbol","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/requestdecoder","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/requestDecoder","kind":"symbol","conformance":{"constraints":[{"code":"Decoder","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC"}],"title":"requestDecoder"}}}