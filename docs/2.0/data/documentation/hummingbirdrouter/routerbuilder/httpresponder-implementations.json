{"topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)"],"anchor":"Instance-Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/HTTPResponder-Implementations"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","metadata":{"roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"HummingbirdRouter"}],"title":"HTTPResponder Implementations"},"sections":[],"references":{"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/respond(to:context:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)","kind":"symbol","abstract":[],"title":"respond(to:context:)","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Context"},{"text":" conforms to ","type":"text"},{"code":"RouterRequestContext","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Context","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Handler.Context","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Handler","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"MiddlewareProtocol","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Handler.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Handler.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"respond"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa"}],"url":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder","url":"\/documentation\/hummingbirdrouter\/routerbuilder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterBuilder","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"RouterBuilder","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Router built using a result builder"}],"kind":"symbol","title":"RouterBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","url":"\/documentation\/hummingbirdrouter","type":"topic","role":"collection","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdRouter"}}}