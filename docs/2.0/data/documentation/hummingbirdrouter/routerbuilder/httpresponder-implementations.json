{"sections":[],"kind":"article","metadata":{"modules":[{"name":"HummingbirdRouter"}],"roleHeading":"API Collection","role":"collectionGroup","title":"HTTPResponder Implementations"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/HTTPResponder-Implementations"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/respond(to:context:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Context","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"RouterRequestContext","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Context"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Handler.Context"},{"type":"text","text":", "},{"code":"Handler","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"MiddlewareProtocol"},{"text":", ","type":"text"},{"code":"Handler.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Request","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Handler.Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"title":"respond(to:context:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Input","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa","kind":"typeIdentifier","text":"Output"}],"url":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"title":"HummingbirdRouter","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","role":"collection","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdrouter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder":{"role":"symbol","abstract":[{"type":"text","text":"Router built using a result builder"}],"url":"\/documentation\/hummingbirdrouter\/routerbuilder","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterBuilder","kind":"identifier"}],"kind":"symbol","title":"RouterBuilder","navigatorTitle":[{"text":"RouterBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder"}}}