{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/HTTPResponder-Implementations","interfaceLanguage":"swift"},"metadata":{"role":"collectionGroup","title":"HTTPResponder Implementations","modules":[{"name":"HummingbirdRouter"}],"roleHeading":"API Collection"},"kind":"article","topicSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)"],"anchor":"Instance-Methods","title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/respond(to:context:)":{"title":"respond(to:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)","abstract":[],"kind":"symbol","role":"symbol","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Context"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RouterRequestContext"},{"type":"text","text":", "},{"code":"Context","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Handler.Context"},{"text":", ","type":"text"},{"code":"Handler","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"MiddlewareProtocol"},{"type":"text","text":", "},{"code":"Handler.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Handler.Output"},{"type":"text","text":" is "},{"code":"Response","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"respond","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Input","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa","text":"Output","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder":{"title":"RouterBuilder","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdrouter\/routerbuilder","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RouterBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"Router built using a result builder"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder","navigatorTitle":[{"kind":"identifier","text":"RouterBuilder"}]},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"title":"HummingbirdRouter","url":"\/documentation\/hummingbirdrouter"}}}