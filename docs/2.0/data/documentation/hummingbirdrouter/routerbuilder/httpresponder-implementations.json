{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/HTTPResponder-Implementations"},"topicSections":[{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)"],"anchor":"Instance-Methods"}],"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"API Collection","title":"HTTPResponder Implementations","modules":[{"name":"HummingbirdRouter"}],"role":"collectionGroup"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterBuilder","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterBuilder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder","title":"RouterBuilder","url":"\/documentation\/hummingbirdrouter\/routerbuilder","abstract":[{"type":"text","text":"Router built using a result builder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/respond(to:context:)":{"abstract":[],"url":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)","title":"respond(to:context:)","conformance":{"constraints":[{"type":"codeVoice","code":"Context"},{"text":" conforms to ","type":"text"},{"code":"RouterRequestContext","type":"codeVoice"},{"type":"text","text":", "},{"code":"Context","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Handler.Context"},{"type":"text","text":", "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" conforms to "},{"code":"MiddlewareProtocol","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Handler.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Request"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Handler.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Input","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"kind":"symbol","url":"\/documentation\/hummingbirdrouter","title":"HummingbirdRouter","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","type":"topic","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}]},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"identifier":"logo.png","type":"image"}}}