{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)","interfaceLanguage":"swift"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"HTTPResponder.respond(to:context:)","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"request","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/Input","text":"Input","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/Output","text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"HummingbirdRouter"}],"symbolKind":"method","externalID":"s:17HummingbirdRouter0B7BuilderV7respond2to7context0A4Core8ResponseVAG7RequestV_xtYaKF","title":"respond(to:context:)","role":"symbol","roleHeading":"Instance Method","extendedModule":"HummingbirdRouter","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Context"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RouterRequestContext"},{"type":"text","text":", "},{"type":"codeVoice","code":"Context"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Handler.Context"},{"type":"text","text":", "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MiddlewareProtocol"},{"type":"text","text":", "},{"type":"codeVoice","code":"Handler.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Request"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Handler.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Input","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa","kind":"typeIdentifier"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/respond(to:context:)":{"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)","kind":"symbol","url":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"respond"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa","text":"Output"}],"title":"respond(to:context:)","type":"topic","conformance":{"constraints":[{"code":"Context","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RouterRequestContext","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Context","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Handler.Context","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Handler","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"MiddlewareProtocol","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Handler.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Handler.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"logo.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/Output":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/Output","url":"\/documentation\/hummingbirdrouter\/routerbuilder\/output","navigatorTitle":[{"text":"Output","kind":"identifier"}],"type":"topic","title":"RouterBuilder.Output","kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder":{"abstract":[{"type":"text","text":"Router built using a result builder"}],"navigatorTitle":[{"text":"RouterBuilder","kind":"identifier"}],"url":"\/documentation\/hummingbirdrouter\/routerbuilder","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterBuilder","kind":"identifier"}],"title":"RouterBuilder","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"title":"HummingbirdRouter","url":"\/documentation\/hummingbirdrouter","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/Input":{"abstract":[],"navigatorTitle":[{"text":"Input","kind":"identifier"}],"url":"\/documentation\/hummingbirdrouter\/routerbuilder\/input","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/Input","kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}],"title":"RouterBuilder.Input","type":"topic"}}}