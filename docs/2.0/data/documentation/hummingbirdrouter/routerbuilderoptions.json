{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/init(rawValue:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/rawValue"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/caseInsensitive"],"generated":true,"title":"Type Properties","anchor":"Type-Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/OptionSet-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/SetAlgebra-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterBuilderOptions","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","title":"RouterBuilderOptions","navigatorTitle":[{"text":"RouterBuilderOptions","kind":"identifier"}],"externalID":"s:17HummingbirdRouter0B14BuilderOptionsV","modules":[{"name":"HummingbirdRouter"}]},"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","doc:\/\/com.opticalaberration.hummingbird\/SY","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterBuilderOptions"}]}],"kind":"declarations"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter"]]},"abstract":[{"text":"Router Options","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdrouter\/routerbuilderoptions"]}],"references":{"doc://com.opticalaberration.hummingbird/s10SetAlgebraP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP","title":"Swift.SetAlgebra","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilderOptions/rawValue":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"title":"rawValue","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/rawValue","type":"topic","url":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/rawvalue"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/s9OptionSetP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","type":"unresolvable","title":"Swift.OptionSet"},"doc://com.opticalaberration.hummingbird/SQ":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/s25ExpressibleByArrayLiteralP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilderOptions/SetAlgebra-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/SetAlgebra-Implementations","title":"SetAlgebra Implementations","abstract":[],"url":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/setalgebra-implementations","kind":"article","type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/SY":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"type":"topic","abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdrouter","title":"HummingbirdRouter","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilderOptions/OptionSet-Implementations":{"role":"collectionGroup","kind":"article","title":"OptionSet Implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/OptionSet-Implementations","type":"topic","url":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/optionset-implementations"},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilderOptions":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdrouter\/routerbuilderoptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterBuilderOptions","kind":"identifier"}],"navigatorTitle":[{"text":"RouterBuilderOptions","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Router Options","type":"text"}],"title":"RouterBuilderOptions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilderOptions/init(rawValue:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/init(rawValue:)","title":"init(rawValue:)","abstract":[],"url":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/init(rawvalue:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilderOptions/Equatable-Implementations":{"role":"collectionGroup","kind":"article","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/Equatable-Implementations","type":"topic","url":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/equatable-implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilderOptions/caseInsensitive":{"abstract":[{"type":"text","text":"Router path comparisons will be case insensitive"}],"title":"caseInsensitive","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilderOptions\/caseInsensitive","url":"\/documentation\/hummingbirdrouter\/routerbuilderoptions\/caseinsensitive","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"caseInsensitive"},{"kind":"text","text":": `Self`"}],"type":"topic","role":"symbol"}}}