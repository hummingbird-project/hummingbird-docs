{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Input","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Input","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Input","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Output","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Output","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"Request","type":"text"}],"type":"paragraph"}],"name":"input"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Request context","type":"text"}]}],"name":"context"},{"content":[{"inlineContent":[{"text":"Next middleware to run, if no route handler is found","type":"text"}],"type":"paragraph"}],"name":"next"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"Response","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform"]]},"variants":[{"paths":["\/documentation\/hummingbirdrouter\/contexttransform\/handle(_:context:next:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Process HTTP request and return an HTTP response"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/handle(_:context:next:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"externalID":"s:17HummingbirdRouter16ContextTransformV6handle_7context4next0A4Core8ResponseVAG7RequestV_xAiK_xtYaKXEtYaKF","title":"handle(_:context:next:)","modules":[{"name":"HummingbirdRouter"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"url":"\/documentation\/hummingbird\/requestcontext","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform/Input":{"title":"ContextTransform.Input","url":"\/documentation\/hummingbirdrouter\/contexttransform\/input","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Input","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}],"kind":"symbol","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Input"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform":{"url":"\/documentation\/hummingbirdrouter\/contexttransform","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContextTransform","kind":"identifier"}],"navigatorTitle":[{"text":"ContextTransform","kind":"identifier"}],"title":"ContextTransform","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","abstract":[{"text":"Router middleware that transforms the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"reference"},{"text":" and uses it with the contained","type":"text"},{"text":" ","type":"text"},{"text":"Middleware chain","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform/handle(_:context:next:)":{"title":"handle(_:context:next:)","url":"\/documentation\/hummingbirdrouter\/contexttransform\/handle(_:context:next:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/handle(_:context:next:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Process HTTP request and return an HTTP response","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform/Output":{"url":"\/documentation\/hummingbirdrouter\/contexttransform\/output","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Output"}],"navigatorTitle":[{"kind":"identifier","text":"Output"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Output","title":"ContextTransform.Output"},"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"title":"HummingbirdRouter","url":"\/documentation\/hummingbirdrouter","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}]}}}