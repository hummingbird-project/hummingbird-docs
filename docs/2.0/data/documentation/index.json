{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"primaryContentSections":[{"content":[{"anchor":"Hummingbird","type":"heading","text":"Hummingbird","level":2},{"type":"paragraph","inlineContent":[{"text":"Hummingbird is a lightweight and flexible web application framework. It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests and responses, TLS and HTTP2.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you’re new to Hummingbird, start here: "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"}]},{"type":"codeListing","syntax":"swift","code":["import Hummingbird","\/\/ create router and add a single GET \/hello route","let router = Router()","    .get(\"hello\") { request, _ -> String in","        return \"Hello\"","    }","\/\/ create application using router","let app = Application(router: router)","\/\/ run hummingbird application","try await app.runService()"]},{"type":"paragraph","inlineContent":[{"text":"Below is a list of guides and tutorials to help you get started with building your own Hummingbird based web application.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Getting Started","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"],"anchor":"Getting-Started"},{"title":"Hummingbird Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServerProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2"],"anchor":"Hummingbird-Server"},{"title":"Authentication","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords"],"anchor":"Authentication"},{"title":"WebSockets","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketClientGuide"],"anchor":"WebSockets"},{"title":"Database Integration","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigrationsGuide","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/MongoKitten"],"anchor":"Database-Integration"},{"title":"Offloading work","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"],"anchor":"Offloading-work"},{"title":"Mustache","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheFeatures"],"anchor":"Mustache"},{"title":"Reference Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"anchor":"Reference-Documentation"}],"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","interfaceLanguage":"swift"},"sections":[],"metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"Hummingbird Documentation","role":"collection"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoding":{"images":[{"identifier":"logo.png","type":"icon"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoding","type":"topic","url":"\/documentation\/hummingbird\/responseencoding","abstract":[{"type":"text","text":"Writing Responses using JSON and other formats."}],"kind":"article","title":"Response Encoding"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"images":[{"identifier":"logo.png","type":"icon"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","type":"topic","abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}],"url":"\/documentation\/hummingbird\/testing","title":"Testing","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"images":[{"identifier":"logo.png","type":"icon"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","type":"topic","url":"\/documentation\/hummingbird\/requestcontexts","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"kind":"article","title":"Request Contexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoding":{"images":[{"identifier":"logo.png","type":"icon"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoding","type":"topic","url":"\/documentation\/hummingbird\/requestdecoding","abstract":[{"type":"text","text":"Decoding of Requests with JSON content and other formats."}],"kind":"article","title":"Request Decoding"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Sessions":{"url":"\/documentation\/hummingbird\/sessions","images":[{"type":"icon","identifier":"logo.png"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions","title":"Sessions","abstract":[{"text":"Session based authentication","type":"text"}],"kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterBuilderGuide":{"images":[{"type":"icon","identifier":"logo.png"}],"role":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","abstract":[{"type":"text","text":"Building your router using a result builder."}],"url":"\/documentation\/hummingbird\/routerbuilderguide","title":"Result Builder Router","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/WebSocketClientGuide":{"type":"topic","title":"WebSocket Client","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketClientGuide","kind":"article","url":"\/documentation\/hummingbird\/websocketclientguide","abstract":[{"type":"text","text":"Connecting to WebSocket servers."}],"role":"article","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdlambda","role":"collection","title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MustacheFeatures":{"url":"\/documentation\/hummingbird\/mustachefeatures","abstract":[{"type":"text","text":"An overview of the features of swift-mustache."}],"role":"article","title":"Mustache Features","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheFeatures","kind":"article","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"type":"topic","title":"HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/hummingbird\/jobsguide","title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"abstract":[{"type":"text","text":"Mustache template engine."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/mustache","role":"collection","title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"title":"Migrating to Hummingbird v2","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/migratingtov2","role":"article","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","title":"Error Handling","kind":"article","url":"\/documentation\/hummingbird\/errorhandling","abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"role":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"abstract":[{"text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies.","type":"text"}],"role":"overview","url":"\/tutorials\/fluent","kind":"overview","title":"Store Data with Fluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigrationsGuide":{"url":"\/documentation\/hummingbird\/migrationsguide","images":[{"type":"icon","identifier":"logo.png"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigrationsGuide","title":"Postgres Migrations","abstract":[{"text":"Managing database structure changes.","type":"text"}],"kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GettingStarted":{"images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Create a new project on GitHub or an app locally from a starter template.","type":"text"}],"role":"article","url":"\/documentation\/hummingbird\/gettingstarted","kind":"article","title":"Getting Started with Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","type":"topic"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdredis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"images":[{"identifier":"logo.png","type":"icon"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","type":"topic","abstract":[{"type":"text","text":"Integration with Swift Service Lifecycle"}],"url":"\/documentation\/hummingbird\/servicelifecycle","title":"Service Lifecycle","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/jobs","title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"type":"topic","title":"HummingbirdWebSocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"title":"HummingbirdCompression","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdcompression","role":"collection","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MustacheSyntax":{"role":"article","abstract":[{"type":"text","text":"Overview of Mustache Syntax"}],"url":"\/documentation\/hummingbird\/mustachesyntax","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","title":"Mustache Syntax"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/WebSocketServerUpgrade":{"abstract":[{"type":"text","text":"Support for upgrading HTTP1 connections to WebSocket."}],"url":"\/documentation\/hummingbird\/websocketserverupgrade","role":"article","title":"WebSocket Server Upgrade","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","kind":"article","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","title":"Logging, Metrics and Tracing","kind":"article","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"role":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/tutorials/MongoKitten":{"role":"overview","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/MongoKitten","type":"topic","title":"Store Data with MongoKitten","url":"\/tutorials\/mongokitten","kind":"overview","abstract":[{"text":"A tutorial that shows you how to set up Hummingbird 2 with MongoKitten to create and share your kittens.","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"kind":"overview","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","type":"topic","url":"\/tutorials\/todos","role":"overview","title":"Build a Todos application."},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"type":"topic","title":"WSClient","url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"abstract":[{"text":"Working with Postgres databases.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdpostgres","role":"collection","title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","title":"Router","kind":"article","url":"\/documentation\/hummingbird\/routerguide","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"role":"article","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","title":"Persistent data","kind":"article","url":"\/documentation\/hummingbird\/persistentdata","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"role":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AuthenticatorMiddlewareGuide":{"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddlewareGuide","title":"Authenticator Middleware","url":"\/documentation\/hummingbird\/authenticatormiddlewareguide","kind":"article","abstract":[{"text":"Request authentication middleware","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServerProtocol":{"title":"Server protocol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServerProtocol","role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/hummingbird\/serverprotocol","abstract":[{"text":"Support for TLS and HTTP2 upgrades","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","title":"Middleware","kind":"article","url":"\/documentation\/hummingbird\/middlewareguide","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"role":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/OneTimePasswords":{"images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"A one time password (OTP) valid for only one login session.","type":"text"}],"role":"article","url":"\/documentation\/hummingbird\/onetimepasswords","kind":"article","title":"One Time Passwords","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"type":"topic","title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","role":"collection"}}}