{"variants":[{"paths":["\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/deferredtodate"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum\/deferredToDate","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Defer to ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" for encoding. This is the default strategy.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deferredToDate","kind":"identifier"}]}],"kind":"declarations"}],"kind":"symbol","metadata":{"symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deferredToDate","kind":"identifier"}],"title":"URLEncodedFormEncoder.DateEncodingStrategy.deferredToDate","modules":[{"name":"Hummingbird"}],"role":"symbol","externalID":"s:11Hummingbird21URLEncodedFormEncoderV20DateEncodingStrategyO010deferredToE0yA2EmF","roleHeading":"Case"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder/DateEncodingStrategy-swift.enum/deferredToDate":{"title":"URLEncodedFormEncoder.DateEncodingStrategy.deferredToDate","url":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/deferredtodate","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deferredToDate","kind":"identifier"}],"abstract":[{"type":"text","text":"Defer to "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" for encoding. This is the default strategy."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum\/deferredToDate","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder/DateEncodingStrategy-swift.enum":{"kind":"symbol","title":"URLEncodedFormEncoder.DateEncodingStrategy","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum","url":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum","navigatorTitle":[{"text":"DateEncodingStrategy","kind":"identifier"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateEncodingStrategy","kind":"identifier"}],"type":"topic","abstract":[{"text":"The strategy to use for encoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" values.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"title":"URLEncodedFormEncoder","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/urlencodedformencoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}]}}}