{"metadata":{"symbolKind":"class","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}],"externalID":"s:11Hummingbird15MiddlewareGroupC","roleHeading":"Class","role":"symbol","title":"MiddlewareGroup"},"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"generated":true,"title":"Middleware","anchor":"Middleware"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/add(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/constructResponder(finalResponder:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["Linux"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/middlewaregroup"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup/constructResponder(finalResponder:)":{"abstract":[{"text":"Construct responder chain from this middleware group","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"constructResponder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"finalResponder"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird13HTTPResponderP","kind":"typeIdentifier","text":"HTTPResponder"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">) -> "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird13HTTPResponderP","kind":"typeIdentifier","text":"HTTPResponder"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol","title":"constructResponder(finalResponder:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/constructResponder(finalResponder:)","url":"\/documentation\/hummingbird\/middlewaregroup\/constructresponder(finalresponder:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}],"type":"topic","kind":"symbol","title":"MiddlewareGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","url":"\/documentation\/hummingbird\/middlewaregroup","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup/add(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/add(_:)","title":"add(_:)","role":"symbol","url":"\/documentation\/hummingbird\/middlewaregroup\/add(_:)","abstract":[{"type":"text","text":"Add middleware to group"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","role":"symbol","navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/metricsmiddleware","title":"MetricsMiddleware","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"kind":"symbol","title":"Response","type":"topic","url":"\/documentation\/hummingbirdcore\/response","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"role":"symbol","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CORSMiddleware"}],"type":"topic","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","url":"\/documentation\/hummingbird\/corsmiddleware","title":"CORSMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}],"type":"topic","kind":"symbol","title":"TracingMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","url":"\/documentation\/hummingbird\/tracingmiddleware","navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"Middleware stack result builder","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","title":"MiddlewareFixedTypeBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"title":"Request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"type":"topic","abstract":[{"text":"Version of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},{"text":" whose Input is ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":" and output is ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"url":"\/documentation\/hummingbird\/routermiddleware","title":"RouterMiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"url":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","role":"symbol","navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/logrequestsmiddleware","title":"LogRequestsMiddleware","kind":"symbol","type":"topic","abstract":[{"text":"Middleware outputting to log for every call to server.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}]}}}