{"abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"seeAlsoSections":[{"title":"Middleware","anchor":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareGroup"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":">"}],"platforms":["Linux"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/middlewaregroup"]}],"metadata":{"modules":[{"name":"Hummingbird"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareGroup"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"role":"symbol","externalID":"s:11Hummingbird15MiddlewareGroupC","symbolKind":"class","title":"MiddlewareGroup","roleHeading":"Class"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/add(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/constructResponder(finalResponder:)"],"title":"Instance Methods","anchor":"Instance-Methods"}],"sections":[],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","type":"topic","title":"Hummingbird","role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup/constructResponder(finalResponder:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/constructResponder(finalResponder:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"constructResponder","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"finalResponder"},{"text":": ","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP","text":"HTTPResponder"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp"},{"kind":"text","text":">) -> "},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HTTPResponderP","text":"HTTPResponder","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp","text":"Context"},{"kind":"text","text":">"}],"type":"topic","role":"symbol","abstract":[{"text":"Construct responder chain from this middleware group","type":"text"}],"title":"constructResponder(finalResponder:)","url":"\/documentation\/hummingbird\/middlewaregroup\/constructresponder(finalresponder:)"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"title":"Hummingbird Documentation","url":"\/documentation\/index","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MetricsMiddleware"}],"url":"\/documentation\/hummingbird\/metricsmiddleware","kind":"symbol","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}],"title":"MetricsMiddleware","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"abstract":[{"text":"Middleware outputting to log for every call to server.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"LogRequestsMiddleware","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}],"kind":"symbol","title":"LogRequestsMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","url":"\/documentation\/hummingbird\/logrequestsmiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"title":"MiddlewareGroup","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareGroup","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewaregroup","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"title":"MiddlewareProtocol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","kind":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware stack result builder"}],"title":"MiddlewareFixedTypeBuilder","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","role":"symbol","type":"topic","navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/response","title":"Response","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"navigatorTitle":[{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup/add(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/add(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"add"},{"text":"(","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Add middleware to group"}],"title":"add(_:)","url":"\/documentation\/hummingbird\/middlewaregroup\/add(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"kind":"symbol","url":"\/documentation\/hummingbird\/routermiddleware","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","abstract":[{"type":"text","text":"Version of "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"reference","isActive":true},{"text":" whose Input is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"title":"RouterMiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CORSMiddleware"}],"abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"title":"CORSMiddleware","url":"\/documentation\/hummingbird\/corsmiddleware","role":"symbol","type":"topic","navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"url":"\/documentation\/hummingbird\/tracingmiddleware","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TracingMiddleware"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","title":"TracingMiddleware","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"title":"Request","url":"\/documentation\/hummingbirdcore\/request","role":"symbol","type":"topic","navigatorTitle":[{"text":"Request","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null}}}