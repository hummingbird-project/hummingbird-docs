{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-58g9y","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onServerRunning","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"roleHeading":"Instance Method","title":"onServerRunning(_:)","externalID":"s:11Hummingbird19ApplicationProtocolPAAE15onServerRunningyy7NIOCore7Channel_pYaF","modules":[{"name":"Hummingbird"}],"extendedModule":"Hummingbird","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onServerRunning"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"symbolKind":"method","role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)-58g9y"]}],"abstract":[{"text":"Default onServerRunning that does nothing","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"title":"ApplicationProtocol","kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/onServerRunning(_:)-58g9y":{"type":"topic","abstract":[{"type":"text","text":"Default onServerRunning that does nothing"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-58g9y","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onServerRunning","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)-58g9y","title":"onServerRunning(_:)","role":"symbol"},"logo.png":{"alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection"}}}