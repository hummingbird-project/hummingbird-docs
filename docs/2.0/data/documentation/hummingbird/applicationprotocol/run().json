{"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol"]]},"abstract":[{"type":"text","text":"Construct application and run it"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/hummingbird\/applicationprotocol\/run()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Hummingbird"}],"symbolKind":"method","extendedModule":"Hummingbird","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"externalID":"s:11Hummingbird19ApplicationProtocolPAAE3runyyYaKF","title":"run()"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"references":{"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","title":"ApplicationProtocol","type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/run()":{"title":"run()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/run()","abstract":[{"type":"text","text":"Construct application and run it"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","url":"\/documentation\/hummingbird","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]}}}