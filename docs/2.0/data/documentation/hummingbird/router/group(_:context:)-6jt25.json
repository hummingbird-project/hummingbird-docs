{"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/router\/group(_:context:)-6jt25"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"group","kind":"identifier"},{"text":"<","kind":"text"},{"text":"TargetContext","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"path","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"},{"text":" = \"\", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TargetContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"text":"RouterGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"},{"text":"<","kind":"text"},{"text":"TargetContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TargetContext","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"},{"text":" == ","kind":"text"},{"text":"TargetContext","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Source","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the transform to work the "},{"type":"codeVoice","code":"Source"},{"type":"text","text":" of the transformed "},{"type":"codeVoice","code":"RequestContext"},{"type":"text","text":" needs"},{"type":"text","text":" "},{"type":"text","text":"to be the original "},{"type":"codeVoice","code":"RequestContext"},{"type":"text","text":" eg"}]},{"code":["struct TransformedRequestContext {","    typealias Source = BasicRequestContext","    var coreContext: CoreRequestContextStorage","    init(source: Source) {","        self.coreContext = .init(source: source)","    }","}"],"type":"codeListing","syntax":null},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameters"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"path: path prefix to add to routes inside this group","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"convertContext: Function converting context","type":"text"}]}]}]}]}],"type":"unorderedList"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Return a group inside the current group that transforms the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"reference"}],"metadata":{"title":"group(_:context:)","modules":[{"name":"Hummingbird"}],"extendedModule":"Hummingbird","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF::SYNTHESIZED::s:11Hummingbird6RouterC","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"group"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TargetContext"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp","text":"TargetContext"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV","text":"RouterGroup"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp","text":"TargetContext"},{"kind":"text","text":">"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:context:)-6jt25"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]]},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/group(_:context:)-6jt25":{"kind":"symbol","url":"\/documentation\/hummingbird\/router\/group(_:context:)-6jt25","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:context:)-6jt25","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"group"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TargetContext"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier","text":"RouterPath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp","kind":"typeIdentifier","text":"TargetContext"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11Hummingbird11RouterGroupV","kind":"typeIdentifier","text":"RouterGroup"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp","kind":"typeIdentifier","text":"TargetContext"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a group inside the current group that transforms the "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true,"type":"reference"}],"title":"group(_:context:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","kind":"symbol","url":"\/documentation\/hummingbird\/router","navigatorTitle":[{"text":"Router","kind":"identifier"}],"title":"Router","type":"topic","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"Responder"},{"type":"text","text":" that will follow these rules."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","kind":"symbol","url":"\/documentation\/hummingbird\/routermethods\/context","title":"Context","type":"topic","abstract":[],"required":true,"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","kind":"symbol","url":"\/documentation\/hummingbird\/routerpath","navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"title":"RouterPath","type":"topic","abstract":[{"text":"Split router path into components","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/request","kind":"symbol","title":"Request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","title":"RequestContext","url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":", and is therefore instantiated alongside the request."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","kind":"symbol","url":"\/documentation\/hummingbird\/routergroup","navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"title":"RouterGroup","type":"topic","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"title":"Source","kind":"symbol","url":"\/documentation\/hummingbird\/initializablefromsource\/source","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}],"role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","required":true},"logo.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"}}}