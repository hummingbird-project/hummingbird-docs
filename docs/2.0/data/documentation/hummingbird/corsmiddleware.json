{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"If request has “origin” header then generate CORS headers. If method is OPTIONS"},{"text":" ","type":"text"},{"text":"then return an empty body with all the standard CORS headers otherwise send","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"request onto the next handler and when you receive the response add a"},{"type":"text","text":" "},{"type":"text","text":"“access-control-allow-origin” header"}],"type":"paragraph"}]}],"metadata":{"modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird14CORSMiddlewareV","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"roleHeading":"Structure","navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"title":"CORSMiddleware","symbolKind":"struct"},"seeAlsoSections":[{"anchor":"Middleware","title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"]},{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/handle(_:context:next:)"]},{"title":"Enumerations","generated":true,"anchor":"Enumerations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/AllowOrigin"]}],"sections":[],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"variants":[{"paths":["\/documentation\/hummingbird\/corsmiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/AllowOrigin":{"navigatorTitle":[{"kind":"identifier","text":"AllowOrigin"}],"role":"symbol","title":"CORSMiddleware.AllowOrigin","url":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/AllowOrigin","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AllowOrigin"}],"abstract":[{"type":"text","text":"Defines what origins are allowed"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"kind":"symbol","abstract":[{"text":"Middleware stack result builder","type":"text"}],"title":"MiddlewareFixedTypeBuilder","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"url":"\/documentation\/hummingbird\/tracingmiddleware","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}],"title":"TracingMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)":{"url":"\/documentation\/hummingbird\/corsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","kind":"symbol","role":"symbol","title":"init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","abstract":[{"text":"Initialize CORS middleware","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allowOrigin"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV11AllowOriginO","kind":"typeIdentifier","text":"AllowOrigin"},{"text":", ","kind":"text"},{"text":"allowHeaders","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"HTTPField","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV","text":"Name","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"allowMethods","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"allowCredentials","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exposedHeaders"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"]?, ","kind":"text"},{"text":"maxAge","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount"},{"kind":"text","text":"?)"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"title":"Response","role":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","kind":"symbol","navigatorTitle":[{"text":"Response","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/response","type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","role":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","navigatorTitle":[{"kind":"identifier","text":"Request"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/request","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"kind":"symbol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"title":"MiddlewareProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"type":"topic","url":"\/documentation\/hummingbird\/middlewareprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"url":"\/documentation\/hummingbird\/routermiddleware","kind":"symbol","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"abstract":[{"text":"Version of ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true,"type":"reference"},{"type":"text","text":" whose Input is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":" and output is "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"title":"RouterMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"url":"\/documentation\/hummingbird\/middlewaregroup","kind":"symbol","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareGroup"}],"title":"MiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","role":"collection","abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/index","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"kind":"symbol","title":"CORSMiddleware","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CORSMiddleware"}],"navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"title":"MetricsMiddleware","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MetricsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","url":"\/documentation\/hummingbird\/metricsmiddleware","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"url":"\/documentation\/hummingbird\/logrequestsmiddleware","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}],"abstract":[{"text":"Middleware outputting to log for every call to server.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LogRequestsMiddleware"}],"title":"LogRequestsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"title":"RequestContext","role":"symbol","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"url":"\/documentation\/hummingbird\/requestcontext","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/handle(_:context:next:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/handle(_:context:next:)","type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware\/handle(_:context:next:)","role":"symbol","abstract":[{"text":"apply CORS middleware","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"text":"(","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV7Contextxmfp","text":"Context"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV7Contextxmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"}],"title":"handle(_:context:next:)"}}}