{"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/handle(_:context:next:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/AllowOrigin"],"generated":true,"title":"Enumerations","anchor":"Enumerations"}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"modules":[{"name":"Hummingbird"}],"symbolKind":"struct","externalID":"s:11Hummingbird14CORSMiddlewareV","roleHeading":"Structure","title":"CORSMiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"generated":true,"title":"Middleware","anchor":"Middleware"}],"variants":[{"paths":["\/documentation\/hummingbird\/corsmiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If request has “origin” header then generate CORS headers. If method is OPTIONS"},{"type":"text","text":" "},{"type":"text","text":"then return an empty body with all the standard CORS headers otherwise send"},{"type":"text","text":" "},{"type":"text","text":"request onto the next handler and when you receive the response add a"},{"type":"text","text":" "},{"type":"text","text":"“access-control-allow-origin” header"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/request","kind":"symbol","title":"Request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"kind":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","title":"MiddlewareProtocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"type":"topic","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"kind":"symbol","url":"\/documentation\/hummingbird\/tracingmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","title":"TracingMiddleware","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"}],"type":"topic","abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogRequestsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","kind":"symbol","url":"\/documentation\/hummingbird\/logrequestsmiddleware","navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}],"title":"LogRequestsMiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/handle(_:context:next:)":{"url":"\/documentation\/hummingbird\/corsmiddleware\/handle(_:context:next:)","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV7Contextxmfp"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV7Contextxmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"}],"title":"handle(_:context:next:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/handle(_:context:next:)","abstract":[{"type":"text","text":"apply CORS middleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"navigatorTitle":[{"text":"Response","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/response","kind":"symbol","title":"Response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","title":"CORSMiddleware","url":"\/documentation\/hummingbird\/corsmiddleware","navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","kind":"symbol","url":"\/documentation\/hummingbird\/middlewaregroup","navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"title":"MiddlewareGroup","type":"topic","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/AllowOrigin":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AllowOrigin"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/AllowOrigin","kind":"symbol","url":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin","navigatorTitle":[{"kind":"identifier","text":"AllowOrigin"}],"title":"CORSMiddleware.AllowOrigin","type":"topic","abstract":[{"text":"Defines what origins are allowed","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","kind":"symbol","url":"\/documentation\/hummingbird\/metricsmiddleware","navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"title":"MetricsMiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP","title":"Swift.SendableMetatype","type":"unresolvable"},"logo.png":{"identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","kind":"symbol","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"title":"MiddlewareFixedTypeBuilder","type":"topic","abstract":[{"type":"text","text":"Middleware stack result builder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","title":"RouterMiddleware","url":"\/documentation\/hummingbird\/routermiddleware","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"type":"topic","abstract":[{"type":"text","text":"Version of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)":{"abstract":[{"type":"text","text":"Initialize CORS middleware"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allowOrigin"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AllowOrigin","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV11AllowOriginO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"allowHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"HTTPField","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Name","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"allowMethods"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"allowCredentials"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exposedHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"maxAge"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeAmount","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"kind":"text","text":"?)"}],"url":"\/documentation\/hummingbird\/corsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","type":"topic","kind":"symbol","role":"symbol","title":"init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","title":"RequestContext","url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":", and is therefore instantiated alongside the request."}]}}}