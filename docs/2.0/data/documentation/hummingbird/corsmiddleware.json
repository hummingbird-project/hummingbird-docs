{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"If request has “origin” header then generate CORS headers. If method is OPTIONS","type":"text"},{"text":" ","type":"text"},{"text":"then return an empty body with all the standard CORS headers otherwise send","type":"text"},{"text":" ","type":"text"},{"text":"request onto the next handler and when you receive the response add a","type":"text"},{"text":" ","type":"text"},{"text":"“access-control-allow-origin” header","type":"text"}]}],"kind":"content"}],"sections":[],"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"]},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/handle(_:context:next:)"]},{"title":"Enumerations","generated":true,"anchor":"Enumerations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/AllowOrigin"]}],"abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/corsmiddleware"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"seeAlsoSections":[{"title":"Middleware","generated":true,"anchor":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"]}],"metadata":{"navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"externalID":"s:11Hummingbird14CORSMiddlewareV","modules":[{"name":"Hummingbird"}],"roleHeading":"Structure","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"symbolKind":"struct","title":"CORSMiddleware"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"topic","title":"Response","role":"symbol","navigatorTitle":[{"text":"Response","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/response","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"role":"symbol","title":"RequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":", and is therefore instantiated alongside the request."}],"url":"\/documentation\/hummingbird\/requestcontext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","title":"RouterMiddleware","type":"topic","role":"symbol","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Version of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},{"type":"text","text":" whose Input is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":" and output is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"type":"text","text":"."}],"url":"\/documentation\/hummingbird\/routermiddleware","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}],"navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"title":"MiddlewareGroup","url":"\/documentation\/hummingbird\/middlewaregroup","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"title":"MiddlewareProtocol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/handle(_:context:next:)":{"url":"\/documentation\/hummingbird\/corsmiddleware\/handle(_:context:next:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/handle(_:context:next:)","kind":"symbol","title":"handle(_:context:next:)","role":"symbol","abstract":[{"type":"text","text":"apply CORS middleware"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV7Contextxmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV7Contextxmfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"url":"\/documentation\/hummingbird\/metricsmiddleware","navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsMiddleware","kind":"identifier"}],"title":"MetricsMiddleware","type":"topic","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/AllowOrigin":{"title":"CORSMiddleware.AllowOrigin","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/AllowOrigin","abstract":[{"type":"text","text":"Defines what origins are allowed"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllowOrigin","kind":"identifier"}],"url":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin","kind":"symbol","navigatorTitle":[{"text":"AllowOrigin","kind":"identifier"}],"type":"topic"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"url":"\/documentation\/hummingbird\/tracingmiddleware","navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}],"title":"TracingMiddleware","type":"topic","abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)":{"title":"init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","abstract":[{"type":"text","text":"Initialize CORS middleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allowOrigin"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV11AllowOriginO","kind":"typeIdentifier","text":"AllowOrigin"},{"kind":"text","text":", "},{"kind":"externalParam","text":"allowHeaders"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:9HTTPTypes9HTTPFieldV","kind":"typeIdentifier","text":"HTTPField"},{"kind":"text","text":"."},{"preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV","kind":"typeIdentifier","text":"Name"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"allowMethods"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier","text":"HTTPRequest"},{"kind":"text","text":"."},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier","text":"Method"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"allowCredentials"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exposedHeaders"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"maxAge"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"kind":"text","text":"?)"}],"kind":"symbol","url":"\/documentation\/hummingbird\/corsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"role":"symbol","navigatorTitle":[{"text":"Request","kind":"identifier"}],"title":"Request","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogRequestsMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}],"title":"LogRequestsMiddleware","url":"\/documentation\/hummingbird\/logrequestsmiddleware","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"role":"symbol","title":"MiddlewareFixedTypeBuilder","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","type":"topic","abstract":[{"type":"text","text":"Middleware stack result builder"}],"navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"title":"CORSMiddleware","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}]}}}