{"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"loadFile","kind":"identifier"},{"kind":"text","text":"("},{"text":"path","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"chunkLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","text":"ResponseBody","kind":"typeIdentifier"}],"symbolKind":"method","modules":[{"name":"Hummingbird"}],"role":"symbol","externalID":"s:11Hummingbird6FileIOV04loadB04path7context11chunkLength0A4Core12ResponseBodyVSS_xSitYaKAA14RequestContextRzlF","title":"loadFile(path:context:chunkLength:)","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Load file and return response body"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadFile"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","text":"RequestContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"chunkLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":" = NonBlockingFileIO.defaultChunkSize) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","text":"ResponseBody","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"name":"path","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"System file path"}]}]},{"content":[{"inlineContent":[{"text":"Context this request is being called in","type":"text"}],"type":"paragraph"}],"name":"context"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Size of the chunks read from disk and loaded into memory (in bytes). Defaults to the value suggested by ","type":"text"},{"type":"codeVoice","code":"swift-nio"},{"type":"text","text":"."}]}],"name":"chunkLength"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"Response body"}],"type":"paragraph"}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Depending on the file size this will return either a response body containing a ByteBuffer or a stream that will provide the"},{"type":"text","text":" "},{"type":"text","text":"file in chunks."}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:context:chunkLength:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/fileio\/loadfile(path:context:chunklength:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","type":"topic"},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","role":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","navigatorTitle":[{"kind":"identifier","text":"Request"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/request","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"title":"ResponseBody","role":"symbol","abstract":[{"type":"text","text":"Response body"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","kind":"symbol","navigatorTitle":[{"text":"ResponseBody","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBody"}],"url":"\/documentation\/hummingbirdcore\/responsebody","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO/loadFile(path:context:chunkLength:)":{"type":"topic","url":"\/documentation\/hummingbird\/fileio\/loadfile(path:context:chunklength:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:context:chunkLength:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadFile"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"path"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"chunkLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","kind":"typeIdentifier","text":"ResponseBody"}],"abstract":[{"type":"text","text":"Load file and return response body"}],"title":"loadFile(path:context:chunkLength:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","role":"collection","abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/index","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"kind":"symbol","title":"FileIO","abstract":[{"text":"Manages File reading and writing.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FileIO","kind":"identifier"}],"navigatorTitle":[{"text":"FileIO","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/fileio","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"title":"RequestContext","role":"symbol","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"url":"\/documentation\/hummingbird\/requestcontext","type":"topic"}}}