{"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:range:context:chunkLength:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"]]},"variants":[{"paths":["\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:chunklength:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ClosedRange","preciseIdentifier":"s:SN","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"chunkLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":" = NonBlockingFileIO.defaultChunkSize) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ResponseBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"System file path","type":"text"}],"type":"paragraph"}],"name":"path"},{"content":[{"inlineContent":[{"type":"text","text":"Range defining how much of the file is to be loaded"}],"type":"paragraph"}],"name":"range"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Context this request is being called in","type":"text"}]}],"name":"context"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Size of the chunks read from disk and loaded into memory (in bytes). Defaults to the value suggested by "},{"type":"codeVoice","code":"swift-nio"},{"type":"text","text":"."}]}],"name":"chunkLength"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Response body plus file size"}]}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Depending on the size of the part this will return either a response body containing a ByteBuffer or a stream that will provide the"},{"type":"text","text":" "},{"type":"text","text":"file in chunks."}]}],"kind":"content"}],"metadata":{"symbolKind":"method","title":"loadFile(path:range:context:chunkLength:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP"},{"text":", ","kind":"text"},{"text":"chunkLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ResponseBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV"}],"modules":[{"name":"Hummingbird"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:11Hummingbird6FileIOV04loadB04path5range7context11chunkLength0A4Core12ResponseBodyVSS_SNySiGxSitYaKAA14RequestContextRzlF"},"abstract":[{"text":"Load part of file and return response body.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"navigatorTitle":[{"text":"ResponseBody","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/responsebody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBody","kind":"identifier"}],"type":"topic","kind":"symbol","title":"ResponseBody","role":"symbol","abstract":[{"type":"text","text":"Response body"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/requestcontext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"symbol","title":"RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","kind":"symbol","role":"symbol","title":"Request","url":"\/documentation\/hummingbirdcore\/request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO/loadFile(path:range:context:chunkLength:)":{"title":"loadFile(path:range:context:chunkLength:)","kind":"symbol","url":"\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:chunklength:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ClosedRange","preciseIdentifier":"s:SN","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"chunkLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","kind":"typeIdentifier"}],"abstract":[{"text":"Load part of file and return response body.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:range:context:chunkLength:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","title":"FileIO","abstract":[{"type":"text","text":"Manages File reading and writing."}],"kind":"symbol","url":"\/documentation\/hummingbird\/fileio","navigatorTitle":[{"text":"FileIO","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileIO","kind":"identifier"}],"type":"topic","role":"symbol"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]}}}