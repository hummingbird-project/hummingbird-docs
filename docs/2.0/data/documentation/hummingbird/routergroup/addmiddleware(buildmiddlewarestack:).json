{"metadata":{"symbolKind":"method","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","title":"addMiddleware(buildMiddlewareStack:)","role":"symbol","externalID":"s:11Hummingbird13RouterMethodsPAAE13addMiddleware05buildE5Stackxqd__yXE_tAA0E8ProtocolRd__7ContextQyd__AGRtz0A4Core7RequestV5InputRtd__AJ8ResponseV6OutputRtd__lF::SYNTHESIZED::s:11Hummingbird11RouterGroupV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addMiddleware","kind":"identifier"},{"kind":"text","text":"("},{"text":"buildMiddlewareStack","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier","text":"Response"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"extendedModule":"Hummingbird"},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/addMiddleware(buildMiddlewareStack:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"]]},"abstract":[{"type":"text","text":"Add middleware stack to router"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/routergroup\/addmiddleware(buildmiddlewarestack:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addMiddleware","kind":"identifier"},{"kind":"text","text":"("},{"text":"@","kind":"attribute"},{"kind":"attribute","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","text":"MiddlewareFixedTypeBuilder","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"},{"text":">","kind":"text"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"buildMiddlewareStack"},{"kind":"text","text":": () -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"MiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":", "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier","text":"Context"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"name":"buildMiddlewareStack","content":[{"type":"paragraph","inlineContent":[{"text":"Middleware stack result builder","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Router"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"Add multiple middleware to the router using the middleware stack result builder","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["router.addMiddleware {","    LogRequestsMiddleware()","    MetricsMiddleware()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This gives a slight performance boost over adding them individually."}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/RouterMethods-Implementations":{"title":"RouterMethods Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","navigatorTitle":[{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Middleware stack result builder","type":"text"}],"title":"MiddlewareFixedTypeBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"url":"\/documentation\/hummingbirdcore\/response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Response"}],"type":"topic","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"title":"Response","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"required":true,"abstract":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext"}],"kind":"symbol","url":"\/documentation\/hummingbird\/routermethods\/context","role":"symbol","title":"Context","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/addMiddleware(buildMiddlewareStack:)":{"kind":"symbol","abstract":[{"type":"text","text":"Add middleware stack to router"}],"role":"symbol","type":"topic","title":"addMiddleware(buildMiddlewareStack:)","url":"\/documentation\/hummingbird\/routergroup\/addmiddleware(buildmiddlewarestack:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addMiddleware"},{"text":"(","kind":"text"},{"text":"buildMiddlewareStack","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier","text":"Request"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/addMiddleware(buildMiddlewareStack:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"title":"Request","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"title":"RouterGroup","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/routergroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"text":" ","type":"text"},{"type":"text","text":"suffix to the endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","kind":"symbol","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","kind":"article","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"type":"topic","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}]}}}