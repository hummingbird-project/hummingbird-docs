{"sections":[],"kind":"symbol","metadata":{"role":"symbol","title":"RouterMethods","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RouterMethods","kind":"identifier"}],"externalID":"s:11Hummingbird13RouterMethodsP","navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"symbolKind":"protocol","modules":[{"name":"Hummingbird"}]},"variants":[{"paths":["\/documentation\/hummingbird\/routermethods"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"RouterMethods"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMethods"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"},{"kind":"text","text":">"}],"platforms":["Linux"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"generated":true,"anchor":"Associated-Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"],"title":"Associated Types"},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/addMiddleware(buildMiddlewareStack:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/addRoutes(_:atPath:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/delete(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/get(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:context:)-2o2ov","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:context:)-w6fz","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/head(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/on(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/on(_:method:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/patch(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/post(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/put(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/ws(_:shouldUpgrade:onUpgrade:)"]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"generated":true,"title":"Router","anchor":"Router"}],"references":{"logo.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/ws(_:shouldUpgrade:onUpgrade:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ws"},{"text":"(","kind":"text"},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shouldUpgrade"},{"text":": (","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"RouterShouldUpgrade","kind":"typeIdentifier","preciseIdentifier":"s:20HummingbirdWebSocket19RouterShouldUpgradeO"},{"kind":"text","text":", "},{"text":"onUpgrade","kind":"externalParam"},{"kind":"text","text":": "},{"text":"WebSocketDataHandler","preciseIdentifier":"s:6WSCore20WebSocketDataHandlera","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:20HummingbirdWebSocket0bC13RouterContextV","text":"WebSocketRouterContext","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"text":">>) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Add path to router that support WebSocket upgrade"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/ws(_:shouldUpgrade:onUpgrade:)","role":"symbol","url":"\/documentation\/hummingbird\/routermethods\/ws(_:shouldupgrade:onupgrade:)","title":"ws(_:shouldUpgrade:onUpgrade:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/group(_:)":{"title":"group(_:)","role":"symbol","abstract":[{"text":"Return a group inside the current group","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"group","kind":"identifier"},{"kind":"text","text":"("},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"RouterGroup","preciseIdentifier":"s:11Hummingbird11RouterGroupV"},{"text":"<","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/routermethods\/group(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/group(_:context:)-2o2ov":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"group"},{"kind":"text","text":"<"},{"text":"TargetContext","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","text":"TargetContext"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV","text":"RouterGroup"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","text":"TargetContext","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Return a group inside the current group that transforms the ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"reference","isActive":true}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:context:)-2o2ov","role":"symbol","url":"\/documentation\/hummingbird\/routermethods\/group(_:context:)-2o2ov","title":"group(_:context:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"url":"\/documentation\/hummingbird\/requestid","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","kind":"symbol","title":"RequestID","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestID"}],"navigatorTitle":[{"kind":"identifier","text":"RequestID"}],"abstract":[{"type":"text","text":"Generate Unique ID for each request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/on(_:method:responder:)":{"title":"on(_:method:responder:)","role":"symbol","abstract":[{"type":"text","text":"Add responder to call when path and method are matched"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/on(_:method:responder:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"text":"Responder","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier","text":"RouterPath"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"method"},{"text":": ","kind":"text"},{"text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier","text":"Method"},{"kind":"text","text":", "},{"text":"responder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Responder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP2on_6method9responderxAA0B4PathV_9HTTPTypes11HTTPRequestV6MethodVqd__tAA13HTTPResponderRd__7ContextQyd__AORtzlF9ResponderL_qd__mfp"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbird\/routermethods\/on(_:method:responder:)","required":true},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","kind":"article","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/group(_:context:)-w6fz":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"group","kind":"identifier"},{"text":"<","kind":"text"},{"text":"TargetContext","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp","kind":"typeIdentifier","text":"TargetContext"},{"kind":"text","text":".Type) -> "},{"text":"RouterGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV"},{"text":"<","kind":"text"},{"text":"TargetContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp"},{"text":">","kind":"text"}],"abstract":[{"text":"Return a group inside the current group that transforms the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:context:)-w6fz","role":"symbol","url":"\/documentation\/hummingbird\/routermethods\/group(_:context:)-w6fz","title":"group(_:context:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"title":"HTTPResponder","navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/httpresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HTTPResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/patch(_:use:)":{"title":"patch(_:use:)","role":"symbol","abstract":[{"type":"text","text":"PATCH path for async closure returning type conforming to ResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/patch(_:use:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"patch","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","url":"\/documentation\/hummingbird\/routermethods\/patch(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" to add standard router verb (get, post â€¦) methods"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RouterMethods","kind":"identifier"}],"navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","kind":"symbol","url":"\/documentation\/hummingbird\/routermethods","title":"RouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","title":"RouterPath","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"abstract":[{"type":"text","text":"Split router path into components"}],"navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/routerpath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/addRoutes(_:atPath:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addRoutes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouteCollection","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15RouteCollectionC"},{"kind":"text","text":"<"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"atPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Add route collection to router"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/addRoutes(_:atPath:)","role":"symbol","url":"\/documentation\/hummingbird\/routermethods\/addroutes(_:atpath:)","title":"addRoutes(_:atPath:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"abstract":[{"text":"Collection of routes","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/routecollection","role":"symbol","title":"RouteCollection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"url":"\/documentation\/hummingbird\/routeroptions","title":"RouterOptions","role":"symbol","navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"type":"topic","abstract":[{"text":"Router Options","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterOptions","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"abstract":[{"type":"text","text":"Endpoint path storage"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","kind":"symbol","url":"\/documentation\/hummingbird\/endpointpath","title":"EndpointPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/add(middleware:)":{"title":"add(middleware:)","role":"symbol","abstract":[{"text":"add middleware","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/add(middleware:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"middleware","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","url":"\/documentation\/hummingbird\/routermethods\/add(middleware:)","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/addMiddleware(buildMiddlewareStack:)":{"title":"addMiddleware(buildMiddlewareStack:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/addMiddleware(buildMiddlewareStack:)","url":"\/documentation\/hummingbird\/routermethods\/addmiddleware(buildmiddlewarestack:)","abstract":[{"type":"text","text":"Add middleware stack to router"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"buildMiddlewareStack","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/put(_:use:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"put","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"use"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"PUT path for async closure returning type conforming to ResponseGenerator","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/put(_:use:)","role":"symbol","url":"\/documentation\/hummingbird\/routermethods\/put(_:use:)","title":"put(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"required":true,"abstract":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext"}],"kind":"symbol","url":"\/documentation\/hummingbird\/routermethods\/context","role":"symbol","title":"Context","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/post(_:use:)":{"title":"post(_:use:)","abstract":[{"type":"text","text":"POST path for async closure returning type conforming to ResponseGenerator"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"post"},{"kind":"text","text":"("},{"text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","kind":"typeIdentifier","text":"ResponseGenerator"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/post(_:use:)","type":"topic","url":"\/documentation\/hummingbird\/routermethods\/post(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"url":"\/documentation\/hummingbird\/router","kind":"symbol","title":"Router","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Router"}],"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"code":"Responder","type":"codeVoice"},{"type":"text","text":" that will follow these rules."}],"navigatorTitle":[{"kind":"identifier","text":"Router"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/head(_:use:)":{"title":"head(_:use:)","role":"symbol","abstract":[{"type":"text","text":"HEAD path for async closure returning type conforming to ResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/head(_:use:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"head","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","url":"\/documentation\/hummingbird\/routermethods\/head(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"url":"\/documentation\/hummingbird\/callbackresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","kind":"symbol","title":"CallbackResponder","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CallbackResponder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"abstract":[{"type":"text","text":"Responder that calls supplied closure"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/delete(_:use:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"delete","kind":"identifier"},{"kind":"text","text":"("},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"DELETE path for async closure returning type conforming to ResponseGenerator","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/delete(_:use:)","role":"symbol","url":"\/documentation\/hummingbird\/routermethods\/delete(_:use:)","title":"delete(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"type":"topic","kind":"symbol","title":"RequestContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"type":"text","text":" "},{"text":"that is associated with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","url":"\/documentation\/hummingbird\/requestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/on(_:method:use:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"on"},{"text":"(","kind":"text"},{"text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":", "},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"ResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Add path for async closure","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/on(_:method:use:)","role":"symbol","url":"\/documentation\/hummingbird\/routermethods\/on(_:method:use:)","title":"on(_:method:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/get(_:use:)":{"title":"get(_:use:)","role":"symbol","abstract":[{"type":"text","text":"GET path for async closure returning type conforming to ResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/get(_:use:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"get"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbird\/routermethods\/get(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"abstract":[{"type":"text","text":"A type that has a single method to build a HTTPResponder"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HTTPResponderBuilder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","kind":"symbol","url":"\/documentation\/hummingbird\/httpresponderbuilder","title":"HTTPResponderBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"title":"RouterGroup","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/routergroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"text":" ","type":"text"},{"type":"text","text":"suffix to the endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","kind":"symbol","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"url":"\/documentation\/hummingbird\/routerresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","kind":"symbol","title":"RouterResponder","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterResponder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"abstract":[]}}}