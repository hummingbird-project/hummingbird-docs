{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"},{"type":"inheritedBy","title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext"],"kind":"relationships"},{"type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"],"kind":"relationships"}],"seeAlsoSections":[{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment"],"anchor":"Miscellaneous","generated":true}],"sections":[],"abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Protocol","role":"symbol","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird23InitializableFromSourceP","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"title":"InitializableFromSource","navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"],"anchor":"Associated-Types","generated":true},{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)"],"anchor":"Initializers","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"> : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/hummingbird\/initializablefromsource"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"type":"topic","abstract":[{"text":"Access environment variables","type":"text"}],"title":"Environment","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","url":"\/documentation\/hummingbird\/environment","kind":"symbol","navigatorTitle":[{"text":"Environment","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"type":"topic","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"title":"RequestContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","url":"\/documentation\/hummingbird\/requestcontext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketRequestContext":{"url":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketRequestContext","kind":"identifier"}],"title":"WebSocketRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext","navigatorTitle":[{"text":"WebSocketRequestContext","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Request context protocol requirement for routers that support WebSockets"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts used with RouterBuilder should conform to."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","role":"symbol","navigatorTitle":[{"text":"RouterRequestContext","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterRequestContext","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","title":"RouterRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"abstract":[{"type":"text","text":"A RequestContext that can be initialized from another RequestContext."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","url":"\/documentation\/hummingbird\/childrequestcontext","navigatorTitle":[{"kind":"identifier","text":"ChildRequestContext"}],"title":"ChildRequestContext","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChildRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"role":"symbol","type":"topic","title":"BasicLambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"abstract":[{"text":"The default Lambda request context.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicLambdaRequestContext"}]},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"role":"symbol","type":"topic","title":"BasicRequestContext","url":"\/documentation\/hummingbird\/basicrequestcontext","navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}],"abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"title":"AuthRequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","navigatorTitle":[{"kind":"identifier","text":"AuthRequestContext"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthRequestContext"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/authrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionRequestContext":{"title":"SessionRequestContext","abstract":[{"type":"text","text":"Protocol for RequestContext that stores session data"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","navigatorTitle":[{"text":"SessionRequestContext","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/sessionrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"url":"\/documentation\/hummingbird\/initializablefromsource\/source","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","title":"Source","required":true,"type":"topic","abstract":[],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","role":"symbol","navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/initializablefromsource","title":"InitializableFromSource"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/init(source:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)","title":"init(source:)","url":"\/documentation\/hummingbird\/initializablefromsource\/init(source:)","type":"topic","required":true,"defaultImplementations":1,"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Source","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa"},{"kind":"text","text":")"}],"abstract":[{"text":"Initialise from source type","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"abstract":[{"type":"text","text":"A Request Context that is initialized with the Event that triggered the Lambda"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","role":"symbol","navigatorTitle":[{"text":"LambdaRequestContext","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","title":"LambdaRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"type":"topic","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","kind":"symbol","title":"RemoteAddressRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemoteAddressRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"role":"symbol","type":"topic","title":"Request","url":"\/documentation\/hummingbirdcore\/request","navigatorTitle":[{"kind":"identifier","text":"Request"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"abstract":[{"type":"text","text":"Default implementation of a request context that supports WebSockets"}],"kind":"symbol","url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext","navigatorTitle":[{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"title":"BasicWebSocketRequestContext","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicWebSocketRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicSessionRequestContext":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","url":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext","role":"symbol","title":"BasicSessionRequestContext","navigatorTitle":[{"kind":"identifier","text":"BasicSessionRequestContext"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicSessionRequestContext"}],"type":"topic","abstract":[{"text":"Implementation of a basic request context that supports session storage and authenticators","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"type":"topic","abstract":[{"text":"Basic implementation of a context that can be used with `RouterBuilder``","type":"text"}],"title":"BasicRouterRequestContext","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRouterRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","kind":"symbol","navigatorTitle":[{"text":"BasicRouterRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"abstract":[{"text":"Implementation of a basic request context that supports authenticators","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicAuthRequestContext"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAuthRequestContext"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","title":"BasicAuthRequestContext"}}}