{"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InitializableFromSource"},{"kind":"text","text":"<"},{"text":"Source","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}]}]}],"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InitializableFromSource","kind":"identifier"}],"role":"symbol","title":"InitializableFromSource","roleHeading":"Protocol","symbolKind":"protocol","navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"externalID":"s:11Hummingbird23InitializableFromSourceP","modules":[{"name":"Hummingbird"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext"],"title":"Inherited By","type":"inheritedBy","kind":"relationships"},{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"],"title":"Conforming Types","type":"conformingTypes"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment"],"title":"Miscellaneous","anchor":"Miscellaneous"}],"variants":[{"paths":["\/documentation\/hummingbird\/initializablefromsource"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"],"generated":true,"anchor":"Associated-Types","title":"Associated Types"},{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)-2qxvp"],"anchor":"Initializers","generated":true}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterRequestContext"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterRequestContext"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","title":"RouterRequestContext","url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","abstract":[{"text":"Protocol that all request contexts used with RouterBuilder should conform to.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAuthRequestContext"}],"url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","type":"topic","abstract":[{"text":"Implementation of a basic request context that supports authenticators","type":"text"}],"title":"BasicAuthRequestContext","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","navigatorTitle":[{"text":"BasicAuthRequestContext","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","kind":"symbol","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"title":"BasicRequestContext","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/basicrequestcontext"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicWebSocketRequestContext"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext","title":"BasicWebSocketRequestContext","url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","abstract":[{"text":"Default implementation of a request context that supports WebSockets","type":"text"}]},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"kind":"symbol","role":"symbol","abstract":[],"required":true,"type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Source"}],"title":"Source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","url":"\/documentation\/hummingbird\/initializablefromsource\/source"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","type":"topic","abstract":[{"text":"A Request Context that is initialized with the Event that triggered the Lambda","type":"text"}],"title":"LambdaRequestContext","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContext"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","url":"\/documentation\/index","title":"Hummingbird Documentation","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicSessionRequestContext":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","kind":"symbol","abstract":[{"type":"text","text":"Implementation of a basic request context that supports session storage and authenticators"}],"navigatorTitle":[{"text":"BasicSessionRequestContext","kind":"identifier"}],"title":"BasicSessionRequestContext","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicSessionRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/init(source:)-2qxvp":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"source"},{"text":": ","kind":"text"},{"text":"Source","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbird\/initializablefromsource\/init(source:)-2qxvp","defaultImplementations":1,"type":"topic","abstract":[{"text":"Initialise from source type","type":"text"}],"title":"init(source:)","role":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)-2qxvp","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"AuthRequestContext"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/authrequestcontext","title":"AuthRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthRequestContext"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","type":"topic","abstract":[{"text":"Protocol that all request contexts should conform to if they want to support","type":"text"},{"text":" ","type":"text"},{"text":"authentication middleware","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"kind":"symbol","role":"symbol","abstract":[{"text":"A RequestContext that can be initialized from another RequestContext.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChildRequestContext","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChildRequestContext"}],"title":"ChildRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","url":"\/documentation\/hummingbird\/childrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","title":"Request","url":"\/documentation\/hummingbirdcore\/request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/sessionrequestcontext","type":"topic","abstract":[{"text":"Protocol for RequestContext that stores session data","type":"text"}],"title":"SessionRequestContext","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","navigatorTitle":[{"text":"SessionRequestContext","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext","title":"WebSocketRequestContext","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"WebSocketRequestContext"}],"abstract":[{"type":"text","text":"Request context protocol requirement for routers that support WebSockets"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InitializableFromSource","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","title":"InitializableFromSource","url":"\/documentation\/hummingbird\/initializablefromsource","abstract":[{"type":"text","text":"A type that can be initialized from another type"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RemoteAddressRequestContext"}],"type":"topic","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"title":"RemoteAddressRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BasicLambdaRequestContext","kind":"identifier"}],"abstract":[{"text":"The default Lambda request context.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","title":"BasicLambdaRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicRouterRequestContext"}],"kind":"symbol","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","title":"BasicRouterRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BasicRouterRequestContext","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","abstract":[{"text":"Basic implementation of a context that can be used with `RouterBuilder``","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","title":"RequestContext","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"url":"\/documentation\/hummingbird\/requestcontext","type":"topic","role":"symbol","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":", and is therefore instantiated alongside the request."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"url":"\/documentation\/hummingbird\/environment","type":"topic","abstract":[{"type":"text","text":"Access environment variables"}],"title":"Environment","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","navigatorTitle":[{"text":"Environment","kind":"identifier"}],"kind":"symbol"}}}