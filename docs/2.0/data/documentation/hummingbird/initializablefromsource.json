{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"s:11Hummingbird23InitializableFromSourceP","modules":[{"name":"Hummingbird"}],"symbolKind":"protocol","navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"roleHeading":"Protocol","title":"InitializableFromSource","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"role":"symbol"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"],"anchor":"Associated-Types","title":"Associated Types","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)"],"anchor":"Initializers","title":"Initializers","generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"],"kind":"relationships","type":"inheritsFrom","title":"Inherits From"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext"],"kind":"relationships","type":"inheritedBy","title":"Inherited By"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"],"kind":"relationships","type":"conformingTypes","title":"Conforming Types"}],"abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment"],"anchor":"Miscellaneous","title":"Miscellaneous","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","text":"Source"},{"kind":"text","text":"> : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/initializablefromsource"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"},"references":{"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"Request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"kind":"symbol"},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicAuthRequestContext","kind":"identifier"}],"title":"BasicAuthRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","abstract":[{"text":"Implementation of a basic request context that supports authenticators","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"BasicAuthRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"title":"RequestContext","url":"\/documentation\/hummingbird\/requestcontext","role":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"type":"topic","navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"title":"AuthRequestContext","url":"\/documentation\/hummingbirdauth\/authrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketRequestContext","kind":"identifier"}],"title":"WebSocketRequestContext","abstract":[{"text":"Request context protocol requirement for routers that support WebSockets","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext","role":"symbol","navigatorTitle":[{"text":"WebSocketRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionRequestContext","kind":"identifier"}],"title":"SessionRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","abstract":[{"type":"text","text":"Protocol for RequestContext that stores session data"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"SessionRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/sessionrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemoteAddressRequestContext"}],"title":"RemoteAddressRequestContext","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","role":"symbol","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"navigatorTitle":[{"kind":"identifier","text":"RemoteAddressRequestContext"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"title":"Source","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","required":true,"role":"symbol","abstract":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"}],"url":"\/documentation\/hummingbird\/initializablefromsource\/source"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"abstract":[{"type":"text","text":"Protocol that all request contexts used with RouterBuilder should conform to."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RouterRequestContext"}],"title":"RouterRequestContext","url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"}],"title":"LambdaRequestContext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","abstract":[{"type":"text","text":"A Request Context that is initialized with the Event that triggered the Lambda"}],"role":"symbol","navigatorTitle":[{"text":"LambdaRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","type":"topic","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRequestContext"}],"url":"\/documentation\/hummingbird\/basicrequestcontext","title":"BasicRequestContext","role":"symbol","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"abstract":[{"text":"Basic implementation of a context that can be used with `RouterBuilder``","type":"text"}],"type":"topic","navigatorTitle":[{"text":"BasicRouterRequestContext","kind":"identifier"}],"title":"BasicRouterRequestContext","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRouterRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"abstract":[{"type":"text","text":"Default implementation of a request context that supports WebSockets"}],"type":"topic","navigatorTitle":[{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"title":"BasicWebSocketRequestContext","url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicWebSocketRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"navigatorTitle":[{"kind":"identifier","text":"Environment"}],"abstract":[{"type":"text","text":"Access environment variables"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","title":"Environment","type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/environment"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicSessionRequestContext":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","url":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext","navigatorTitle":[{"text":"BasicSessionRequestContext","kind":"identifier"}],"title":"BasicSessionRequestContext","abstract":[{"type":"text","text":"Implementation of a basic request context that supports session storage and authenticators"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicSessionRequestContext","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"title":"InitializableFromSource","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","role":"symbol","navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"url":"\/documentation\/hummingbird\/initializablefromsource"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"abstract":[{"type":"text","text":"The default Lambda request context."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"title":"BasicLambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicLambdaRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/init(source:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)","title":"init(source:)","required":true,"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Source","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa"},{"kind":"text","text":")"}],"defaultImplementations":1,"kind":"symbol","url":"\/documentation\/hummingbird\/initializablefromsource\/init(source:)","role":"symbol","abstract":[{"type":"text","text":"Initialise from source type"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChildRequestContext","kind":"identifier"}],"title":"ChildRequestContext","abstract":[{"type":"text","text":"A RequestContext that can be initialized from another RequestContext."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/childrequestcontext"},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"title":"Swift.SendableMetatype","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP","type":"unresolvable"}}}