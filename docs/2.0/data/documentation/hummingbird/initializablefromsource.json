{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/initializablefromsource"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Protocol","externalID":"s:11Hummingbird23InitializableFromSourceP","title":"InitializableFromSource","symbolKind":"protocol","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}]},"topicSections":[{"anchor":"Associated-Types","title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"],"generated":true},{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)"],"generated":true}],"abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"seeAlsoSections":[{"anchor":"Miscellaneous","title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment"],"generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","text":"Source","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa"},{"kind":"text","text":"> : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}]}],"kind":"declarations"}],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom"},{"kind":"relationships","title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext"],"type":"inheritedBy"},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"],"type":"conformingTypes"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"references":{"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"BasicLambdaRequestContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicLambdaRequestContext","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The default Lambda request context."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","title":"BasicLambdaRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"title":"BasicAuthRequestContext","url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicAuthRequestContext"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAuthRequestContext"}],"abstract":[{"text":"Implementation of a basic request context that supports authenticators","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"url":"\/documentation\/hummingbirdauth\/authrequestcontext","title":"AuthRequestContext","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionRequestContext","kind":"identifier"}],"title":"SessionRequestContext","navigatorTitle":[{"text":"SessionRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol for RequestContext that stores session data","type":"text"}],"url":"\/documentation\/hummingbirdauth\/sessionrequestcontext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicSessionRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicSessionRequestContext"}],"title":"BasicSessionRequestContext","navigatorTitle":[{"kind":"identifier","text":"BasicSessionRequestContext"}],"abstract":[{"text":"Implementation of a basic request context that supports session storage and authenticators","type":"text"}],"url":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"kind":"symbol","title":"BasicWebSocketRequestContext","type":"topic","url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicWebSocketRequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"BasicWebSocketRequestContext"}],"role":"symbol","abstract":[{"type":"text","text":"Default implementation of a request context that supports WebSockets"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketRequestContext":{"url":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketRequestContext","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"WebSocketRequestContext","kind":"identifier"}],"abstract":[{"text":"Request context protocol requirement for routers that support WebSockets","type":"text"}],"title":"WebSocketRequestContext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RemoteAddressRequestContext"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemoteAddressRequestContext"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","title":"RemoteAddressRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/init(source:)":{"role":"symbol","kind":"symbol","defaultImplementations":1,"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","text":"Source"},{"kind":"text","text":")"}],"required":true,"type":"topic","abstract":[{"text":"Initialise from source type","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)","url":"\/documentation\/hummingbird\/initializablefromsource\/init(source:)","title":"init(source:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChildRequestContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","abstract":[{"text":"A RequestContext that can be initialized from another RequestContext.","type":"text"}],"url":"\/documentation\/hummingbird\/childrequestcontext","title":"ChildRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContext"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaRequestContext"}],"type":"topic","abstract":[{"type":"text","text":"A Request Context that is initialized with the Event that triggered the Lambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","title":"LambdaRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRequestContext"}],"type":"topic","kind":"symbol","title":"BasicRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","url":"\/documentation\/hummingbird\/basicrequestcontext","navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"url":"\/documentation\/hummingbird\/initializablefromsource","title":"InitializableFromSource","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRouterRequestContext","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"BasicRouterRequestContext","kind":"identifier"}],"abstract":[{"text":"Basic implementation of a context that can be used with `RouterBuilder``","type":"text"}],"title":"BasicRouterRequestContext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"title":"RequestContext","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/requestcontext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":", and is therefore instantiated alongside the request."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"title":"Request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"title":"Environment","navigatorTitle":[{"text":"Environment","kind":"identifier"}],"abstract":[{"type":"text","text":"Access environment variables"}],"url":"\/documentation\/hummingbird\/environment","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"title":"Source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"}],"url":"\/documentation\/hummingbird\/initializablefromsource\/source","kind":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterRequestContext","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"RouterRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts used with RouterBuilder should conform to.","type":"text"}],"title":"RouterRequestContext","kind":"symbol","url":"\/documentation\/hummingbirdrouter\/routerrequestcontext"}}}