{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)"]}],"abstract":[{"type":"text","text":"set value for key. If value already exists overwrite it"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/set(key:value:expires:)"},"metadata":{"required":true,"externalID":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF","modules":[{"name":"Hummingbird"}],"title":"set(key:value:expires:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Object","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp","text":"Object","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expires"},{"text":": ","kind":"text"},{"text":"Duration","preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"set","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Object"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp","text":"Object","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"expires"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Object"},{"text":" : ","kind":"text"},{"text":"Decodable","preciseIdentifier":"s:Se","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Object","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SE","text":"Encodable"},{"text":", ","kind":"text"},{"text":"Object","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"key","content":[{"inlineContent":[{"type":"text","text":"Key to store value against"}],"type":"paragraph"}]},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"Codable value to store","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If non-nil defines time that value will expire in. If nil and value already exists"},{"text":" ","type":"text"},{"text":"and it already has an expiration time then original expiration time should be conserved.","type":"text"}]}],"name":"expires"}],"kind":"parameters"}],"kind":"symbol","references":{"logo.png":{"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"url":"\/documentation\/hummingbird\/persistdriver","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","title":"PersistDriver","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersistDriver"}],"abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver/set(key:value:expires:)":{"kind":"symbol","role":"symbol","title":"set(key:value:expires:)","abstract":[{"text":"set value for key. If value already exists overwrite it","type":"text"}],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/set(key:value:expires:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"set","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Object","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp","text":"Object","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"expires","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Duration","preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","type":"topic","title":"Hummingbird","role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"title":"Hummingbird Documentation","url":"\/documentation\/index","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"}}}