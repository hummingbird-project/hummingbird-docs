{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Object"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13PersistDriverP3get3key2asqd__SgSS_qd__mtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp","kind":"typeIdentifier","text":"Object"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13PersistDriverP3get3key2asqd__SgSS_qd__mtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp","kind":"typeIdentifier","text":"Object"},{"text":"? ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Object"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Object"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Object","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Key used to look for value"}],"type":"paragraph"}],"name":"key"},{"name":"as","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Type you want value to be returned as. If it cannot be returned as this value then nil will be returned"}]}]}],"kind":"parameters"}],"sections":[],"metadata":{"modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird13PersistDriverP3get3key2asqd__SgSS_qd__mtYaKSeRd__SERd__s8SendableRd__lF","role":"symbol","required":true,"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Object"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"as","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13PersistDriverP3get3key2asqd__SgSS_qd__mtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp","text":"Object"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Object","preciseIdentifier":"s:11Hummingbird13PersistDriverP3get3key2asqd__SgSS_qd__mtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp"},{"kind":"text","text":"?"}],"title":"get(key:as:)","roleHeading":"Instance Method"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"get value for key","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"]]},"variants":[{"paths":["\/documentation\/hummingbird\/persistdriver\/get(key:as:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/get(key:as:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"title":"Hummingbird Documentation","type":"topic","url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver/get(key:as:)":{"required":true,"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Object"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"Object","preciseIdentifier":"s:11Hummingbird13PersistDriverP3get3key2asqd__SgSS_qd__mtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13PersistDriverP3get3key2asqd__SgSS_qd__mtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp","text":"Object","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/get(key:as:)","kind":"symbol","title":"get(key:as:)","url":"\/documentation\/hummingbird\/persistdriver\/get(key:as:)","abstract":[{"type":"text","text":"get value for key"}]},"logo.png":{"alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"kind":"symbol","type":"topic","title":"PersistDriver","url":"\/documentation\/hummingbird\/persistdriver","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistDriver","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"PersistDriver"}]}}}