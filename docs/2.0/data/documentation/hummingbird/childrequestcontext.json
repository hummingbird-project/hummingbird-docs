{"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"}],"variants":[{"paths":["\/documentation\/hummingbird\/childrequestcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"],"anchor":"Request-context","generated":true,"title":"Request context"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChildRequestContext"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird19ChildRequestContextP06ParentD0Qa","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/ParentContext","text":"ParentContext"},{"kind":"text","text":"> : "},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","text":"RequestContext"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","text":"Source"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:s5NeverO","kind":"typeIdentifier","text":"Never"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"mentions":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],"kind":"mentions"},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The init for the context is marked throwing as it is allowed to fail. If","type":"text"},{"text":" ","type":"text"},{"text":"it fails then the error is passed back up the middleware stack","type":"text"}]},{"type":"codeListing","code":["struct MyRequestContext: ChildRequestContext {","    init(context: MyParentRequestContext) throws {","        self.coreContext = context.coreContext","    }","}"],"syntax":null}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"A RequestContext that can be initialized from another RequestContext."}],"metadata":{"title":"ChildRequestContext","modules":[{"name":"Hummingbird"}],"role":"symbol","navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"symbolKind":"protocol","roleHeading":"Protocol","externalID":"s:11Hummingbird19ChildRequestContextP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChildRequestContext"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/ParentContext"],"anchor":"Associated-Types","generated":true,"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/init(context:)"],"anchor":"Initializers","generated":true,"title":"Initializers"}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","title":"RequestContext","url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":", and is therefore instantiated alongside the request."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","title":"ChildRequestContext","url":"\/documentation\/hummingbird\/childrequestcontext","navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChildRequestContext","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A RequestContext that can be initialized from another RequestContext."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext/ParentContext":{"title":"ParentContext","type":"topic","url":"\/documentation\/hummingbird\/childrequestcontext\/parentcontext","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParentContext"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier","text":"RequestContext"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/ParentContext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP","title":"Swift.SendableMetatype"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext/init(context:)":{"abstract":[{"type":"text","text":"Initialise RequestContext from source"}],"required":true,"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird19ChildRequestContextP06ParentD0Qa","kind":"typeIdentifier","text":"ParentContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/hummingbird\/childrequestcontext\/init(context:)","type":"topic","kind":"symbol","role":"symbol","title":"init(context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/init(context:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"title":"InitializableFromSource","url":"\/documentation\/hummingbird\/initializablefromsource","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}],"abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","title":"CoreRequestContextStorage","url":"\/documentation\/hummingbird\/corerequestcontextstorage","navigatorTitle":[{"kind":"identifier","text":"CoreRequestContextStorage"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreRequestContextStorage"}],"type":"topic","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationRequestContextSource":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","url":"\/documentation\/hummingbird\/applicationrequestcontextsource","title":"ApplicationRequestContextSource","navigatorTitle":[{"kind":"identifier","text":"ApplicationRequestContextSource"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationRequestContextSource"}],"type":"topic","abstract":[{"type":"text","text":"RequestContext source for contexts created by "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","isActive":true},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Application","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","kind":"symbol","url":"\/documentation\/hummingbird\/application","navigatorTitle":[{"text":"Application","kind":"identifier"}],"title":"Application","type":"topic","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"title":"RemoteAddressRequestContext","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemoteAddressRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"navigatorTitle":[{"text":"RequestContextSource","kind":"identifier"}],"title":"RequestContextSource","url":"\/documentation\/hummingbird\/requestcontextsource","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContextSource","kind":"identifier"}],"abstract":[{"text":"Protocol for source of request contexts","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"title":"Request Contexts","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/requestcontexts","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"role":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/request","kind":"symbol","title":"Request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"kind":"symbol","title":"BasicRequestContext","url":"\/documentation\/hummingbird\/basicrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"type":"topic","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"title":"Source","kind":"symbol","url":"\/documentation\/hummingbird\/initializablefromsource\/source","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}],"role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","required":true}}}