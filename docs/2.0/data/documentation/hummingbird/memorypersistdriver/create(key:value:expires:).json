{"variants":[{"paths":["\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:expires:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"kind":"symbol","metadata":{"roleHeading":"Instance Method","modules":[{"name":"Hummingbird"}],"title":"create(key:value:expires:)","externalID":"s:11Hummingbird19MemoryPersistDriverC6create3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s7Codablea","kind":"typeIdentifier","text":"Codable"},{"kind":"text","text":" & "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expires"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/create(key:value:expires:)"},"abstract":[{"type":"text","text":"create key\/value pair. If key already exist throw "},{"type":"codeVoice","code":"PersistError.duplicate"},{"type":"text","text":" error"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Codable","preciseIdentifier":"s:s7Codablea"},{"kind":"text","text":" & "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expires"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Key to store value against"}],"type":"paragraph"}],"name":"key"},{"content":[{"inlineContent":[{"type":"text","text":"Codable value to store"}],"type":"paragraph"}],"name":"value"},{"content":[{"inlineContent":[{"text":"If non-nil defines time that value will expire","type":"text"}],"type":"paragraph"}],"name":"expires"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver/create(key:value:expires:)":{"abstract":[{"type":"text","text":"create key\/value pair. If key already exist throw "},{"code":"PersistError.duplicate","type":"codeVoice"},{"type":"text","text":" error"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"typeIdentifier","preciseIdentifier":"s:s7Codablea"},{"text":" & ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"expires","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","kind":"symbol","role":"symbol","title":"create(key:value:expires:)","url":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:expires:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/create(key:value:expires:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"title":"MemoryPersistDriver","navigatorTitle":[{"text":"MemoryPersistDriver","kind":"identifier"}],"url":"\/documentation\/hummingbird\/memorypersistdriver","role":"symbol","abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemoryPersistDriver","kind":"identifier"}]},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null}}}