{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype"],"generated":true,"title":"Associated Types","anchor":"Associated-Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context"],"generated":true,"title":"Type Aliases","anchor":"Type-Aliases"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"anchor":"Application","generated":true,"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"]}],"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"],"kind":"relationships","title":"Inherits From"},{"type":"conformingTypes","kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/applicationprotocol"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Service","kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"code":"ApplicationProtocol","type":"codeVoice"},{"text":" is a protocol used to define your application. It provides the glue between your router and HTTP server.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Implementing a "},{"code":"ApplicationProtocol","type":"codeVoice"},{"type":"text","text":" requires two member variables: "},{"code":"responder","type":"codeVoice"},{"type":"text","text":" and "},{"code":"server","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["struct MyApp: ApplicationProtocol {","    \/\/\/ The responder will return an `Response` given an `Request` and a context","    var responder: some Responder<BasicRequestContext> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in \"Hello\" }","        return router.buildResponder()","    }","    \/\/\/ Defines your server type. This is the default value so in","    \/\/\/ effect is unnecessary","    var server: HTTPChannelBuilder<some ChildChannel> { .http1() }","}","let app = MyApp()","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If you donâ€™t want to create your own type, Hummingbird provides ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","isActive":true,"type":"reference"},{"text":" a concrete implementation of ","type":"text"},{"code":"ApplicationProtocol","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"metadata":{"externalID":"s:11Hummingbird19ApplicationProtocolP","symbolKind":"protocol","title":"ApplicationProtocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"roleHeading":"Protocol","modules":[{"name":"Hummingbird"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}]},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/responder-swift.property":{"url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP9ResponderQa","kind":"typeIdentifier","text":"Responder"}],"abstract":[{"type":"text","text":"Build the responder"}],"title":"responder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","type":"topic","required":true,"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/onServerRunning(_:)":{"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onServerRunning","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"This is called once the server is running and we have an active Channel"}],"title":"onServerRunning(_:)","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)","required":true},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","title":"ServiceLifecycle.Service"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Context":{"url":"\/documentation\/hummingbird\/applicationprotocol\/context","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"title":"ApplicationProtocol.Context","abstract":[{"text":"Context passed with Request to responder","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Context"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"type":"topic","url":"\/documentation\/hummingbird\/eventloopgroupprovider","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroupProvider"}],"abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopGroupProvider"}],"title":"EventLoopGroupProvider","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/services":{"url":"\/documentation\/hummingbird\/applicationprotocol\/services","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"services"},{"kind":"text","text":": ["},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"Service","kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P"},{"text":"]","kind":"text"}],"title":"services","abstract":[{"type":"text","text":"services attached to the application."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services","type":"topic","required":true,"role":"symbol","defaultImplementations":1,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Responder-swift.associatedtype":{"url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.associatedtype","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Responder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP"}],"title":"Responder","abstract":[{"type":"text","text":"Responder that generates a response from a requests and context"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype","required":true,"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/logger":{"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/logger","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"abstract":[{"text":"Logger","type":"text"}],"title":"logger","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger","required":true},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"type":"unresolvable","title":"Swift.SendableMetatype","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","title":"Hummingbird","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/configuration":{"url":"\/documentation\/hummingbird\/applicationprotocol\/configuration","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ApplicationConfiguration","preciseIdentifier":"s:11Hummingbird24ApplicationConfigurationV"}],"title":"configuration","abstract":[{"type":"text","text":"Application configuration"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration","required":true,"role":"symbol","defaultImplementations":1,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/eventLoopGroup":{"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoopGroup"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore14EventLoopGroupP","kind":"typeIdentifier","text":"EventLoopGroup"}],"abstract":[{"text":"event loop group used by application","type":"text"}],"title":"eventLoopGroup","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/runService(gracefulShutdownSignals:)":{"url":"\/documentation\/hummingbird\/applicationprotocol\/runservice(gracefulshutdownsignals:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runService","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"gracefulShutdownSignals"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:11UnixSignals0A6SignalV","kind":"typeIdentifier","text":"UnixSignal"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Helper function that runs application inside a ServiceGroup which will gracefully"},{"type":"text","text":" "},{"type":"text","text":"shutdown on signals SIGINT, SIGTERM"}],"title":"runService(gracefulShutdownSignals:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"TestingSetup","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp"}],"abstract":[{"type":"text","text":"Test "},{"code":"Application","type":"codeVoice"}],"title":"test(_:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","title":"ApplicationConfiguration","kind":"symbol","abstract":[{"text":"Application configuration","type":"text"}],"url":"\/documentation\/hummingbird\/applicationconfiguration","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationConfiguration","kind":"identifier"}],"navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/server":{"url":"\/documentation\/hummingbird\/applicationprotocol\/server","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"server"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV","kind":"typeIdentifier","text":"HTTPServerBuilder"}],"title":"server","abstract":[{"text":"Server channel builder","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server","required":true,"role":"symbol","defaultImplementations":1,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/processesRunBeforeServerStart":{"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"processesRunBeforeServerStart","kind":"identifier"},{"text":": [() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"type":"text","text":"Array of processes run before we kick off the server. These tend to be processes that need"},{"type":"text","text":" "},{"type":"text","text":"other services running but need to be run before the server is setup"}],"title":"processesRunBeforeServerStart","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol","role":"symbol","abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","title":"ApplicationProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"url":"\/documentation\/hummingbird\/application","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"title":"Application","abstract":[{"text":"Application type bringing together all the components of Hummingbird","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Application"}],"kind":"symbol"}}}