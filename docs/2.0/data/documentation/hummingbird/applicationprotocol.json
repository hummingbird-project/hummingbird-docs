{"seeAlsoSections":[{"generated":true,"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"anchor":"Application"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"topicSections":[{"generated":true,"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype"],"anchor":"Associated-Types"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services"],"anchor":"Instance-Properties"},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"],"anchor":"Instance-Methods"},{"generated":true,"title":"Type Aliases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context"],"anchor":"Type-Aliases"}],"variants":[{"paths":["\/documentation\/hummingbird\/applicationprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier","text":"Service"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"code":"ApplicationProtocol","type":"codeVoice"},{"text":" is a protocol used to define your application. It provides the glue between your router and HTTP server.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Implementing a "},{"code":"ApplicationProtocol","type":"codeVoice"},{"type":"text","text":" requires two member variables: "},{"code":"responder","type":"codeVoice"},{"type":"text","text":" and "},{"code":"server","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["struct MyApp: ApplicationProtocol {","    \/\/\/ The responder will return an `Response` given an `Request` and a context","    var responder: some Responder<BasicRequestContext> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in \"Hello\" }","        return router.buildResponder()","    }","    \/\/\/ Defines your server type. This is the default value so in","    \/\/\/ effect is unnecessary","    var server: HTTPChannelBuilder<some ChildChannel> { .http1() }","}","let app = MyApp()","try await app.runService()"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"If you donâ€™t want to create your own type, Hummingbird provides "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"type":"text","text":" a concrete implementation of "},{"code":"ApplicationProtocol","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"}],"externalID":"s:11Hummingbird19ApplicationProtocolP","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"modules":[{"name":"Hummingbird"}],"role":"symbol","title":"ApplicationProtocol","symbolKind":"protocol","roleHeading":"Protocol"},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"],"type":"inheritsFrom","kind":"relationships"},{"title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"],"type":"conformingTypes","kind":"relationships"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/eventLoopGroup":{"type":"topic","abstract":[{"type":"text","text":"event loop group used by application"}],"required":true,"title":"eventLoopGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoopGroup","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup","defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/server":{"kind":"symbol","abstract":[{"type":"text","text":"Server channel builder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server","title":"server","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/server","defaultImplementations":1,"required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"server"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV","text":"HTTPServerBuilder"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"title":"test(_:_:)","url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"TestingSetup","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"}],"abstract":[{"text":"Test ","type":"text"},{"type":"codeVoice","code":"Application"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"title":"ApplicationProtocol","type":"topic","abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","url":"\/documentation\/hummingbird\/applicationprotocol","navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/eventloopgroupprovider","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"title":"EventLoopGroupProvider"},"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/onServerRunning(_:)":{"title":"onServerRunning(_:)","defaultImplementations":1,"abstract":[{"type":"text","text":"This is called once the server is running and we have an active Channel"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onServerRunning","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"kind":"symbol","required":true,"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)","url":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/logger":{"title":"logger","abstract":[{"type":"text","text":"Logger"}],"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/logger","role":"symbol","defaultImplementations":1,"required":true,"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Responder-swift.associatedtype":{"role":"symbol","required":true,"title":"Responder","type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HTTPResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype","abstract":[{"text":"Responder that generates a response from a requests and context","type":"text"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.associatedtype"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"title":"Application","url":"\/documentation\/hummingbird\/application","navigatorTitle":[{"text":"Application","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Application","kind":"identifier"}],"abstract":[{"text":"Application type bringing together all the components of Hummingbird","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Context":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"abstract":[{"type":"text","text":"Context passed with Request to responder"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context","navigatorTitle":[{"text":"Context","kind":"identifier"}],"title":"ApplicationProtocol.Context"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/runService(gracefulShutdownSignals:)":{"title":"runService(gracefulShutdownSignals:)","abstract":[{"type":"text","text":"Helper function that runs application inside a ServiceGroup which will gracefully"},{"type":"text","text":" "},{"type":"text","text":"shutdown on signals SIGINT, SIGTERM"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runService"},{"kind":"text","text":"("},{"text":"gracefulShutdownSignals","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"UnixSignal","preciseIdentifier":"s:11UnixSignals0A6SignalV","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)","url":"\/documentation\/hummingbird\/applicationprotocol\/runservice(gracefulshutdownsignals:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/processesRunBeforeServerStart":{"type":"topic","abstract":[{"type":"text","text":"Array of processes run before we kick off the server. These tend to be processes that need"},{"type":"text","text":" "},{"type":"text","text":"other services running but need to be run before the server is setup"}],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart","title":"processesRunBeforeServerStart","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"processesRunBeforeServerStart"},{"kind":"text","text":": [() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":"]"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart","defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationConfiguration","kind":"identifier"}],"url":"\/documentation\/hummingbird\/applicationconfiguration","navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Application configuration","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","title":"ApplicationConfiguration"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/configuration":{"title":"configuration","defaultImplementations":1,"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/configuration","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird24ApplicationConfigurationV","text":"ApplicationConfiguration"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration","required":true,"abstract":[{"text":"Application configuration","type":"text"}]},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP","title":"Swift.SendableMetatype","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","type":"unresolvable","title":"ServiceLifecycle.Service"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/responder-swift.property":{"kind":"symbol","abstract":[{"type":"text","text":"Build the responder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","title":"responder","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.property","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP9ResponderQa","text":"Responder"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/services":{"type":"topic","abstract":[{"text":"services attached to the application.","type":"text"}],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services","title":"services","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"services"},{"kind":"text","text":": ["},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier","text":"Service"},{"kind":"text","text":"]"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/services","defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","url":"\/documentation\/hummingbird","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird"}}}