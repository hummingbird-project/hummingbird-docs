{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ApplicationProtocol"},{"type":"text","text":" is a protocol used to define your application. It provides the glue between your router and HTTP server."}]},{"type":"paragraph","inlineContent":[{"text":"Implementing a ","type":"text"},{"type":"codeVoice","code":"ApplicationProtocol"},{"text":" requires two member variables: ","type":"text"},{"type":"codeVoice","code":"responder"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"server"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct MyApp: ApplicationProtocol {","    \/\/\/ The responder will return an `Response` given an `Request` and a context","    var responder: some Responder<BasicRequestContext> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in \"Hello\" }","        return router.buildResponder()","    }","    \/\/\/ Defines your server type. This is the default value so in","    \/\/\/ effect is unnecessary","    var server: HTTPChannelBuilder<some ChildChannel> { .http1() }","}","let app = MyApp()","try await app.runService()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you donâ€™t want to create your own type, Hummingbird provides "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","isActive":true,"type":"reference"},{"type":"text","text":" a concrete implementation of "},{"code":"ApplicationProtocol","type":"codeVoice"},{"type":"text","text":"."}]}]}],"metadata":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"title":"ApplicationProtocol","symbolKind":"protocol","externalID":"s:11Hummingbird19ApplicationProtocolP","roleHeading":"Protocol","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}]},"abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"],"type":"inheritsFrom","title":"Inherits From"},{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"],"type":"conformingTypes","title":"Conforming Types"}],"topicSections":[{"anchor":"Associated-Types","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype"],"title":"Associated Types"},{"anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services"],"title":"Instance Properties"},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"],"title":"Instance Methods"},{"anchor":"Type-Aliases","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context"],"title":"Type Aliases"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/applicationprotocol"]}],"seeAlsoSections":[{"anchor":"Application","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"title":"Application"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"title":"ApplicationConfiguration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ApplicationConfiguration"}],"kind":"symbol","url":"\/documentation\/hummingbird\/applicationconfiguration","abstract":[{"type":"text","text":"Application configuration"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationConfiguration"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","title":"ApplicationProtocol","type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Context":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"abstract":[{"type":"text","text":"Context passed with Request to responder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context","url":"\/documentation\/hummingbird\/applicationprotocol\/context","kind":"symbol","type":"topic","role":"symbol","title":"ApplicationProtocol.Context","navigatorTitle":[{"kind":"identifier","text":"Context"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","url":"\/documentation\/hummingbird","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"title":"test(_:_:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","kind":"symbol","abstract":[{"type":"text","text":"Test "},{"type":"codeVoice","code":"Application"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting0B5SetupV","text":"TestingSetup","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP","text":"TestClientProtocol","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/services":{"abstract":[{"type":"text","text":"services attached to the application."}],"defaultImplementations":1,"kind":"symbol","type":"topic","required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"services","kind":"identifier"},{"text":": [","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/services","title":"services","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services"},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP","title":"Swift.SendableMetatype"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/runService(gracefulShutdownSignals:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runService"},{"kind":"text","text":"("},{"kind":"externalParam","text":"gracefulShutdownSignals"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"UnixSignal","preciseIdentifier":"s:11UnixSignals0A6SignalV"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Helper function that runs application inside a ServiceGroup which will gracefully"},{"type":"text","text":" "},{"type":"text","text":"shutdown on signals SIGINT, SIGTERM"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)","url":"\/documentation\/hummingbird\/applicationprotocol\/runservice(gracefulshutdownsignals:)","kind":"symbol","type":"topic","role":"symbol","title":"runService(gracefulShutdownSignals:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"kind":"symbol","role":"symbol","title":"Application","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","navigatorTitle":[{"kind":"identifier","text":"Application"}],"type":"topic","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"url":"\/documentation\/hummingbird\/application"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/configuration":{"abstract":[{"text":"Application configuration","type":"text"}],"defaultImplementations":1,"kind":"symbol","type":"topic","required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configuration","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ApplicationConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird24ApplicationConfigurationV"}],"title":"configuration","url":"\/documentation\/hummingbird\/applicationprotocol\/configuration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/processesRunBeforeServerStart":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"processesRunBeforeServerStart"},{"kind":"text","text":": [() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Array of processes run before we kick off the server. These tend to be processes that need"},{"type":"text","text":" "},{"type":"text","text":"other services running but need to be run before the server is setup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart","url":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart","kind":"symbol","type":"topic","required":true,"title":"processesRunBeforeServerStart","role":"symbol","defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Responder-swift.associatedtype":{"abstract":[{"text":"Responder that generates a response from a requests and context","type":"text"}],"kind":"symbol","type":"topic","required":true,"role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HTTPResponderP","text":"HTTPResponder","kind":"typeIdentifier"}],"title":"Responder","url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.associatedtype","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype"},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","type":"unresolvable","title":"ServiceLifecycle.Service"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/eventloopgroupprovider","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"title":"EventLoopGroupProvider"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/responder-swift.property":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP9ResponderQa","text":"Responder"}],"abstract":[{"text":"Build the responder","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.property","kind":"symbol","type":"topic","required":true,"title":"responder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/logger":{"abstract":[{"type":"text","text":"Logger"}],"defaultImplementations":1,"kind":"symbol","type":"topic","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/logger","title":"logger","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/onServerRunning(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onServerRunning"},{"kind":"text","text":"("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"abstract":[{"text":"This is called once the server is running and we have an active Channel","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)","url":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)","kind":"symbol","type":"topic","required":true,"title":"onServerRunning(_:)","role":"symbol","defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/server":{"abstract":[{"text":"Server channel builder","type":"text"}],"defaultImplementations":1,"kind":"symbol","type":"topic","required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"server","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV","text":"HTTPServerBuilder","kind":"typeIdentifier"}],"title":"server","url":"\/documentation\/hummingbird\/applicationprotocol\/server","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/eventLoopGroup":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoopGroup"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7NIOCore14EventLoopGroupP","kind":"typeIdentifier","text":"EventLoopGroup"}],"abstract":[{"text":"event loop group used by application","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup","url":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup","kind":"symbol","type":"topic","required":true,"title":"eventLoopGroup","role":"symbol","defaultImplementations":1}}}