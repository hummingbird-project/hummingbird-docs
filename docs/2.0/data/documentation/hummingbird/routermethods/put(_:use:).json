{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"put"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":" = \"\", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["Linux"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/put(_:use:)"},"abstract":[{"type":"text","text":"PUT path for async closure returning type conforming to ResponseGenerator"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/routermethods\/put(_:use:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"put"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","externalID":"s:11Hummingbird13RouterMethodsPAAE3put_3usexAA0B4PathV_qd__0A4Core7RequestV_7ContextQztYaYbKctAA17ResponseGeneratorRd__lF","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Hummingbird"}],"title":"put(_:use:)","extendedModule":"Hummingbird"},"kind":"symbol","sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/put(_:use:)":{"kind":"symbol","type":"topic","abstract":[{"text":"PUT path for async closure returning type conforming to ResponseGenerator","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/put(_:use:)","title":"put(_:use:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"put","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/routermethods\/put(_:use:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"url":"\/documentation\/hummingbird\/routermethods\/context","title":"Context","required":true,"abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"url":"\/documentation\/hummingbird\/responsegenerator","title":"ResponseGenerator","kind":"symbol","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"title":"RouterPath","type":"topic","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"abstract":[{"type":"text","text":"Split router path into components"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routerpath","role":"symbol"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"url":"\/documentation\/hummingbirdcore\/request","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"title":"RouterMethods","url":"\/documentation\/hummingbird\/routermethods","navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"abstract":[{"text":"Conform to ","type":"text"},{"code":"RouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"}}}