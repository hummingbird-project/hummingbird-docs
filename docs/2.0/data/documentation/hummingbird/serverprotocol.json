{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"kind":"article","sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"By default a Hummingbird application runs with a HTTP\/1.1 server. The Hummingbird comes with additional libraries that allow you to change this to use TLS, HTTP2 and WebSockets","type":"text"}]},{"type":"heading","text":"Setting server protocol","anchor":"Setting-server-protocol","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you create your "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","isActive":true},{"type":"text","text":" there is a parameter "},{"type":"codeVoice","code":"server"},{"type":"text","text":" that is used to define the server protocol and its configuration. Below we are creating a server that support HTTP1 with a idle timeout for requests set to one minutes."}]},{"type":"codeListing","syntax":"swift","code":["let app = Application(","    router: router,","    server: .http1(idleTimeout: .seconds(60))",")"]},{"type":"heading","text":"HTTPS\/TLS","anchor":"HTTPSTLS","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"HTTPS is pretty much a requirement for a server these days. Many people run Nginx in front of their server to implement HTTPS, but it is also possible to setup HTTPS inside your Hummingbird application."}]},{"type":"codeListing","syntax":"swift","code":["import HummingbirdTLS","","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain,","    privateKey: privateKey",")","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"HTTPS is the HTTP protocol with an added encryption layer of TLS to protect the traffic. The "},{"type":"codeVoice","code":"tls"},{"type":"text","text":" function applies the encryption layer using the crytographic keys supplied in the "},{"type":"codeVoice","code":"TLSConfiguration"},{"type":"text","text":"."}]},{"type":"heading","text":"HTTP2","anchor":"HTTP2","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"HTTP2 is becoming increasingly common. It allows you to service multiple HTTP requests concurrently over one connection. The HTTP2 protocol does not require you to use TLS but it is in effect only supported over TLS as there arenâ€™t any web browsers that support HTTP2 without TLS. Given this the Hummingbird implementation also requires TLS."}]},{"type":"codeListing","syntax":"swift","code":["import HummingbirdHTTP2","","let app = Application(","    router: router,","    server: .http2(","        tlsConfiguration: tlsConfiguration,","        configuration: .init(","            idleTimeout: .seconds(60),","            gracefulCloseTimeout: .seconds(15),","            maxAgeTimeout: .seconds(900),","            streamConfiguration: .init(idleTimeout: .seconds(60))","        )","    )",")"]},{"type":"paragraph","inlineContent":[{"text":"The HTTP2 upgrade protocol has a fair amount of configuration. It includes a number of different timeouts,","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"idleTimeout","type":"codeVoice"},{"text":": How long a connection is kept open while idle","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"gracefulCloseTimeout","type":"codeVoice"},{"text":": The maximum amount of time to wait for the client to respond before all streams are closed after the second GOAWAY is sent","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"maxAgeTimeout"},{"type":"text","text":": a maximum amount of time a connection should be open."},{"type":"text","text":" "},{"type":"text","text":"Then each HTTP2 stream (request) has its own idle timeout as well."}],"type":"paragraph"}]}]},{"type":"heading","text":"WebSockets","anchor":"WebSockets","level":2},{"type":"paragraph","inlineContent":[{"text":"WebSocket upgrades are also implemented via the server protocol parameter.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import HummingbirdWebSocket","","let app = Application(","    router: router,","    server: .http1WebSocketUpgrade { request, channel, logger in","        \/\/ upgrade if request URI is \"\/ws\"","        guard request.uri == \"\/ws\" else { return .dontUpgrade }","        \/\/ The upgrade response includes the headers to include in the response and ","        \/\/ the WebSocket handler","        return .upgrade([:]) { inbound, outbound, context in","            for try await frame in inbound {","                \/\/ send \"Received\" for every frame we receive","                try await outbound.write(.text(\"Received\"))","            }","        }","    }",")"]},{"type":"paragraph","inlineContent":[{"text":"In a similar way you add TLS encryption to the HTTP1 connection you can also add TLS to a connection that accepts WebSocket upgrades.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let app = Application(","    router: router,","    server: .tls(","        .http1WebSocketUpgrade { request, channel, logger in","            \/\/ upgrade if request URI is \"\/ws\"","            guard request.uri == \"\/ws\" else { return .dontUpgrade }","            \/\/ The upgrade response includes the headers to include in the response and ","            \/\/ the WebSocket handler","            return .upgrade([:]) { inbound, outbound, context in","                try await outbound.write(.text(\"Hello\"))","            }","        },","        tlsConfiguration: tlsConfiguration","    )    ",")"]},{"type":"paragraph","inlineContent":[{"text":"To find out more about WebSocket upgrades and handling WebSocket connections read ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","isActive":true},{"text":".","type":"text"}]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServerProtocol","interfaceLanguage":"swift"},"metadata":{"roleHeading":"API Collection","role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}],"title":"Server protocol"},"abstract":[{"type":"text","text":"Support for TLS and HTTP2 upgrades"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"anchor":"Hummingbird-Server","title":"Hummingbird Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2"],"generated":true}],"topicSections":[{"anchor":"Reference","title":"Reference","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"Hummingbird Documentation","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"type":"topic","role":"article","title":"Logging, Metrics and Tracing","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","abstract":[{"text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working.","type":"text"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"title":"Persistent data","url":"\/documentation\/hummingbird\/persistentdata","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"article","abstract":[{"type":"text","text":"How to persist data between requests to your server."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"title":"Middleware","url":"\/documentation\/hummingbird\/middlewareguide","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"article","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","role":"article","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"title":"Router","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"url":"\/documentation\/hummingbird\/routerguide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterBuilderGuide":{"type":"topic","role":"article","title":"Result Builder Router","url":"\/documentation\/hummingbird\/routerbuilderguide","abstract":[{"text":"Building your router using a result builder.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","kind":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/WebSocketServerUpgrade":{"images":[{"identifier":"logo.png","type":"icon"}],"role":"article","type":"topic","title":"WebSocket Server Upgrade","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","url":"\/documentation\/hummingbird\/websocketserverupgrade","abstract":[{"text":"Support for upgrading HTTP1 connections to WebSocket.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"url":"\/documentation\/hummingbird\/application","title":"Application","navigatorTitle":[{"text":"Application","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Application","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"Application type bringing together all the components of Hummingbird","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdWebSocket","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"url":"\/documentation\/hummingbirdwebsocket","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoding":{"type":"topic","role":"article","title":"Request Decoding","url":"\/documentation\/hummingbird\/requestdecoding","abstract":[{"text":"Decoding of Requests with JSON content and other formats.","type":"text"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoding","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"url":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"collection","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"type":"topic","role":"article","title":"Testing","url":"\/documentation\/hummingbird\/testing","abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"url":"\/documentation\/hummingbird\/errorhandling","title":"Error Handling","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"article","abstract":[{"text":"How to build errors for the server to return.","type":"text"}]},"logo.png":{"identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"type":"topic","role":"article","title":"Migrating to Hummingbird v2","url":"\/documentation\/hummingbird\/migratingtov2","abstract":[{"text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2","type":"text"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"article","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoding":{"url":"\/documentation\/hummingbird\/responseencoding","title":"Response Encoding","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoding","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"article","abstract":[{"type":"text","text":"Writing Responses using JSON and other formats."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"type":"topic","role":"article","title":"Service Lifecycle","url":"\/documentation\/hummingbird\/servicelifecycle","abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","kind":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","abstract":[{"text":"Add TLS support to Hummingbird server.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdtls","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdTLS"}}}