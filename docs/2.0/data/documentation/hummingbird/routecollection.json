{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/routecollection"]}],"seeAlsoSections":[{"title":"Router","anchor":"Router","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"]}],"abstract":[{"type":"text","text":"Collection of routes"}],"topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/init(context:)"]},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/on(_:method:responder:)"]},{"title":"Default Implementations","anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/RouterMethods-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteCollection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext"}],"platforms":["Linux"],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection"},"sections":[],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"symbolKind":"class","externalID":"s:11Hummingbird15RouteCollectionC","role":"symbol","modules":[{"name":"Hummingbird"}],"title":"RouteCollection","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"RouteCollection"}]},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","title":"RouterGroup","url":"\/documentation\/hummingbird\/routergroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterGroup"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/routeroptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterOptions","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","title":"RouterOptions","abstract":[{"type":"text","text":"Router Options"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","url":"\/documentation\/hummingbird\/routerresponder","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterResponder"}],"title":"RouterResponder","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponderBuilder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","type":"topic","title":"HTTPResponderBuilder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"url":"\/documentation\/hummingbird\/httpresponderbuilder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","url":"\/documentation\/hummingbird\/requestid","navigatorTitle":[{"text":"RequestID","kind":"identifier"}],"type":"topic","title":"RequestID","kind":"symbol","role":"symbol","abstract":[{"text":"Generate Unique ID for each request","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestID","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","url":"\/documentation\/hummingbird\/callbackresponder","navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"type":"topic","title":"CallbackResponder","kind":"symbol","role":"symbol","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CallbackResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/init(context:)":{"role":"symbol","url":"\/documentation\/hummingbird\/routecollection\/init(context:)","abstract":[{"text":"Initialize RouteCollection","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/init(context:)","kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird15RouteCollectionC7Contextxmfp","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"title":"init(context:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","type":"topic","kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"title":"RouteCollection","url":"\/documentation\/hummingbird\/routecollection","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteCollection"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RouteCollection"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","role":"symbol","abstract":[{"text":"Collection of routes","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"url":"\/documentation\/hummingbird\/requestcontext","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"title":"HTTPResponder","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","kind":"symbol","url":"\/documentation\/hummingbird\/httpresponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/RouterMethods-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/RouterMethods-Implementations","kind":"article","url":"\/documentation\/hummingbird\/routecollection\/routermethods-implementations","title":"RouterMethods Implementations","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","title":"EndpointPath","url":"\/documentation\/hummingbird\/endpointpath","abstract":[{"type":"text","text":"Endpoint path storage"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","title":"Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"title":"RouterPath","type":"topic","role":"symbol","abstract":[{"text":"Split router path into components","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","kind":"symbol","url":"\/documentation\/hummingbird\/routerpath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","title":"Router","url":"\/documentation\/hummingbird\/router","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"code":"Responder","type":"codeVoice"},{"type":"text","text":" that will follow these rules."}],"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Router","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/add(middleware:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"middleware"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird15RouteCollectionC7Contextxmfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/add(middleware:)","title":"add(middleware:)","kind":"symbol","abstract":[{"type":"text","text":"Add middleware to RouteCollection"}],"url":"\/documentation\/hummingbird\/routecollection\/add(middleware:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/on(_:method:responder:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/on(_:method:responder:)","title":"on(_:method:responder:)","url":"\/documentation\/hummingbird\/routecollection\/on(_:method:responder:)","abstract":[{"text":"Add responder to call when path and method are matched","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Responder","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method"},{"kind":"text","text":", "},{"kind":"externalParam","text":"responder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Responder","preciseIdentifier":"s:11Hummingbird15RouteCollectionC2on_6method9responderACyxGXDAA10RouterPathV_9HTTPTypes11HTTPRequestV6MethodVqd__t7ContextQyd__RszAA13HTTPResponderRd__lF9ResponderL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/routermethods","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMethods","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","title":"RouterMethods","type":"topic","abstract":[{"type":"text","text":"Conform to "},{"code":"RouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}]},"logo.png":{"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","alt":null}}}