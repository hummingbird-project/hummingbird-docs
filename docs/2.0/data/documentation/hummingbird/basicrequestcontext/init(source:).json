{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/basicrequestcontext\/init(source:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP6SourceQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source","text":"Source"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"allocator: Allocator","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"logger: Logger"}]}]}],"type":"unorderedList"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/init(source:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Initialize an ","type":"text"},{"code":"RequestContext","type":"codeVoice"}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"source","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Source","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP6SourceQa"},{"text":")","kind":"text"}],"externalID":"s:11Hummingbird19BasicRequestContextV6sourceAcA011ApplicationcD6SourceV_tcfc","symbolKind":"init","modules":[{"name":"Hummingbird"}],"roleHeading":"Initializer","role":"symbol","title":"init(source:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"title":"Hummingbird Documentation","type":"topic","url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Source":{"required":true,"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source","abstract":[],"url":"\/documentation\/hummingbird\/requestcontext\/source","title":"Source","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","text":"ApplicationRequestContextSource","preciseIdentifier":"s:11Hummingbird31ApplicationRequestContextSourceV"}]},"logo.png":{"alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","title":"BasicRequestContext","role":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext","type":"topic","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/init(source:)":{"url":"\/documentation\/hummingbird\/basicrequestcontext\/init(source:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/init(source:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Source","preciseIdentifier":"s:11Hummingbird14RequestContextP6SourceQa"},{"kind":"text","text":")"}],"title":"init(source:)","type":"topic","abstract":[{"text":"Initialize an ","type":"text"},{"type":"codeVoice","code":"RequestContext"}]}}}