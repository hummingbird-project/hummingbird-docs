{"abstract":[{"text":"Maximum size of request body allowed when decoding requests.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"]]},"variants":[{"paths":["\/documentation\/hummingbird\/basicrequestcontext\/maxuploadsize"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/maxUploadSize","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","modules":[{"name":"Hummingbird"}],"symbolKind":"property","externalID":"s:11Hummingbird14RequestContextPAAE13maxUploadSizeSivp::SYNTHESIZED::s:11Hummingbird19BasicRequestContextV","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"maxUploadSize","extendedModule":"Hummingbird"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"BasicRequestContext","url":"\/documentation\/hummingbird\/basicrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/maxUploadSize":{"type":"topic","role":"symbol","title":"maxUploadSize","abstract":[{"type":"text","text":"Maximum size of request body allowed when decoding requests."}],"url":"\/documentation\/hummingbird\/basicrequestcontext\/maxuploadsize","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/maxUploadSize"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]}}}