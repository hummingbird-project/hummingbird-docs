{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"],"kind":"relationships","type":"inheritsFrom"},{"title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware"],"kind":"relationships","type":"inheritedBy"},{"title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketUpgradeMiddleware"],"kind":"relationships","type":"conformingTypes"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Input","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP5InputQa"},{"text":" == ","kind":"text"},{"text":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP6OutputQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"}],"platforms":["Linux"]}]},{"mentions":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide"],"kind":"mentions"},{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"All middleware has to conform to the protocol ","type":"text"},{"code":"RouterMiddleware","type":"codeVoice"},{"text":". This requires one function ","type":"text"},{"code":"handle(_:context:next)","type":"codeVoice"},{"text":" to be implemented. At some point in this function unless you want to shortcut the router and return your own response you should call ","type":"text"},{"code":"next(request, context)","type":"codeVoice"},{"text":" to continue down the middleware stack and return the result, or a result processed by your middleware.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The following is a simple logging middleware that outputs every URI being sent to the server","type":"text"}]},{"type":"codeListing","code":["public struct LogRequestsMiddleware<Context: RequestContext>: RouterMiddleware {","    public func handle(_ request: Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response {","        \/\/ log request URI","        context.logger.log(level: .debug, String(describing:request.uri.path))","        \/\/ pass request onto next middleware or the router and return response","        return try await next(request, context)","    }","}"],"syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/routermiddleware"]}],"seeAlsoSections":[{"anchor":"Middleware","generated":true,"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"]}],"abstract":[{"text":"Version of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"reference"},{"text":" whose Input is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"text":" and output is ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware"},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"title":"RouterMiddleware","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"modules":[{"name":"Hummingbird"}],"symbolKind":"protocol","roleHeading":"Protocol","externalID":"s:11Hummingbird16RouterMiddlewareP"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdBasicAuth/BasicAuthenticator":{"role":"symbol","type":"topic","title":"BasicAuthenticator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","url":"\/documentation\/hummingbirdbasicauth\/basicauthenticator","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicAuthenticator"}],"abstract":[{"type":"text","text":"Basic password authenticator"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAuthenticator"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","role":"article","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/middlewareguide","title":"Middleware","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"type":"topic","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","kind":"symbol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"title":"MiddlewareProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","title":"ContextTransform","type":"topic","role":"symbol","navigatorTitle":[{"text":"ContextTransform","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Router middleware that transforms the ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true,"type":"reference"},{"text":" and uses it with the contained","type":"text"},{"text":" ","type":"text"},{"text":"Middleware chain","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContextTransform","kind":"identifier"}],"url":"\/documentation\/hummingbirdrouter\/contexttransform"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ThrowingContextTransform":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ThrowingContextTransform","kind":"identifier"}],"url":"\/documentation\/hummingbirdrouter\/throwingcontexttransform","abstract":[{"type":"text","text":"Router middleware that transforms the "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true},{"type":"text","text":" and uses it with the contained"},{"type":"text","text":" "},{"type":"text","text":"Middleware chain. Used by "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup\/init(_:context:builder:)","isActive":true}],"kind":"symbol","type":"topic","title":"ThrowingContextTransform","role":"symbol","navigatorTitle":[{"text":"ThrowingContextTransform","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionAuthenticator":{"navigatorTitle":[{"kind":"identifier","text":"SessionAuthenticator"}],"kind":"symbol","title":"SessionAuthenticator","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SessionAuthenticator"}],"type":"topic","abstract":[{"type":"text","text":"Session authenticator"}],"url":"\/documentation\/hummingbirdauth\/sessionauthenticator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Output":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Output","role":"symbol","kind":"symbol","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewareprotocol\/output","title":"Output","abstract":[],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"url":"\/documentation\/hummingbird\/logrequestsmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","kind":"symbol","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"type":"topic","role":"symbol","title":"LogRequestsMiddleware","navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouteGroup":{"abstract":[{"type":"text","text":"Router middleware that applies a middleware chain to URIs with a specified prefix"}],"navigatorTitle":[{"kind":"identifier","text":"RouteGroup"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteGroup"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdrouter\/routegroup","title":"RouteGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouteGroup/init(_:context:builder:)":{"role":"symbol","type":"topic","title":"init(_:context:builder:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup\/init(_:context:builder:)","url":"\/documentation\/hummingbirdrouter\/routegroup\/init(_:context:builder:)","kind":"symbol","abstract":[{"text":"Create RouteGroup from RequestContext transform and result builder","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildHandler"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildContext"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier","text":"RouterPath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdRouter10RouteGroupV_7context7builderACyxAA24ThrowingContextTransformVyxqd_0_qd__GG0A00B4PathV_qd_0_mqd__yXEtc06ParentH0AJ012ChildRequestH0PQyd_0_RszAHRs_AJ18MiddlewareProtocolRd__AjNRd_0_AA0bmH0Rd_0_0H0Qyd__Rsd_0_0A4Core0M0V5InputRtd__AU8ResponseV6OutputRtd__r0_lufc0lH0L_qd_0_mfp","kind":"typeIdentifier","text":"ChildContext"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"builder"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter10RouteGroupV_7context7builderACyxAA24ThrowingContextTransformVyxqd_0_qd__GG0A00B4PathV_qd_0_mqd__yXEtc06ParentH0AJ012ChildRequestH0PQyd_0_RszAHRs_AJ18MiddlewareProtocolRd__AjNRd_0_AA0bmH0Rd_0_0H0Qyd__Rsd_0_0A4Core0M0V5InputRtd__AU8ResponseV6OutputRtd__r0_lufc0L7HandlerL_qd__mfp","text":"ChildHandler","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"title":"ResponseCompressionMiddleware","url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","abstract":[{"text":"Middleware for compressing response bodies","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseCompressionMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","url":"\/documentation\/hummingbird\/routermiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Version of ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true,"type":"reference"},{"text":" whose Input is ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference","isActive":true},{"text":" and output is ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference","isActive":true},{"text":".","type":"text"}],"kind":"symbol","title":"RouterMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"url":"\/documentation\/hummingbird\/middlewaregroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","kind":"symbol","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"type":"topic","role":"symbol","title":"MiddlewareGroup","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/ClosureAuthenticator":{"role":"symbol","type":"topic","title":"ClosureAuthenticator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","url":"\/documentation\/hummingbirdauth\/closureauthenticator","kind":"symbol","navigatorTitle":[{"text":"ClosureAuthenticator","kind":"identifier"}],"abstract":[{"text":"Authenticator that uses a closure to return authentication state","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClosureAuthenticator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Input":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Input","kind":"symbol","abstract":[],"title":"Input","type":"topic","required":true,"role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewareprotocol\/input"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","url":"\/documentation\/hummingbird\/corsmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"kind":"symbol","title":"CORSMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware","url":"\/documentation\/hummingbirdauth\/sessionmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionMiddleware","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"SessionMiddleware","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Middleware that extracts session data for a request and stores it in the context","type":"text"}],"kind":"symbol","title":"SessionMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","role":"symbol","kind":"symbol","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewareprotocol\/context","title":"Context","abstract":[],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Middleware stack result builder"}],"kind":"symbol","title":"MiddlewareFixedTypeBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/s16SendableMetatypeP":{"title":"Swift.SendableMetatype","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s16SendableMetatypeP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","title":"IsAuthenticatedMiddleware","abstract":[{"text":"Middleware returning 401 for unauthenticated requests","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"abstract":[{"text":"Middleware for serving static files.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FileMiddleware"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileMiddleware"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/filemiddleware","title":"FileMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"type":"topic","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"url":"\/documentation\/hummingbirdcore\/response","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Response"}],"title":"Response","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"url":"\/documentation\/hummingbird\/requestcontext","kind":"symbol","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"title":"RequestContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware":{"kind":"symbol","role":"symbol","title":"RequestDecompressionMiddleware","navigatorTitle":[{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware for decompressing request bodies"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestDecompressionMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/Route":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","url":"\/documentation\/hummingbirdrouter\/route","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Route","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Route","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Route definition"}],"kind":"symbol","title":"Route"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","url":"\/documentation\/hummingbird\/metricsmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsMiddleware","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"kind":"symbol","title":"MetricsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/tracingmiddleware","title":"TracingMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketUpgradeMiddleware":{"role":"symbol","type":"topic","title":"WebSocketUpgradeMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketUpgradeMiddleware","url":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware","kind":"symbol","navigatorTitle":[{"text":"WebSocketUpgradeMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"An alternative way to add a WebSocket upgrade to a router via Middleware"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketUpgradeMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"title":"AuthenticatorMiddleware","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"role":"symbol","navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Request","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"kind":"symbol","title":"Request"}}}