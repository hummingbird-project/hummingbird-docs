{"relationshipsSections":[{"title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom"},{"title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware"],"type":"inheritedBy","kind":"relationships"},{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketUpgradeMiddleware"],"title":"Conforming Types","type":"conformingTypes"}],"abstract":[{"text":"Version of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"text":" whose Input is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"type":"text","text":" and output is "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference","isActive":true},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa"},{"kind":"text","text":"> : "},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","text":"MiddlewareProtocol","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Input","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP5InputQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Input","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Output","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP6OutputQa","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"All middleware has to conform to the protocol "},{"type":"codeVoice","code":"RouterMiddleware"},{"text":". This requires one function ","type":"text"},{"type":"codeVoice","code":"handle(_:context:next)"},{"type":"text","text":" to be implemented. At some point in this function unless you want to shortcut the router and return your own response you should call "},{"code":"next(request, context)","type":"codeVoice"},{"type":"text","text":" to continue down the middleware stack and return the result, or a result processed by your middleware."}],"type":"paragraph"},{"inlineContent":[{"text":"The following is a simple logging middleware that outputs every URI being sent to the server","type":"text"}],"type":"paragraph"},{"code":["public struct LogRequestsMiddleware<Context: RequestContext>: RouterMiddleware {","    public func handle(_ request: Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response {","        \/\/ log request URI","        context.logger.log(level: .debug, String(describing:request.uri.path))","        \/\/ pass request onto next middleware or the router and return response","        return try await next(request, context)","    }","}"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/routermiddleware"]}],"metadata":{"title":"RouterMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMiddleware"}],"symbolKind":"protocol","modules":[{"name":"Hummingbird"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"externalID":"s:11Hummingbird16RouterMiddlewareP","roleHeading":"Protocol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"seeAlsoSections":[{"generated":true,"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"anchor":"Middleware"}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"kind":"symbol","title":"MiddlewareProtocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","type":"topic","title":"MiddlewareGroup","url":"\/documentation\/hummingbird\/middlewaregroup","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionAuthenticator":{"title":"SessionAuthenticator","kind":"symbol","abstract":[{"text":"Session authenticator","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionAuthenticator","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/sessionauthenticator","role":"symbol","navigatorTitle":[{"text":"SessionAuthenticator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform":{"url":"\/documentation\/hummingbirdrouter\/contexttransform","title":"ContextTransform","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContextTransform"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextTransform"}],"abstract":[{"text":"Router middleware that transforms the ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"reference","isActive":true},{"type":"text","text":" and uses it with the contained"},{"text":" ","type":"text"},{"text":"Middleware chain","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird Documentation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ThrowingContextTransform":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform","role":"symbol","navigatorTitle":[{"text":"ThrowingContextTransform","kind":"identifier"}],"abstract":[{"type":"text","text":"Router middleware that transforms the "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true},{"type":"text","text":" and uses it with the contained"},{"type":"text","text":" "},{"type":"text","text":"Middleware chain. Used by "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup\/init(_:context:builder:)","isActive":true}],"title":"ThrowingContextTransform","url":"\/documentation\/hummingbirdrouter\/throwingcontexttransform","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingContextTransform"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"role":"symbol","abstract":[],"required":true,"url":"\/documentation\/hummingbird\/middlewareprotocol\/context","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"kind":"symbol","title":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","abstract":[{"type":"text","text":"Middleware for decompressing request bodies"}],"kind":"symbol","navigatorTitle":[{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"title":"RequestDecompressionMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestDecompressionMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/Route":{"abstract":[{"type":"text","text":"Route definition"}],"title":"Route","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Route","kind":"identifier"}],"navigatorTitle":[{"text":"Route","kind":"identifier"}],"url":"\/documentation\/hummingbirdrouter\/route"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/ClosureAuthenticator":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","url":"\/documentation\/hummingbirdauth\/closureauthenticator","abstract":[{"text":"Authenticator that uses a closure to return authentication state","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ClosureAuthenticator"}],"title":"ClosureAuthenticator","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClosureAuthenticator"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"title":"CORSMiddleware","type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CORSMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"role":"symbol","title":"AuthenticatorMiddleware","abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"url":"\/documentation\/hummingbirdauth\/authenticatormiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","navigatorTitle":[{"kind":"identifier","text":"AuthenticatorMiddleware"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouteGroup":{"role":"symbol","abstract":[{"text":"Router middleware that applies a middleware chain to URIs with a specified prefix","type":"text"}],"url":"\/documentation\/hummingbirdrouter\/routegroup","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouteGroup"}],"kind":"symbol","title":"RouteGroup","navigatorTitle":[{"text":"RouteGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"role":"symbol","abstract":[{"type":"text","text":"Middleware for compressing response bodies"}],"url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"kind":"symbol","title":"ResponseCompressionMiddleware","navigatorTitle":[{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"title":"IsAuthenticatedMiddleware","abstract":[{"text":"Middleware returning 401 for unauthenticated requests","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"abstract":[{"text":"Version of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},{"text":" whose Input is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and output is "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference","isActive":true},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMiddleware"}],"url":"\/documentation\/hummingbird\/routermiddleware","title":"RouterMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"title":"LogRequestsMiddleware","abstract":[{"text":"Middleware outputting to log for every call to server.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}],"url":"\/documentation\/hummingbird\/logrequestsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketUpgradeMiddleware":{"role":"symbol","abstract":[{"text":"An alternative way to add a WebSocket upgrade to a router via Middleware","type":"text"}],"url":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WebSocketUpgradeMiddleware","kind":"identifier"}],"kind":"symbol","title":"WebSocketUpgradeMiddleware","navigatorTitle":[{"text":"WebSocketUpgradeMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketUpgradeMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Input":{"abstract":[],"title":"Input","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Input","role":"symbol","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}],"required":true,"url":"\/documentation\/hummingbird\/middlewareprotocol\/input"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"title":"MetricsMiddleware","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MetricsMiddleware","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}],"url":"\/documentation\/hummingbird\/metricsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouteGroup/init(_:context:builder:)":{"title":"init(_:context:builder:)","abstract":[{"type":"text","text":"Create RouteGroup from RequestContext transform and result builder"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup\/init(_:context:builder:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ChildHandler","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildContext","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter10RouteGroupV_7context7builderACyxAA24ThrowingContextTransformVyxqd_0_qd__GG0A00B4PathV_qd_0_mqd__yXEtc06ParentH0AJ012ChildRequestH0PQyd_0_RszAHRs_AJ18MiddlewareProtocolRd__AjNRd_0_AA0bmH0Rd_0_0H0Qyd__Rsd_0_0A4Core0M0V5InputRtd__AU8ResponseV6OutputRtd__r0_lufc0lH0L_qd_0_mfp","text":"ChildContext"},{"kind":"text","text":".Type, "},{"text":"builder","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter10RouteGroupV_7context7builderACyxAA24ThrowingContextTransformVyxqd_0_qd__GG0A00B4PathV_qd_0_mqd__yXEtc06ParentH0AJ012ChildRequestH0PQyd_0_RszAHRs_AJ18MiddlewareProtocolRd__AjNRd_0_AA0bmH0Rd_0_0H0Qyd__Rsd_0_0A4Core0M0V5InputRtd__AU8ResponseV6OutputRtd__r0_lufc0L7HandlerL_qd__mfp","text":"ChildHandler","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbirdrouter\/routegroup\/init(_:context:builder:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","type":"topic","title":"TracingMiddleware","url":"\/documentation\/hummingbird\/tracingmiddleware","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TracingMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"abstract":[{"text":"Middleware stack result builder","type":"text"}],"title":"MiddlewareFixedTypeBuilder","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Output":{"role":"symbol","abstract":[],"required":true,"url":"\/documentation\/hummingbird\/middlewareprotocol\/output","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Output"}],"kind":"symbol","title":"Output","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Output"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionMiddleware":{"role":"symbol","title":"SessionMiddleware","abstract":[{"type":"text","text":"Middleware that extracts session data for a request and stores it in the context"}],"url":"\/documentation\/hummingbirdauth\/sessionmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware","navigatorTitle":[{"text":"SessionMiddleware","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SessionMiddleware","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"title":"Response","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"url":"\/documentation\/hummingbirdcore\/response"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/request","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"title":"RequestContext","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdBasicAuth/BasicAuthenticator":{"navigatorTitle":[{"kind":"identifier","text":"BasicAuthenticator"}],"url":"\/documentation\/hummingbirdbasicauth\/basicauthenticator","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicAuthenticator","kind":"identifier"}],"abstract":[{"type":"text","text":"Basic password authenticator"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","title":"BasicAuthenticator","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"title":"FileMiddleware","kind":"symbol","url":"\/documentation\/hummingbird\/filemiddleware","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FileMiddleware"}],"abstract":[{"text":"Middleware for serving static files.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FileMiddleware","kind":"identifier"}]}}}