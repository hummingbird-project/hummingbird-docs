{"metadata":{"title":"ExpressibleByUnicodeScalarLiteral Implementations","modules":[{"name":"Hummingbird"}],"roleHeading":"API Collection","role":"collectionGroup"},"kind":"article","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType\/FileExtension"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType\/FileExtension\/ExpressibleByUnicodeScalarLiteral-Implementations","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"anchor":"Initializers","title":"Initializers","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType\/FileExtension\/init(unicodeScalarLiteral:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType":{"navigatorTitle":[{"kind":"identifier","text":"MediaType"}],"kind":"symbol","url":"\/documentation\/hummingbird\/mediatype","title":"MediaType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MediaType","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","type":"topic","abstract":[{"type":"text","text":"Define media type of file"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","url":"\/documentation\/index","title":"Hummingbird Documentation","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType/FileExtension":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType\/FileExtension","type":"topic","navigatorTitle":[{"text":"FileExtension","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileExtension"}],"title":"MediaType.FileExtension","abstract":[{"type":"text","text":"Type safe wrapper for file extensions. Additionally provides case insensitive comparison."}],"url":"\/documentation\/hummingbird\/mediatype\/fileextension"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType/FileExtension/init(unicodeScalarLiteral:)":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/mediatype\/fileextension\/init(unicodescalarliteral:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType\/FileExtension\/init(unicodeScalarLiteral:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"unicodeScalarLiteral"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"ExtendedGraphemeClusterLiteralType","kind":"typeIdentifier","preciseIdentifier":"s:s43ExpressibleByExtendedGraphemeClusterLiteralP0cdeF4TypeQa"},{"kind":"text","text":")"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ExtendedGraphemeClusterLiteralType","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.UnicodeScalarLiteralType"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[],"title":"init(unicodeScalarLiteral:)"}}}