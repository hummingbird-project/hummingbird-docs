{"abstract":[{"text":"Return a reponse body that will write the file body","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider\/FileIdentifier","text":"FileIdentifier","preciseIdentifier":"s:11Hummingbird12FileProviderP0B10IdentifierQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","text":"ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"inlineContent":[{"type":"text","text":"File identifier"}],"type":"paragraph"}]},{"name":"context","content":[{"type":"paragraph","inlineContent":[{"text":"Request context","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"Response body","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/fileprovider\/loadfile(id:context:)"]}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider\/loadFile(id:context:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","symbolKind":"method","modules":[{"name":"Hummingbird"}],"title":"loadFile(id:context:)","externalID":"s:11Hummingbird12FileProviderP04loadB02id7context0A4Core12ResponseBodyV0B10IdentifierQz_qd__tYaKAA14RequestContextRd__lF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FileIdentifier","preciseIdentifier":"s:11Hummingbird12FileProviderP0B10IdentifierQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","kind":"typeIdentifier"}],"required":true},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"title":"ResponseBody","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"abstract":[{"type":"text","text":"Response body"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","type":"topic","url":"\/documentation\/hummingbirdcore\/responsebody"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileProvider","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","title":"FileProvider","navigatorTitle":[{"text":"FileProvider","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for file provider type used by "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","isActive":true,"type":"reference"}],"url":"\/documentation\/hummingbird\/fileprovider","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","title":"FileMiddleware","navigatorTitle":[{"kind":"identifier","text":"FileMiddleware"}],"kind":"symbol","abstract":[{"type":"text","text":"Middleware for serving static files."}],"type":"topic","url":"\/documentation\/hummingbird\/filemiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider/loadFile(id:context:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider\/loadFile(id:context:)","url":"\/documentation\/hummingbird\/fileprovider\/loadfile(id:context:)","required":true,"type":"topic","abstract":[{"type":"text","text":"Return a reponse body that will write the file body"}],"title":"loadFile(id:context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12FileProviderP0B10IdentifierQa","text":"FileIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","text":"ResponseBody"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider/FileIdentifier":{"url":"\/documentation\/hummingbird\/fileprovider\/fileidentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider\/FileIdentifier","role":"symbol","title":"FileIdentifier","type":"topic","abstract":[{"type":"text","text":"File identifier"}],"required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileIdentifier","kind":"identifier"}],"kind":"symbol"},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"title":"RequestContext","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext","type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":", and is therefore instantiated alongside the request."}]}}}