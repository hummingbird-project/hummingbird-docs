{"seeAlsoSections":[{"title":"Router","anchor":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"generated":true}],"sections":[],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"]}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouteDescription"],"generated":true,"anchor":"Structures","title":"Structures"},{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)"],"anchor":"Initializers","generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/routes"],"generated":true,"anchor":"Instance-Properties"},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/validate()"],"generated":true},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],"anchor":"Default-Implementations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"metadata":{"roleHeading":"Class","title":"Router","externalID":"s:11Hummingbird6RouterC","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Router"}],"navigatorTitle":[{"kind":"identifier","text":"Router"}],"symbolKind":"class","modules":[{"name":"Hummingbird"}]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Context"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Router"},{"text":" requires an implementation of  the ","type":"text"},{"type":"codeVoice","code":"on(path:method:use)"},{"type":"text","text":" functions but because it"},{"type":"text","text":" "},{"type":"text","text":"also conforms to "},{"code":"RouterMethods","type":"codeVoice"},{"type":"text","text":" it is also possible to call the method specific functions "},{"code":"get","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"put"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"head"},{"type":"text","text":", "},{"type":"codeVoice","code":"post"},{"type":"text","text":" and "},{"type":"codeVoice","code":"patch"},{"text":".  The route handler closures all return objects conforming to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ResponseGenerator"},{"type":"text","text":".  This allows us to support routes which return a multitude of types eg"}]},{"code":["router.get(\"string\") { _, _ -> String in","    return \"string\"","}","router.post(\"status\") { _, _ -> HTTPResponse.Status in","    return .ok","}","router.data(\"data\") { request, context -> ByteBuffer in","    return ByteBuffer(string: \"buffer\")","}"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"The default "},{"code":"Router","type":"codeVoice"},{"type":"text","text":" setup in "},{"type":"codeVoice","code":"Application"},{"type":"text","text":" is the "},{"code":"TrieRouter","type":"codeVoice"},{"type":"text","text":" . This uses a"},{"text":" ","type":"text"},{"text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["router.get(\"user\/*\", use: anyUser)","router.get(\"user\/:id\", use: userWithId)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Both of these match routes which start with “\/user” and the next path segment being anything."},{"type":"text","text":" "},{"type":"text","text":"The second version extracts the path segment out and adds it to "},{"code":"Request.parameters","type":"codeVoice"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"key “id”."}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/router"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"url":"\/documentation\/hummingbird\/routeroptions","title":"RouterOptions","role":"symbol","navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"type":"topic","abstract":[{"text":"Router Options","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterOptions","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"type":"topic","kind":"symbol","title":"RequestContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"type":"text","text":" "},{"text":"that is associated with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","url":"\/documentation\/hummingbird\/requestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/middlewares":{"abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"middlewares","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC","text":"MiddlewareGroup","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares","kind":"symbol","url":"\/documentation\/hummingbird\/router\/middlewares","title":"middlewares"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"abstract":[{"text":"Collection of routes","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/routecollection","role":"symbol","title":"RouteCollection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"url":"\/documentation\/hummingbird\/router","kind":"symbol","title":"Router","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Router"}],"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"code":"Responder","type":"codeVoice"},{"type":"text","text":" that will follow these rules."}],"navigatorTitle":[{"kind":"identifier","text":"Router"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouteDescription":{"abstract":[{"type":"text","text":"Route description"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Context"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RequestContext"},{"text":".","type":"text"}]},"title":"Router.RouteDescription","navigatorTitle":[{"text":"RouteDescription","kind":"identifier"}],"url":"\/documentation\/hummingbird\/router\/routedescription","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouteDescription","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouteDescription"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/on(_:method:responder:)":{"abstract":[{"type":"text","text":"Add responder to call when path and method are matched"}],"title":"on(_:method:responder:)","url":"\/documentation\/hummingbird\/router\/on(_:method:responder:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:responder:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Responder","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"responder"},{"text":": ","kind":"text"},{"text":"Responder","preciseIdentifier":"s:11Hummingbird6RouterC2on_6method9responderACyxGXDAA0B4PathV_9HTTPTypes11HTTPRequestV6MethodVqd__t7ContextQyd__RszAA13HTTPResponderRd__lF9ResponderL_qd__mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/buildResponder()":{"url":"\/documentation\/hummingbird\/router\/buildresponder()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","kind":"symbol","title":"buildResponder()","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"RouterResponder","preciseIdentifier":"s:11Hummingbird15RouterResponderV"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"build responder from router"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","title":"RouterPath","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"abstract":[{"type":"text","text":"Split router path into components"}],"navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/routerpath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"abstract":[{"type":"text","text":"Endpoint path storage"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","kind":"symbol","url":"\/documentation\/hummingbird\/endpointpath","title":"EndpointPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"url":"\/documentation\/hummingbird\/routerresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","kind":"symbol","title":"RouterResponder","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterResponder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"title":"Request","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/routes":{"abstract":[{"text":"List of routes added to router","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"routes"},{"kind":"text","text":": ["},{"text":"RouteDescription","preciseIdentifier":"s:11Hummingbird6RouterC16RouteDescriptionV","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/routes","kind":"symbol","url":"\/documentation\/hummingbird\/router\/routes","title":"routes","conformance":{"constraints":[{"type":"codeVoice","code":"Context"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RequestContext"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"title":"HTTPResponder","navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/httpresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HTTPResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird Documentation","kind":"article","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/validate()":{"conformance":{"constraints":[{"code":"Context","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RequestContext"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/hummingbird\/router\/validate()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/validate()","kind":"symbol","title":"validate()","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"validate"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Validate router","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/add(middleware:)":{"abstract":[{"text":"Add middleware to Router","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"add","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"middleware"},{"kind":"text","text":": "},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier","text":"Request"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier","text":"Response"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middleware:)","kind":"symbol","url":"\/documentation\/hummingbird\/router\/add(middleware:)","title":"add(middleware:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"url":"\/documentation\/hummingbird\/callbackresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","kind":"symbol","title":"CallbackResponder","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CallbackResponder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"abstract":[{"type":"text","text":"Responder that calls supplied closure"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"title":"RouterGroup","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/routergroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"text":" ","type":"text"},{"type":"text","text":"suffix to the endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","kind":"symbol","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"abstract":[{"type":"text","text":"A type that has a single method to build a HTTPResponder"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HTTPResponderBuilder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","kind":"symbol","url":"\/documentation\/hummingbird\/httpresponderbuilder","title":"HTTPResponderBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"url":"\/documentation\/hummingbird\/requestid","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","kind":"symbol","title":"RequestID","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestID"}],"navigatorTitle":[{"kind":"identifier","text":"RequestID"}],"abstract":[{"type":"text","text":"Generate Unique ID for each request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RouterMethods","kind":"identifier"}],"navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","kind":"symbol","url":"\/documentation\/hummingbird\/routermethods","title":"RouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/init(context:options:)":{"url":"\/documentation\/hummingbird\/router\/init(context:options:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)","kind":"symbol","title":"init(context:options:)","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"kind":"text","text":".Type, "},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13RouterOptionsV","kind":"typeIdentifier","text":"RouterOptions"},{"kind":"text","text":")"}],"abstract":[]},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouterMethods-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations","url":"\/documentation\/hummingbird\/router\/routermethods-implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"title":"RouterMethods Implementations"}}}