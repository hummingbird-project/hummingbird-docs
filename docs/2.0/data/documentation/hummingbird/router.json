{"kind":"symbol","sections":[],"metadata":{"role":"symbol","modules":[{"name":"Hummingbird"}],"symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"Router"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"}],"roleHeading":"Class","title":"Router","externalID":"s:11Hummingbird6RouterC"},"seeAlsoSections":[{"anchor":"Router","generated":true,"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"code":"Router","type":"codeVoice"},{"text":" requires an implementation of  the ","type":"text"},{"code":"on(path:method:use)","type":"codeVoice"},{"text":" functions but because it","type":"text"},{"text":" ","type":"text"},{"text":"also conforms to ","type":"text"},{"code":"RouterMethods","type":"codeVoice"},{"text":" it is also possible to call the method specific functions ","type":"text"},{"code":"get","type":"codeVoice"},{"text":", ","type":"text"},{"code":"put","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"code":"head","type":"codeVoice"},{"text":", ","type":"text"},{"code":"post","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"patch","type":"codeVoice"},{"text":".  The route handler closures all return objects conforming to","type":"text"},{"text":" ","type":"text"},{"code":"ResponseGenerator","type":"codeVoice"},{"text":".  This allows us to support routes which return a multitude of types eg","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["router.get(\"string\") { _, _ -> String in","    return \"string\"","}","router.post(\"status\") { _, _ -> HTTPResponse.Status in","    return .ok","}","router.data(\"data\") { request, context -> ByteBuffer in","    return ByteBuffer(string: \"buffer\")","}"],"syntax":null},{"inlineContent":[{"type":"text","text":"The default "},{"code":"Router","type":"codeVoice"},{"type":"text","text":" setup in "},{"code":"Application","type":"codeVoice"},{"type":"text","text":" is the "},{"code":"TrieRouter","type":"codeVoice"},{"type":"text","text":" . This uses a"},{"type":"text","text":" "},{"type":"text","text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction"}],"type":"paragraph"},{"type":"codeListing","code":["router.get(\"user\/*\", use: anyUser)","router.get(\"user\/:id\", use: userWithId)"],"syntax":null},{"inlineContent":[{"text":"Both of these match routes which start with “\/user” and the next path segment being anything.","type":"text"},{"text":" ","type":"text"},{"text":"The second version extracts the path segment out and adds it to ","type":"text"},{"code":"Request.parameters","type":"codeVoice"},{"text":" with the","type":"text"},{"text":" ","type":"text"},{"text":"key “id”.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"Responder"},{"type":"text","text":" that will follow these rules."}],"topicSections":[{"anchor":"Structures","generated":true,"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouteDescription"]},{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)"]},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/routes"]},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/validate()"]},{"anchor":"Default-Implementations","generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"]}],"variants":[{"paths":["\/documentation\/hummingbird\/router"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouteDescription":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouteDescription","title":"Router.RouteDescription","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteDescription"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouteDescription"}],"kind":"symbol","type":"topic","abstract":[{"text":"Route description","type":"text"}],"url":"\/documentation\/hummingbird\/router\/routedescription","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Context","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RequestContext","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestID"}],"navigatorTitle":[{"kind":"identifier","text":"RequestID"}],"title":"RequestID","abstract":[{"type":"text","text":"Generate Unique ID for each request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","role":"symbol","url":"\/documentation\/hummingbird\/requestid"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/add(middleware:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middleware:)","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/router\/add(middleware:)","abstract":[{"type":"text","text":"Add middleware to Router"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"middleware"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"add(middleware:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/init(context:options:)":{"url":"\/documentation\/hummingbird\/router\/init(context:options:)","role":"symbol","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RouterOptions","preciseIdentifier":"s:11Hummingbird13RouterOptionsV"},{"kind":"text","text":")"}],"title":"init(context:options:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","url":"\/documentation\/hummingbird\/routermethods","abstract":[{"text":"Conform to ","type":"text"},{"code":"RouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post …) methods","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"}],"title":"RouterMethods","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","type":"topic","abstract":[{"text":"Collection of routes","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteCollection"}],"navigatorTitle":[{"kind":"identifier","text":"RouteCollection"}],"title":"RouteCollection","url":"\/documentation\/hummingbird\/routecollection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","url":"\/documentation\/hummingbird\/httpresponderbuilder","abstract":[{"type":"text","text":"A type that has a single method to build a HTTPResponder"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponderBuilder"}],"title":"HTTPResponderBuilder","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/buildResponder()":{"title":"buildResponder()","url":"\/documentation\/hummingbird\/router\/buildresponder()","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","abstract":[{"type":"text","text":"build responder from router"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildResponder"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15RouterResponderV","text":"RouterResponder"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","title":"Request","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"url":"\/documentation\/hummingbird\/routergroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterGroup"}],"navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","title":"RouterGroup","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"title":"EndpointPath","abstract":[{"type":"text","text":"Endpoint path storage"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","role":"symbol","url":"\/documentation\/hummingbird\/endpointpath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/middlewares":{"abstract":[],"url":"\/documentation\/hummingbird\/router\/middlewares","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares","role":"symbol","title":"middlewares","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"middlewares","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC","text":"MiddlewareGroup","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"kind":"symbol","title":"RouterOptions","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterOptions"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","abstract":[{"type":"text","text":"Router Options"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterOptions"}],"type":"topic","url":"\/documentation\/hummingbird\/routeroptions"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"type":"topic","url":"\/documentation\/hummingbird\/routerresponder","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterResponder"}],"title":"RouterResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CallbackResponder"}],"navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"title":"CallbackResponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","role":"symbol","url":"\/documentation\/hummingbird\/callbackresponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"kind":"symbol","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"title":"HTTPResponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"type":"topic","url":"\/documentation\/hummingbird\/httpresponder"},"logo.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/validate()":{"conformance":{"constraints":[{"type":"codeVoice","code":"Context"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RequestContext"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"validate()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"validate","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","abstract":[{"text":"Validate router","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/validate()","type":"topic","url":"\/documentation\/hummingbird\/router\/validate()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouterMethods-Implementations":{"abstract":[],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations","role":"collectionGroup","url":"\/documentation\/hummingbird\/router\/routermethods-implementations","title":"RouterMethods Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/on(_:method:responder:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:responder:)","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/router\/on(_:method:responder:)","abstract":[{"type":"text","text":"Add responder to call when path and method are matched"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Responder"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method"},{"kind":"text","text":", "},{"kind":"externalParam","text":"responder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC2on_6method9responderACyxGXDAA0B4PathV_9HTTPTypes11HTTPRequestV6MethodVqd__t7ContextQyd__RszAA13HTTPResponderRd__lF9ResponderL_qd__mfp","text":"Responder"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"on(_:method:responder:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","type":"topic","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"}],"navigatorTitle":[{"kind":"identifier","text":"Router"}],"title":"Router","url":"\/documentation\/hummingbird\/router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"url":"\/documentation\/hummingbird\/requestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"symbol","title":"RequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference","isActive":true},{"type":"text","text":", and is therefore instantiated alongside the request."}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/routes":{"abstract":[{"type":"text","text":"List of routes added to router"}],"role":"symbol","url":"\/documentation\/hummingbird\/router\/routes","title":"routes","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Context"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RequestContext"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"routes"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC16RouteDescriptionV","text":"RouteDescription"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/routes"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"url":"\/documentation\/hummingbird\/routerpath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","title":"RouterPath","abstract":[{"type":"text","text":"Split router path into components"}],"kind":"symbol","role":"symbol","type":"topic"}}}