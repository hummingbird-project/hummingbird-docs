{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"],"kind":"relationships"}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Router"},{"text":" requires an implementation of  the ","type":"text"},{"type":"codeVoice","code":"on(path:method:use)"},{"text":" functions but because it","type":"text"},{"text":" ","type":"text"},{"text":"also conforms to ","type":"text"},{"type":"codeVoice","code":"RouterMethods"},{"text":" it is also possible to call the method specific functions ","type":"text"},{"type":"codeVoice","code":"get"},{"text":", ","type":"text"},{"type":"codeVoice","code":"put"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"head"},{"text":", ","type":"text"},{"type":"codeVoice","code":"post"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"patch"},{"text":".  The route handler closures all return objects conforming to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ResponseGenerator"},{"text":".  This allows us to support routes which return a multitude of types eg","type":"text"}]},{"type":"codeListing","syntax":null,"code":["router.get(\"string\") { _, _ -> String in","    return \"string\"","}","router.post(\"status\") { _, _ -> HTTPResponse.Status in","    return .ok","}","router.data(\"data\") { request, context -> ByteBuffer in","    return ByteBuffer(string: \"buffer\")","}"]},{"type":"paragraph","inlineContent":[{"text":"The default ","type":"text"},{"code":"Router","type":"codeVoice"},{"text":" setup in ","type":"text"},{"code":"Application","type":"codeVoice"},{"text":" is the ","type":"text"},{"code":"TrieRouter","type":"codeVoice"},{"text":" . This uses a","type":"text"},{"text":" ","type":"text"},{"text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction","type":"text"}]},{"type":"codeListing","syntax":null,"code":["router.get(\"user\/*\", use: anyUser)","router.get(\"user\/:id\", use: userWithId)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Both of these match routes which start with “\/user” and the next path segment being anything."},{"type":"text","text":" "},{"type":"text","text":"The second version extracts the path segment out and adds it to "},{"type":"codeVoice","code":"Request.parameters"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"key “id”."}]}],"kind":"content"}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouteDescription"],"generated":true},{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)"],"generated":true},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/routes"],"generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/validate()"],"anchor":"Instance-Methods","generated":true},{"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],"anchor":"Default-Implementations","generated":true}],"seeAlsoSections":[{"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"anchor":"Router","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/router"]}],"metadata":{"navigatorTitle":[{"text":"Router","kind":"identifier"}],"role":"symbol","symbolKind":"class","title":"Router","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"externalID":"s:11Hummingbird6RouterC","roleHeading":"Class","modules":[{"name":"Hummingbird"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/add(middleware:)":{"url":"\/documentation\/hummingbird\/router\/add(middleware:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middleware:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Add middleware to Router"}],"title":"add(middleware:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"middleware","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"text":"<","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"title":"RouterResponder","url":"\/documentation\/hummingbird\/routerresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","abstract":[],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterResponder"}],"navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouterMethods-Implementations":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations","url":"\/documentation\/hummingbird\/router\/routermethods-implementations","abstract":[],"title":"RouterMethods Implementations","role":"collectionGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","title":"Request","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"navigatorTitle":[{"text":"Request","kind":"identifier"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/buildResponder()":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/router\/buildresponder()","title":"buildResponder()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"RouterResponder","preciseIdentifier":"s:11Hummingbird15RouterResponderV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","abstract":[{"type":"text","text":"build responder from router"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"url":"\/documentation\/hummingbird\/routerpath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","type":"topic","kind":"symbol","abstract":[{"text":"Split router path into components","type":"text"}],"title":"RouterPath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"url":"\/documentation\/hummingbird\/requestid","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Generate Unique ID for each request"}],"title":"RequestID","navigatorTitle":[{"text":"RequestID","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestID","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}],"kind":"symbol","title":"HTTPResponderBuilder","url":"\/documentation\/hummingbird\/httpresponderbuilder","abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponderBuilder","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/endpointpath","title":"EndpointPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","abstract":[{"text":"Endpoint path storage","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/init(context:options:)":{"url":"\/documentation\/hummingbird\/router\/init(context:options:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)","type":"topic","kind":"symbol","abstract":[],"title":"init(context:options:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RouterOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterOptionsV"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"url":"\/documentation\/hummingbird\/router","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"navigatorTitle":[{"text":"Router","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"Responder"},{"type":"text","text":" that will follow these rules."}],"type":"topic","title":"Router","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"title":"RouterOptions","url":"\/documentation\/hummingbird\/routeroptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","type":"topic","abstract":[{"text":"Router Options","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterOptions","kind":"identifier"}],"navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"url":"\/documentation\/hummingbird\/routecollection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Collection of routes"}],"title":"RouteCollection","navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"kind":"symbol","url":"\/documentation\/hummingbird\/callbackresponder","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","title":"CallbackResponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CallbackResponder"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"url":"\/documentation\/hummingbird\/httpresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","type":"topic","kind":"symbol","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"title":"HTTPResponder","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/validate()":{"conformance":{"constraints":[{"type":"codeVoice","code":"Context"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RequestContext"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","url":"\/documentation\/hummingbird\/router\/validate()","abstract":[{"type":"text","text":"Validate router"}],"title":"validate()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/validate()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"validate","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/routergroup","title":"RouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/routermethods","title":"RouterMethods","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"}],"navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"abstract":[{"type":"text","text":"Conform to "},{"code":"RouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouteDescription":{"url":"\/documentation\/hummingbird\/router\/routedescription","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouteDescription","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Route description"}],"title":"Router.RouteDescription","navigatorTitle":[{"kind":"identifier","text":"RouteDescription"}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Context","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"RequestContext","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteDescription"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/routes":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Context"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RequestContext"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/routes","url":"\/documentation\/hummingbird\/router\/routes","title":"routes","abstract":[{"text":"List of routes added to router","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"routes","kind":"identifier"},{"text":": [","kind":"text"},{"text":"RouteDescription","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC16RouteDescriptionV"},{"text":"]","kind":"text"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/middlewares":{"url":"\/documentation\/hummingbird\/router\/middlewares","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares","type":"topic","kind":"symbol","abstract":[],"title":"middlewares","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"middlewares"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC","text":"MiddlewareGroup"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context"},{"kind":"text","text":">"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/on(_:method:responder:)":{"kind":"symbol","url":"\/documentation\/hummingbird\/router\/on(_:method:responder:)","abstract":[{"type":"text","text":"Add responder to call when path and method are matched"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:responder:)","title":"on(_:method:responder:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Responder"},{"kind":"text","text":">("},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"text":"responder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Responder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC2on_6method9responderACyxGXDAA0B4PathV_9HTTPTypes11HTTPRequestV6MethodVqd__t7ContextQyd__RszAA13HTTPResponderRd__lF9ResponderL_qd__mfp"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}]},"logo.png":{"alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image"}}}