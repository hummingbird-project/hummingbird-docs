{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"metadata":{"modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird6RouterC","navigatorTitle":[{"text":"Router","kind":"identifier"}],"title":"Router","symbolKind":"class","roleHeading":"Class","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"}]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouteDescription"],"generated":true,"anchor":"Structures"},{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)"],"generated":true,"anchor":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/routes"],"generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/validate()"],"generated":true,"anchor":"Instance-Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"typeIdentifier","text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"codeVoice","code":"Router"},{"type":"text","text":" requires an implementation of  the "},{"type":"codeVoice","code":"on(path:method:use)"},{"type":"text","text":" functions but because it"},{"type":"text","text":" "},{"type":"text","text":"also conforms to "},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" it is also possible to call the method specific functions "},{"type":"codeVoice","code":"get"},{"type":"text","text":", "},{"type":"codeVoice","code":"put"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"head"},{"type":"text","text":", "},{"type":"codeVoice","code":"post"},{"type":"text","text":" and "},{"type":"codeVoice","code":"patch"},{"type":"text","text":".  The route handler closures all return objects conforming to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ResponseGenerator"},{"type":"text","text":".  This allows us to support routes which return a multitude of types eg"}],"type":"paragraph"},{"type":"codeListing","code":["router.get(\"string\") { _, _ -> String in","    return \"string\"","}","router.post(\"status\") { _, _ -> HTTPResponse.Status in","    return .ok","}","router.data(\"data\") { request, context -> ByteBuffer in","    return ByteBuffer(string: \"buffer\")","}"],"syntax":null},{"inlineContent":[{"type":"text","text":"The default "},{"type":"codeVoice","code":"Router"},{"type":"text","text":" setup in "},{"type":"codeVoice","code":"Application"},{"type":"text","text":" is the "},{"type":"codeVoice","code":"TrieRouter"},{"type":"text","text":" . This uses a"},{"type":"text","text":" "},{"type":"text","text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction"}],"type":"paragraph"},{"type":"codeListing","code":["router.get(\"user\/*\", use: anyUser)","router.get(\"user\/:id\", use: userWithId)"],"syntax":null},{"inlineContent":[{"text":"Both of these match routes which start with “\/user” and the next path segment being anything.","type":"text"},{"text":" ","type":"text"},{"text":"The second version extracts the path segment out and adds it to ","type":"text"},{"type":"codeVoice","code":"Request.parameters"},{"text":" with the","type":"text"},{"text":" ","type":"text"},{"text":"key “id”.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/hummingbird\/router"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"generated":true,"anchor":"Router"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"abstract":[{"type":"text","text":"Collection of routes"}],"navigatorTitle":[{"kind":"identifier","text":"RouteCollection"}],"type":"topic","title":"RouteCollection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","url":"\/documentation\/hummingbird\/routecollection","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteCollection"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","url":"\/documentation\/hummingbird\/routergroup","role":"symbol","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"title":"RouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/validate()":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/validate()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"validate","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","url":"\/documentation\/hummingbird\/router\/validate()","abstract":[{"type":"text","text":"Validate router"}],"title":"validate()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Context","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RequestContext","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouteDescription":{"abstract":[{"type":"text","text":"Route description"}],"navigatorTitle":[{"text":"RouteDescription","kind":"identifier"}],"type":"topic","title":"Router.RouteDescription","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Context"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RequestContext"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouteDescription","url":"\/documentation\/hummingbird\/router\/routedescription","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteDescription","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterResponder","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","url":"\/documentation\/hummingbird\/routerresponder","role":"symbol","navigatorTitle":[{"text":"RouterResponder","kind":"identifier"}],"title":"RouterResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMethods","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","type":"topic","url":"\/documentation\/hummingbird\/routermethods","role":"symbol","navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"title":"RouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/routes":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Context","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RequestContext","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"List of routes added to router"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"routes","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:11Hummingbird6RouterC16RouteDescriptionV","text":"RouteDescription","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"url":"\/documentation\/hummingbird\/router\/routes","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/routes","title":"routes","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"role":"symbol","abstract":[{"type":"text","text":"Router Options"}],"type":"topic","title":"RouterOptions","navigatorTitle":[{"kind":"identifier","text":"RouterOptions"}],"url":"\/documentation\/hummingbird\/routeroptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterOptions"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/middlewares":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares","type":"topic","title":"middlewares","kind":"symbol","url":"\/documentation\/hummingbird\/router\/middlewares","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"middlewares","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC","text":"MiddlewareGroup","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/add(middleware:)":{"abstract":[{"text":"Add middleware to Router","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"middleware","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"text":"<","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/router\/add(middleware:)","kind":"symbol","title":"add(middleware:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middleware:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/buildResponder()":{"role":"symbol","abstract":[{"text":"build responder from router","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15RouterResponderV","text":"RouterResponder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/hummingbird\/router\/buildresponder()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","type":"topic","title":"buildResponder()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/on(_:method:responder:)":{"title":"on(_:method:responder:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Responder"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"responder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Responder","preciseIdentifier":"s:11Hummingbird6RouterC2on_6method9responderACyxGXDAA0B4PathV_9HTTPTypes11HTTPRequestV6MethodVqd__t7ContextQyd__RszAA13HTTPResponderRd__lF9ResponderL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:responder:)","type":"topic","url":"\/documentation\/hummingbird\/router\/on(_:method:responder:)","role":"symbol","abstract":[{"type":"text","text":"Add responder to call when path and method are matched"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CallbackResponder","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","url":"\/documentation\/hummingbird\/callbackresponder","role":"symbol","navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"title":"CallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"Responder"},{"type":"text","text":" that will follow these rules."}],"navigatorTitle":[{"text":"Router","kind":"identifier"}],"type":"topic","title":"Router","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","url":"\/documentation\/hummingbird\/router","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"topic","url":"\/documentation\/hummingbird\/requestcontext","role":"symbol","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"title":"RequestContext"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"url":"\/documentation\/hummingbird\/routerpath","title":"RouterPath","type":"topic","abstract":[{"text":"Split router path into components","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"abstract":[{"type":"text","text":"Endpoint path storage"}],"navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"type":"topic","title":"EndpointPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","url":"\/documentation\/hummingbird\/endpointpath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouterMethods-Implementations":{"kind":"article","url":"\/documentation\/hummingbird\/router\/routermethods-implementations","abstract":[],"title":"RouterMethods Implementations","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/init(context:options:)":{"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RouterOptions","preciseIdentifier":"s:11Hummingbird13RouterOptionsV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)","title":"init(context:options:)","url":"\/documentation\/hummingbird\/router\/init(context:options:)","kind":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"abstract":[{"type":"text","text":"Generate Unique ID for each request"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestID","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","url":"\/documentation\/hummingbird\/requestid","role":"symbol","navigatorTitle":[{"text":"RequestID","kind":"identifier"}],"title":"RequestID"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"navigatorTitle":[{"text":"Request","kind":"identifier"}],"type":"topic","title":"Request","url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"abstract":[{"type":"text","text":"A type that has a single method to build a HTTPResponder"}],"navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}],"type":"topic","title":"HTTPResponderBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","url":"\/documentation\/hummingbird\/httpresponderbuilder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponderBuilder","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"type":"topic","title":"HTTPResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","url":"\/documentation\/hummingbird\/httpresponder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"kind":"symbol","role":"symbol"}}}