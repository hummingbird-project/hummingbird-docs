{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"role":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Service Lifecycle","roleHeading":"Article"},"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","interfaceLanguage":"swift"},"abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"To provide a mechanism to cleanly start and shutdown a Hummingbird application we have integrated with ","type":"text"},{"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","isActive":true,"type":"reference"},{"text":". This provides lifecycle management for service startup, shutdown and shutdown triggering by signals such as SIGINT and SIGTERM.","type":"text"}]},{"type":"heading","anchor":"Service-Lifecycle","level":2,"text":"Service Lifecycle"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use Swift Service Lifecycle you have to conform the service you want managed to the protocol "},{"isActive":true,"type":"reference","identifier":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle\/service"},{"type":"text","text":". Internally this needs to call "},{"type":"codeVoice","code":"withGracefulShutdownHandler"},{"type":"text","text":" to handle graceful shutdown when we receive a shutdown signal."}]},{"type":"codeListing","code":["struct MyService: Service {","    func run() async throws {","        withGracefulShutdownHandler {","            \/\/ run service","        } onGracefulShutdown {","            \/\/ shutdown service","        }","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once you have this setup you can then include the service in a list of services added to a service group and have its lifecycle managed."}]},{"type":"codeListing","code":["let serviceGroup = ServiceGroup(","    configuration: .init(","        services: [MyService(), MyOtherService()],","        gracefulShutdownSignals: [.sigterm, .sigint]","        logger: logger","    )",")","try await serviceGroup.run()"],"syntax":"swift"},{"type":"heading","anchor":"Hummingbird-Integration","level":2,"text":"Hummingbird Integration"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","isActive":true},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Service"},{"type":"text","text":" and also provides a helper function that constructs the "},{"type":"codeVoice","code":"ServiceGroup"},{"type":"text","text":" including the application and then runs it."}]},{"type":"codeListing","code":["let app = Application(router: router)","try await app.runService()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"All of the types that Hummingbird introduces that require some form of lifecycle management conform to ","type":"text"},{"type":"codeVoice","code":"Service"},{"text":". ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"text":" holds an internal ","type":"text"},{"type":"codeVoice","code":"ServiceGroup"},{"text":" and any service you want managed can be added to the internal group using ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application\/addServices(_:)"},{"text":".","type":"text"}]},{"type":"codeListing","code":["var app = Application(router: router)","app.addServices(postgresClient, sessionStorage)","try await app.runService()"],"syntax":"swift"},{"type":"heading","anchor":"Managing-server-startup","level":2,"text":"Managing server startup"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In some situations you might want some services to start up before you startup your HTTP server, for instance when doing a database migration. With "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"type":"text","text":" you can add processes to run before starting up the server, but while other services are running using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application\/beforeServerStarts(perform:)"},{"type":"text","text":". You can call "},{"code":"beforeServerStarts","type":"codeVoice"},{"type":"text","text":" multiple times to add multiple processes to be run before we startup the server."}]},{"type":"codeListing","code":["var app = Application(router: router)","app.addServices(dbClient)","app.beforeServerStarts {","    try await dbClient.migrate()","}","try await app.runService()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Read the Swift Service Lifecycle "},{"identifier":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle","type":"reference","isActive":true},{"type":"text","text":" to find out more."}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"]},{"generated":true,"anchor":"Hummingbird-Server","title":"Hummingbird Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServerProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterBuilderGuide":{"type":"topic","abstract":[{"text":"Building your router using a result builder.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/routerbuilderguide","kind":"article","title":"Result Builder Router","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"type":"topic","abstract":[{"text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/loggingmetricsandtracing","kind":"article","title":"Logging, Metrics and Tracing","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","url":"\/documentation\/hummingbird\/testing","type":"topic","role":"article","abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"title":"Testing"},"https://github.com/swift-server/swift-service-lifecycle":{"title":"Swift Service Lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"text":"Swift Service Lifecycle","type":"text"}],"type":"link","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"abstract":[{"type":"text","text":"How to build errors for the server to return."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/errorhandling","title":"Error Handling","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","url":"\/documentation\/hummingbird\/migratingtov2","type":"topic","role":"article","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"title":"Migrating to Hummingbird v2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/requestcontexts","kind":"article","title":"Request Contexts","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","url":"\/documentation\/hummingbird\/application","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Application"}],"role":"symbol","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"kind":"symbol","title":"Application"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoding":{"type":"topic","abstract":[{"text":"Decoding of Requests with JSON content and other formats.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/requestdecoding","kind":"article","title":"Request Decoding","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoding"},"https://swiftpackageindex.com/swift-server/swift-service-lifecycle/main/documentation/servicelifecycle":{"titleInlineContent":[{"type":"text","text":"documentation"}],"url":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle","title":"documentation","type":"link","identifier":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoding":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoding","url":"\/documentation\/hummingbird\/responseencoding","type":"topic","role":"article","abstract":[{"text":"Writing Responses using JSON and other formats.","type":"text"}],"kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"title":"Response Encoding"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","kind":"article","title":"Hummingbird Documentation","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"https://swiftpackageindex.com/swift-server/swift-service-lifecycle/main/documentation/servicelifecycle/service":{"identifier":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle\/service","title":"Service","url":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle\/service","type":"link","titleInlineContent":[{"code":"Service","type":"codeVoice"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","role":"article","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/middlewareguide","title":"Middleware","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServerProtocol":{"type":"topic","abstract":[{"text":"Support for TLS and HTTP2 upgrades","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/serverprotocol","kind":"article","title":"Server protocol","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServerProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"type":"topic","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/routerguide","kind":"article","title":"Router","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"type":"topic","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/persistentdata","kind":"article","title":"Persistent data","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application/addServices(_:)":{"abstract":[{"text":"Add service to be managed by application ServiceGroup","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/application\/addservices(_:)","title":"addServices(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application\/addServices(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addServices","kind":"identifier"},{"text":"(","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application/beforeServerStarts(perform:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application\/beforeServerStarts(perform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"beforeServerStarts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Add a process to run before we kick off the server service"}],"kind":"symbol","url":"\/documentation\/hummingbird\/application\/beforeserverstarts(perform:)","title":"beforeServerStarts(perform:)","role":"symbol"},"logo.png":{"alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png"}}}