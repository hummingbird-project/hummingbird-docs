{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"anchor":"Related-Documentation"}],"variants":[{"paths":["\/documentation\/wscompression"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This library provides an implementation of the WebSocket compression extension "},{"code":"permessage-deflate","type":"codeVoice"},{"text":" as detailed in ","type":"text"},{"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","type":"reference","isActive":true},{"text":". You add the extension in the configuration for either your WebSocket upgrade or WebSocket client.","type":"text"}]},{"code":["let app = Application(","    router: Router(),","    server: .http1WebSocketUpgrade(","        configuration: .init(extensions: [.perMessageDeflate(minFrameSizeToCompress: 16)])","    ) { _, _, _ in","        return .upgrade([:]) { inbound, _, _ in","            var iterator = inbound.messages(maxSize: .max).makeAsyncIterator()","            let firstMessage = try await iterator.next()","            XCTAssertEqual(firstMessage, .text(\"Hello, testing compressed data\"))","        }","    }",")"],"type":"codeListing","syntax":"swift"}]}],"topicSections":[{"title":"Compression extension","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)"],"anchor":"Compression-extension"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCompression","interfaceLanguage":"swift"},"metadata":{"externalID":"WSCompression","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","title":"WSCompression","roleHeading":"Framework","symbolKind":"module","modules":[{"name":"WSCompression"}]},"sections":[],"abstract":[{"text":"Compression support for WebSockets","type":"text"}],"hierarchy":{"paths":[[]]},"kind":"symbol","references":{"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/WSCompression":{"abstract":[{"type":"text","text":"Compression support for WebSockets"}],"kind":"symbol","title":"WSCompression","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCompression","url":"\/documentation\/wscompression"},"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketExtensionFactory/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)","role":"symbol","kind":"symbol","title":"perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"perMessageDeflate"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"maxWindow"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?, "},{"text":"noContextTakeover","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxDecompressedFrameSize"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"minFrameSizeToCompress"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:6WSCore25WebSocketExtensionFactoryV","text":"WebSocketExtensionFactory","kind":"typeIdentifier"}],"url":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","abstract":[{"text":"permessage-deflate websocket extension","type":"text"}]},"https://datatracker.ietf.org/doc/html/rfc7692.html":{"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","title":"RFC 7692","url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","type":"link","titleInlineContent":[{"text":"RFC 7692","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"title":"WSClient","url":"\/documentation\/wsclient","role":"collection","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","type":"topic","title":"Hummingbird","role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketExtensionFactory/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"kind":"symbol","title":"perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","url":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"permessage-deflate websocket extension"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"perMessageDeflate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"clientMaxWindow","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?, "},{"text":"clientNoContextTakeover","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"serverMaxWindow"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"text":"serverNoContextTakeover","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"compressionLevel"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":"?, ","kind":"text"},{"text":"memoryLevel","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"maxDecompressedFrameSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"minFrameSizeToCompress","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:6WSCore25WebSocketExtensionFactoryV","text":"WebSocketExtensionFactory","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"kind":"symbol","type":"topic","title":"HummingbirdWebSocket","role":"collection","url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"}}}