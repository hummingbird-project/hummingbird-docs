{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier","text":"RedisKey"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Encodable","preciseIdentifier":"s:SE"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onCondition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RedisSetCommandCondition","preciseIdentifier":"s:9RediStack24RedisSetCommandConditionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expiration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RedisSetCommandExpiration","preciseIdentifier":"s:9RediStack25RedisSetCommandExpirationV"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:9RediStack21RedisSetCommandResultO","text":"RedisSetCommandResult","kind":"typeIdentifier"}],"modules":[{"relatedModules":["RediStack"],"name":"HummingbirdRedis"}],"symbolKind":"method","externalID":"s:9RediStack11RedisClientP011HummingbirdC0E3set_6toJSON11onCondition10expirationAA0C16SetCommandResultOAA0C3KeyV_qd__AA0clmJ0VAA0clM10ExpirationVSgtYaKSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV","title":"set(_:toJSON:onCondition:expiration:)","extendedModule":"RediStack","role":"symbol","roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"RedisKey","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onCondition"},{"kind":"text","text":" "},{"kind":"internalParam","text":"condition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack24RedisSetCommandConditionV","text":"RedisSetCommandCondition"},{"kind":"text","text":" = .none, "},{"kind":"externalParam","text":"expiration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RedisSetCommandExpiration","preciseIdentifier":"s:9RediStack25RedisSetCommandExpirationV"},{"kind":"text","text":"? = nil) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"RedisSetCommandResult","preciseIdentifier":"s:9RediStack21RedisSetCommandResultO"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The key to use to uniquely identify this value."}],"type":"paragraph"}],"name":"key"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The value to set the key to.","type":"text"}]}],"name":"value"},{"content":[{"inlineContent":[{"text":"The condition under which the key should be set.","type":"text"}],"type":"paragraph"}],"name":"condition"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The expiration to use when setting the key. No expiration is set if ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"expiration"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"A ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":" indicating the result of the operation;","type":"text"},{"text":" ","type":"text"},{"code":".ok","type":"codeVoice"},{"text":" if the operation was successful and ","type":"text"},{"code":".conditionNotMet","type":"codeVoice"},{"text":" if the specified ","type":"text"},{"code":"condition","type":"codeVoice"},{"text":" was not met.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the condition "},{"type":"codeVoice","code":".none"},{"type":"text","text":" was used, then the result value will always be "},{"type":"codeVoice","code":".ok"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/redis.io\/commands\/set"}],"type":"paragraph"},{"name":"Important","content":[{"inlineContent":[{"text":"Regardless of the type of data stored at the key, it will be overwritten to a “string” data type.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"ie. If the key is a reference to a Sorted Set, its value will be overwritten to be a “string” data type."}],"type":"paragraph"}],"type":"aside","style":"important"}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"]]},"abstract":[{"text":"Sets the key to the provided value with options to control how it is set.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:onCondition:expiration:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:oncondition:expiration:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"https://redis.io/commands/set":{"titleInlineContent":[{"type":"text","text":"https:\/\/redis.io\/commands\/set"}],"title":"https:\/\/redis.io\/commands\/set","identifier":"https:\/\/redis.io\/commands\/set","url":"https:\/\/redis.io\/commands\/set","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"title":"RedisConnectionPoolService","kind":"symbol","navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/set(_:toJSON:onCondition:expiration:)":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:oncondition:expiration:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:onCondition:expiration:)","abstract":[{"text":"Sets the key to the provided value with options to control how it is set.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"onCondition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RedisSetCommandCondition","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack24RedisSetCommandConditionV"},{"text":", ","kind":"text"},{"text":"expiration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RedisSetCommandExpiration","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack25RedisSetCommandExpirationV"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:9RediStack21RedisSetCommandResultO","text":"RedisSetCommandResult","kind":"typeIdentifier"}],"title":"set(_:toJSON:onCondition:expiration:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","title":"HummingbirdRedis","type":"topic","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdredis"},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null}}}