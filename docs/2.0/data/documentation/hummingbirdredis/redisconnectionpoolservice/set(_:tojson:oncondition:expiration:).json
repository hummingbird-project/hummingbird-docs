{"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:oncondition:expiration:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"]]},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"onCondition","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"condition","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack24RedisSetCommandConditionV","text":"RedisSetCommandCondition","kind":"typeIdentifier"},{"text":" = .none, ","kind":"text"},{"text":"expiration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack25RedisSetCommandExpirationV","text":"RedisSetCommandExpiration","kind":"typeIdentifier"},{"text":"? = nil) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:9RediStack21RedisSetCommandResultO","text":"RedisSetCommandResult","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The key to use to uniquely identify this value.","type":"text"}],"type":"paragraph"}],"name":"key"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to set the key to."}]}],"name":"value"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The condition under which the key should be set.","type":"text"}]}],"name":"condition"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The expiration to use when setting the key. No expiration is set if ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"expiration"}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"text":" indicating the result of the operation;","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":".ok"},{"text":" if the operation was successful and ","type":"text"},{"type":"codeVoice","code":".conditionNotMet"},{"text":" if the specified ","type":"text"},{"type":"codeVoice","code":"condition"},{"text":" was not met.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the condition "},{"type":"codeVoice","code":".none"},{"type":"text","text":" was used, then the result value will always be "},{"type":"codeVoice","code":".ok"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/redis.io\/commands\/set"}],"type":"paragraph"},{"name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"Regardless of the type of data stored at the key, it will be overwritten to a “string” data type.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"ie. If the key is a reference to a Sorted Set, its value will be overwritten to be a “string” data type."}]}],"type":"aside"}]}],"abstract":[{"text":"Sets the key to the provided value with options to control how it is set.","type":"text"}],"metadata":{"symbolKind":"method","extendedModule":"RediStack","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RedisKey","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Encodable","preciseIdentifier":"s:SE"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onCondition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RedisSetCommandCondition","preciseIdentifier":"s:9RediStack24RedisSetCommandConditionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expiration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RedisSetCommandExpiration","preciseIdentifier":"s:9RediStack25RedisSetCommandExpirationV"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"RedisSetCommandResult","preciseIdentifier":"s:9RediStack21RedisSetCommandResultO"}],"roleHeading":"Instance Method","modules":[{"name":"HummingbirdRedis","relatedModules":["RediStack"]}],"externalID":"s:9RediStack11RedisClientP011HummingbirdC0E3set_6toJSON11onCondition10expirationAA0C16SetCommandResultOAA0C3KeyV_qd__AA0clmJ0VAA0clM10ExpirationVSgtYaKSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV","title":"set(_:toJSON:onCondition:expiration:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:onCondition:expiration:)"},"references":{"https://redis.io/commands/set":{"identifier":"https:\/\/redis.io\/commands\/set","title":"https:\/\/redis.io\/commands\/set","url":"https:\/\/redis.io\/commands\/set","titleInlineContent":[{"type":"text","text":"https:\/\/redis.io\/commands\/set"}],"type":"link"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/set(_:toJSON:onCondition:expiration:)":{"abstract":[{"text":"Sets the key to the provided value with options to control how it is set.","type":"text"}],"type":"topic","role":"symbol","title":"set(_:toJSON:onCondition:expiration:)","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:oncondition:expiration:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:onCondition:expiration:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RedisKey","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"},{"text":", ","kind":"text"},{"text":"onCondition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RedisSetCommandCondition","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack24RedisSetCommandConditionV"},{"text":", ","kind":"text"},{"text":"expiration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RedisSetCommandExpiration","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack25RedisSetCommandExpirationV"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"RedisSetCommandResult","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack21RedisSetCommandResultO"}],"kind":"symbol"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","type":"topic","kind":"symbol","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","title":"RedisConnectionPoolService","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","url":"\/documentation\/hummingbirdredis","title":"HummingbirdRedis","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]}}}