{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)"]}],"metadata":{"title":"leaseConnection(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leaseConnection","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"RedisConnection","preciseIdentifier":"s:9RediStack15RedisConnectionC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"kind":"text","text":">"}],"extendedModule":"HummingbirdRedis","roleHeading":"Instance Method","externalID":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF","symbolKind":"method","modules":[{"name":"HummingbirdRedis"}]},"abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"operation","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"text":"RedisConnection","preciseIdentifier":"s:9RediStack15RedisConnectionC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"parameters":[{"name":"operation","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that receives exclusive access to the provided "},{"type":"codeVoice","code":"RedisConnection"},{"type":"text","text":" for the lifetime of the closure for specialized Redis command chains."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"A ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":" that resolves the value of the ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"type":"text","text":" in the provided closure operation."}],"type":"paragraph"}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"name":"Warning","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Attempting to create PubSub subscriptions with connections leased in the closure will result in a failed "},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"warning"},{"inlineContent":[{"type":"codeVoice","code":"RedisConnectionPool"},{"text":" manages PubSub state and requires exclusive control over creating PubSub subscriptions.","type":"text"}],"type":"paragraph"},{"name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"This connection ","type":"text"},{"inlineContent":[{"type":"text","text":"MUST NOT"}],"type":"strong"},{"text":" be stored outside of the closure. It is only available exclusively within the closure.","type":"text"}]}],"type":"aside","style":"important"},{"type":"paragraph","inlineContent":[{"text":"All operations should be done inside the closure as chained ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":" callbacks.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"code":["let countFuture = pool.leaseConnection {","    let client = $0.logging(to: myLogger)","    return client.authorize(with: userPassword)","        .flatMap { connection.select(database: userDatabase) }","        .flatMap { connection.increment(counterKey) }","}"],"type":"codeListing","syntax":"swift"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Some commands change the state of the connection that are not tracked client-side,"},{"type":"text","text":" "},{"type":"text","text":"and will not be automatically reset when the connection is returned to the pool."}]}],"style":"warning","name":"Warning","type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the connection is reused from the pool, it will retain this state and may affect future commands executed with it."}]},{"type":"paragraph","inlineContent":[{"text":"For example, if ","type":"text"},{"code":"select(database:)","type":"codeVoice"},{"text":" is used, all future commands made with this connection will be against the selected database.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"To protect against future issues, make sure the final commands executed are to reset the connection to itâ€™s previous known state.","type":"text"}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"kind":"symbol","url":"\/documentation\/hummingbirdredis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"kind":"symbol","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RedisConnectionPoolService","kind":"identifier"}],"navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","title":"RedisConnectionPoolService","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird Documentation"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"identifier":"logo.png","type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/leaseConnection(_:)":{"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)","abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leaseConnection","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"text":">","kind":"text"}],"title":"leaseConnection(_:)"}}}