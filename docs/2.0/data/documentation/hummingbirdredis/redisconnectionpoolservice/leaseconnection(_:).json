{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leaseConnection"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"HummingbirdRedis","roleHeading":"Instance Method","externalID":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF","title":"leaseConnection(_:)","modules":[{"name":"HummingbirdRedis"}],"role":"symbol","symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"leaseConnection","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"operation","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"text":"RedisConnection","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A closure that receives exclusive access to the provided ","type":"text"},{"type":"codeVoice","code":"RedisConnection"},{"type":"text","text":" for the lifetime of the closure for specialized Redis command chains."}],"type":"paragraph"}],"name":"operation"}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":" that resolves the value of the "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"text":" in the provided closure operation.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Attempting to create PubSub subscriptions with connections leased in the closure will result in a failed "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"text":".","type":"text"}]}],"name":"Warning"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"RedisConnectionPool"},{"type":"text","text":" manages PubSub state and requires exclusive control over creating PubSub subscriptions."}]},{"type":"aside","style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"This connection ","type":"text"},{"type":"strong","inlineContent":[{"text":"MUST NOT","type":"text"}]},{"type":"text","text":" be stored outside of the closure. It is only available exclusively within the closure."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All operations should be done inside the closure as chained "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":" callbacks."}]},{"inlineContent":[{"text":"For example:","type":"text"}],"type":"paragraph"},{"code":["let countFuture = pool.leaseConnection {","    let client = $0.logging(to: myLogger)","    return client.authorize(with: userPassword)","        .flatMap { connection.select(database: userDatabase) }","        .flatMap { connection.increment(counterKey) }","}"],"type":"codeListing","syntax":"swift"},{"name":"Warning","style":"warning","content":[{"inlineContent":[{"type":"text","text":"Some commands change the state of the connection that are not tracked client-side,"},{"text":" ","type":"text"},{"text":"and will not be automatically reset when the connection is returned to the pool.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the connection is reused from the pool, it will retain this state and may affect future commands executed with it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if "},{"type":"codeVoice","code":"select(database:)"},{"text":" is used, all future commands made with this connection will be against the selected database.","type":"text"}]},{"inlineContent":[{"type":"text","text":"To protect against future issues, make sure the final commands executed are to reset the connection to itâ€™s previous known state."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/leaseConnection(_:)":{"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)","type":"topic","abstract":[{"type":"text","text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations."}],"title":"leaseConnection(_:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"leaseConnection","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"text":">","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"title":"Hummingbird Documentation","type":"topic","url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolService"}],"abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"title":"RedisConnectionPoolService","type":"topic","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"kind":"symbol","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"title":"HummingbirdRedis","type":"topic","url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"}}}