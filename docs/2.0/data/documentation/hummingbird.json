{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"symbolKind":"module","roleHeading":"Framework","externalID":"Hummingbird","modules":[{"name":"Hummingbird"}],"role":"collection"},"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"topicSections":[{"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"anchor":"Application"},{"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"anchor":"Router"},{"title":"Request\/Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies"],"anchor":"RequestResponse"},{"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"],"anchor":"Request-context"},{"title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"],"anchor":"EncodingDecoding"},{"title":"Errors","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError"],"anchor":"Errors"},{"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"anchor":"Middleware"},{"title":"File management\/middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem"],"anchor":"File-managementmiddleware"},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError"],"anchor":"Storage"},{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"],"anchor":"Miscellaneous"},{"title":"Structures","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterValidationError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormError"],"anchor":"Structures"}],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Hummingbird is a lightweight, modern, flexible server framework designed to require the minimum number of dependencies.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import Hummingbird","","\/\/ create router and add a single GET \/hello route","let router = Router()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","\/\/ create application using router","let app = Application(","    router: router,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","\/\/ run hummingbird application","try await app.runService()"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"],"anchor":"Related-Documentation"},{"title":"Reference Documentation","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"anchor":"Reference-Documentation"}],"kind":"symbol","hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","title":"HummingbirdAuth","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"url":"\/documentation\/hummingbirdauth","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"Request","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"url":"\/documentation\/hummingbird\/application","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"title":"Application","abstract":[{"text":"Application type bringing together all the components of Hummingbird","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Application"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddlewareFileAttributes":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","url":"\/documentation\/hummingbird\/filemiddlewarefileattributes","abstract":[{"text":"Protocol for all the file attributes required by ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","isActive":true,"type":"reference"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileMiddlewareFileAttributes","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"FileMiddlewareFileAttributes","kind":"identifier"}],"title":"FileMiddlewareFileAttributes"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","title":"InitializableFromSource","kind":"symbol","abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"url":"\/documentation\/hummingbird\/initializablefromsource","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationRequestContextSource":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","url":"\/documentation\/hummingbird\/applicationrequestcontextsource","abstract":[{"type":"text","text":"RequestContext source for contexts created by "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","isActive":true},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationRequestContextSource"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ApplicationRequestContextSource"}],"title":"ApplicationRequestContextSource"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","title":"Hummingbird","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"title":"FileMiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","kind":"symbol","abstract":[{"text":"Middleware for serving static files.","type":"text"}],"url":"\/documentation\/hummingbird\/filemiddleware","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"FileMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"url":"\/documentation\/hummingbirdcore\/response","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"title":"Response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Response"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"type":"topic","url":"\/documentation\/hummingbird\/middlewaregroup","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareGroup"}],"abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"title":"MiddlewareGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"HTTP Response Body part writer"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}],"navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/responsebodywriter","type":"topic","title":"ResponseBodyWriter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileProvider"}],"navigatorTitle":[{"kind":"identifier","text":"FileProvider"}],"title":"FileProvider","kind":"symbol","abstract":[{"text":"Protocol for file provider type used by ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","isActive":true,"type":"reference"}],"url":"\/documentation\/hummingbird\/fileprovider","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"url":"\/documentation\/hummingbirdwebsocket","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"title":"HummingbirdWebSocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","type":"topic","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","title":"ApplicationConfiguration","kind":"symbol","abstract":[{"text":"Application configuration","type":"text"}],"url":"\/documentation\/hummingbird\/applicationconfiguration","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationConfiguration","kind":"identifier"}],"navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormError":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormError","title":"URLEncodedFormError","kind":"symbol","abstract":[{"text":"Error thrown from parsing URLEncoded forms","type":"text"}],"url":"\/documentation\/hummingbird\/urlencodedformerror","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormError","kind":"identifier"}],"navigatorTitle":[{"text":"URLEncodedFormError","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol","role":"symbol","abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","title":"ApplicationProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/urlencodedformdecoder","role":"symbol","abstract":[{"type":"text","text":"The wrapper struct for decoding URL encoded form data to Codable classes"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"URLEncodedFormDecoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","title":"URLEncodedFormDecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Parameters":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Parameters is a special case of FlatDictionary where both the key"},{"type":"text","text":" "},{"type":"text","text":"and value types are Substrings. It is used for parameters extracted"},{"type":"text","text":" "},{"type":"text","text":"from URIs"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parameters","kind":"identifier"}],"navigatorTitle":[{"text":"Parameters","kind":"identifier"}],"url":"\/documentation\/hummingbird\/parameters","type":"topic","title":"Parameters"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Protocol for source of request contexts"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContextSource"}],"navigatorTitle":[{"kind":"identifier","text":"RequestContextSource"}],"url":"\/documentation\/hummingbird\/requestcontextsource","type":"topic","title":"RequestContextSource"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/corerequestcontextstorage","role":"symbol","abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CoreRequestContextStorage","kind":"identifier"}],"navigatorTitle":[{"text":"CoreRequestContextStorage","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","title":"CoreRequestContextStorage"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdValkey":{"title":"HummingbirdValkey","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdValkey","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","abstract":[{"type":"text","text":"Add Valkey\/Redis support to Hummingbird server with valkey-swift."}],"url":"\/documentation\/hummingbirdvalkey","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/requestid","role":"symbol","abstract":[{"type":"text","text":"Generate Unique ID for each request"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestID"}],"navigatorTitle":[{"kind":"identifier","text":"RequestID"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","title":"RequestID"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError":{"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Errors return by persist framework"}],"navigatorTitle":[{"text":"PersistError","kind":"identifier"}],"title":"PersistError","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError","url":"\/documentation\/hummingbird\/persisterror"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"title":"WSClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","url":"\/documentation\/wsclient"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"role":"collection","url":"\/documentation\/mustache","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Mustache template engine.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","kind":"symbol","title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"url":"\/documentation\/hummingbirdcore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Version of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"reference"},{"text":" whose Input is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"text":" and output is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"title":"RouterMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","url":"\/documentation\/hummingbird\/routermiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"url":"\/documentation\/hummingbird\/memorypersistdriver","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemoryPersistDriver","kind":"identifier"}],"title":"MemoryPersistDriver","abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","role":"symbol","navigatorTitle":[{"text":"MemoryPersistDriver","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/routermethods","role":"symbol","abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMethods","kind":"identifier"}],"navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","title":"RouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"url":"\/documentation\/hummingbird\/tracingmiddleware","type":"topic","title":"TracingMiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"url":"\/documentation\/hummingbird\/basicrequestcontext","title":"BasicRequestContext","type":"topic","role":"symbol","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/responseencoder","role":"symbol","abstract":[{"type":"text","text":"protocol for encoders generating a Response"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"ResponseEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","title":"ResponseEncoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","title":"MiddlewareProtocol","kind":"symbol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LocalFileSystem":{"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Local file system file provider used by FileMiddleware. All file accesses are relative to a root folder"}],"navigatorTitle":[{"text":"LocalFileSystem","kind":"identifier"}],"title":"LocalFileSystem","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LocalFileSystem","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem","url":"\/documentation\/hummingbird\/localfilesystem"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"type":"topic","title":"MetricsMiddleware","url":"\/documentation\/hummingbird\/metricsmiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponderBuilder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/httpresponderbuilder","navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that has a single method to build a HTTPResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","type":"topic","title":"HTTPResponderBuilder","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"url":"\/documentation\/hummingbird\/childrequestcontext","title":"ChildRequestContext","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChildRequestContext"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChildRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","abstract":[{"type":"text","text":"A RequestContext that can be initialized from another RequestContext."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","title":"FileIO","kind":"symbol","abstract":[{"type":"text","text":"Manages File reading and writing."}],"url":"\/documentation\/hummingbird\/fileio","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileIO"}],"navigatorTitle":[{"kind":"identifier","text":"FileIO"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterResponder"}],"url":"\/documentation\/hummingbird\/routerresponder","navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","type":"topic","title":"RouterResponder","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/responsecodable","role":"symbol","abstract":[{"type":"text","text":"Protocol for codable object that can generate a response"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCodable"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseCodable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","title":"ResponseCodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPError":{"url":"\/documentation\/hummingbird\/httperror","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPError","kind":"identifier"}],"title":"HTTPError","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","type":"topic","role":"symbol","navigatorTitle":[{"text":"HTTPError","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookies":{"url":"\/documentation\/hummingbird\/cookies","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cookies","kind":"identifier"}],"title":"Cookies","abstract":[{"type":"text","text":"Structure holding an array of cookies"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies","role":"symbol","navigatorTitle":[{"text":"Cookies","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdrouter","role":"collection","abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","title":"HummingbirdRouter","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"title":"CORSMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"url":"\/documentation\/hummingbird\/persistdriver","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistDriver","kind":"identifier"}],"abstract":[{"text":"Protocol for driver supporting persistent Key\/Value pairs across requests","type":"text"}],"title":"PersistDriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","type":"topic","role":"symbol","navigatorTitle":[{"text":"PersistDriver","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdtesting","title":"HummingbirdTesting","type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routerpath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"abstract":[{"type":"text","text":"Split router path into components"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","type":"topic","title":"RouterPath","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/endpointpath","role":"symbol","abstract":[{"type":"text","text":"Endpoint path storage"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EndpointPath"}],"navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","title":"EndpointPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EditedResponse":{"url":"\/documentation\/hummingbird\/editedresponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EditedResponse","kind":"identifier"}],"abstract":[],"title":"EditedResponse","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","role":"symbol","navigatorTitle":[{"text":"EditedResponse","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/routecollection","role":"symbol","abstract":[{"text":"Collection of routes","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","title":"RouteCollection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/callbackresponder","role":"symbol","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CallbackResponder","kind":"identifier"}],"navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","title":"CallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemoteAddressRequestContext"}],"title":"RemoteAddressRequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","navigatorTitle":[{"kind":"identifier","text":"RemoteAddressRequestContext"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdlambda","type":"topic","title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routergroup","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","type":"topic","title":"RouterGroup","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol","role":"collection","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"title":"HummingbirdCompression","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","url":"\/documentation\/hummingbirdcompression"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/requestdecoder","role":"symbol","abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"RequestDecoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","title":"RequestDecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"type":"topic","url":"\/documentation\/hummingbird\/eventloopgroupprovider","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroupProvider"}],"abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopGroupProvider"}],"title":"EventLoopGroupProvider","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"type":"topic","title":"MiddlewareFixedTypeBuilder","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","abstract":[{"text":"Middleware stack result builder","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterValidationError":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterValidationError","url":"\/documentation\/hummingbird\/routervalidationerror","abstract":[{"type":"text","text":"Router validation error"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterValidationError"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterValidationError"}],"title":"RouterValidationError"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/httpresponder","role":"symbol","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","title":"HTTPResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/responseencodable","role":"symbol","abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"text":" ","type":"text"},{"text":"the response using the encoder stored in ","type":"text"},{"code":"Application.encoder","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseEncodable","kind":"identifier"}],"navigatorTitle":[{"text":"ResponseEncodable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","title":"ResponseEncodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol","role":"collection","abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"title":"HummingbirdFluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","url":"\/documentation\/hummingbirdfluent"},"logo.png":{"alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}],"url":"\/documentation\/hummingbird\/responsegenerator","navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"abstract":[{"type":"text","text":"Object that can generate a "},{"code":"Response","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","type":"topic","title":"ResponseGenerator","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"kind":"symbol","type":"topic","url":"\/documentation\/jobs","role":"collection","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","title":"Jobs","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CacheControl":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Associates cache control values with filename"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CacheControl"}],"navigatorTitle":[{"kind":"identifier","text":"CacheControl"}],"url":"\/documentation\/hummingbird\/cachecontrol","type":"topic","title":"CacheControl"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/environment","role":"symbol","abstract":[{"type":"text","text":"Access environment variables"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"navigatorTitle":[{"kind":"identifier","text":"Environment"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","title":"Environment"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponseError":{"url":"\/documentation\/hummingbird\/httpresponseerror","title":"HTTPResponseError","type":"topic","role":"symbol","navigatorTitle":[{"text":"HTTPResponseError","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponseError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError","abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookie":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","title":"Cookie","kind":"symbol","abstract":[{"type":"text","text":"Structure holding a single cookie"}],"url":"\/documentation\/hummingbird\/cookie","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cookie"}],"navigatorTitle":[{"kind":"identifier","text":"Cookie"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/urlencodedformencoder","navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}],"abstract":[{"text":"The wrapper struct for encoding Codable classes to URL encoded form data","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","type":"topic","title":"URLEncodedFormEncoder","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"url":"\/documentation\/hummingbird\/router","navigatorTitle":[{"text":"Router","kind":"identifier"}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"Responder"},{"text":" that will follow these rules.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","type":"topic","title":"Router","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterOptions","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routeroptions","navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"abstract":[{"type":"text","text":"Router Options"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","type":"topic","title":"RouterOptions","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","title":"HummingbirdPostgres","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"type":"text","text":"Working with Postgres databases."}],"url":"\/documentation\/hummingbirdpostgres","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"type":"topic","title":"LogRequestsMiddleware","url":"\/documentation\/hummingbird\/logrequestsmiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogRequestsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","title":"MediaType","kind":"symbol","abstract":[{"text":"Define media type of file","type":"text"}],"url":"\/documentation\/hummingbird\/mediatype","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MediaType","kind":"identifier"}],"navigatorTitle":[{"text":"MediaType","kind":"identifier"}]}}}