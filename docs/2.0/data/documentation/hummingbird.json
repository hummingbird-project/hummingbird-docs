{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"anchor":"Application","title":"Application"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"title":"Router","anchor":"Router"},{"title":"Request\/Response","anchor":"RequestResponse","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"],"title":"Request context","anchor":"Request-context"},{"anchor":"EncodingDecoding","title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"]},{"anchor":"Errors","title":"Errors","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError"]},{"title":"Middleware","anchor":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"]},{"anchor":"File-managementmiddleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem"],"title":"File management\/middleware"},{"anchor":"Storage","title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError"]},{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"],"anchor":"Miscellaneous"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterValidationError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormError"],"anchor":"Structures","generated":true,"title":"Structures"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"generated":true,"anchor":"Reference-Documentation","title":"Reference Documentation"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"metadata":{"title":"Hummingbird","roleHeading":"Framework","images":[{"identifier":"logo.png","type":"icon"}],"externalID":"Hummingbird","modules":[{"name":"Hummingbird"}],"role":"collection","symbolKind":"module"},"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Hummingbird is a lightweight, modern, flexible server framework designed to require the minimum number of dependencies."}]},{"inlineContent":[{"type":"text","text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2."}],"type":"paragraph"},{"syntax":"swift","code":["import Hummingbird","","\/\/ create router and add a single GET \/hello route","let router = Router()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","\/\/ create application using router","let app = Application(","    router: router,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","\/\/ run hummingbird application","try await app.runService()"],"type":"codeListing"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormError":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormError","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"URLEncodedFormError","kind":"identifier"}],"navigatorTitle":[{"text":"URLEncodedFormError","kind":"identifier"}],"title":"URLEncodedFormError","url":"\/documentation\/hummingbird\/urlencodedformerror","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Error thrown from parsing URLEncoded forms"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError":{"kind":"symbol","type":"topic","title":"PersistError","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError","url":"\/documentation\/hummingbird\/persisterror","navigatorTitle":[{"kind":"identifier","text":"PersistError"}],"abstract":[{"type":"text","text":"Errors return by persist framework"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistError"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","kind":"symbol","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"Responder"},{"type":"text","text":" that will follow these rules."}],"navigatorTitle":[{"text":"Router","kind":"identifier"}],"title":"Router","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Router","kind":"identifier"}],"url":"\/documentation\/hummingbird\/router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"url":"\/documentation\/hummingbird\/environment","type":"topic","abstract":[{"type":"text","text":"Access environment variables"}],"title":"Environment","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","navigatorTitle":[{"text":"Environment","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","kind":"symbol","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LogRequestsMiddleware"}],"role":"symbol","navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/logrequestsmiddleware","title":"LogRequestsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileProvider"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"FileProvider"}],"url":"\/documentation\/hummingbird\/fileprovider","abstract":[{"type":"text","text":"Protocol for file provider type used by "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","type":"reference","isActive":true}],"title":"FileProvider","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Collection of routes"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RouteCollection","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"title":"RouteCollection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","url":"\/documentation\/hummingbird\/routecollection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LocalFileSystem":{"title":"LocalFileSystem","abstract":[{"text":"Local file system file provider used by FileMiddleware. All file accesses are relative to a root folder","type":"text"}],"url":"\/documentation\/hummingbird\/localfilesystem","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocalFileSystem"}],"navigatorTitle":[{"kind":"identifier","text":"LocalFileSystem"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EditedResponse":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"EditedResponse","kind":"identifier"}],"title":"EditedResponse","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EditedResponse"}],"url":"\/documentation\/hummingbird\/editedresponse"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","kind":"symbol","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}],"title":"MetricsMiddleware","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MetricsMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/metricsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","kind":"symbol","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"title":"BasicRequestContext","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/basicrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","kind":"symbol","url":"\/documentation\/hummingbirdcore","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"kind":"symbol","url":"\/documentation\/hummingbirdrouter","title":"HummingbirdRouter","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","type":"topic","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationRequestContextSource":{"role":"symbol","abstract":[{"type":"text","text":"RequestContext source for contexts created by "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","type":"reference","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/hummingbird\/applicationrequestcontextsource","navigatorTitle":[{"text":"ApplicationRequestContextSource","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationRequestContextSource","kind":"identifier"}],"title":"ApplicationRequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","title":"HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","abstract":[{"type":"text","text":"Test framework for Hummingbird."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","kind":"symbol","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"navigatorTitle":[{"text":"CoreRequestContextStorage","kind":"identifier"}],"title":"CoreRequestContextStorage","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CoreRequestContextStorage","kind":"identifier"}],"url":"\/documentation\/hummingbird\/corerequestcontextstorage"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroupProvider"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","url":"\/documentation\/hummingbird\/eventloopgroupprovider","title":"EventLoopGroupProvider","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroupProvider"}],"abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"title":"CallbackResponder","kind":"symbol","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CallbackResponder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","type":"topic","url":"\/documentation\/hummingbird\/callbackresponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookie":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cookie","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cookie"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","title":"Cookie","url":"\/documentation\/hummingbird\/cookie","abstract":[{"text":"Structure holding a single cookie","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"navigatorTitle":[{"text":"ResponseEncodable","kind":"identifier"}],"abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"text":" ","type":"text"},{"text":"the response using the encoder stored in ","type":"text"},{"type":"codeVoice","code":"Application.encoder"},{"type":"text","text":"."}],"title":"ResponseEncodable","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseEncodable"}],"url":"\/documentation\/hummingbird\/responseencodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","url":"\/documentation\/index","title":"Hummingbird Documentation","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookies":{"url":"\/documentation\/hummingbird\/cookies","abstract":[{"type":"text","text":"Structure holding an array of cookies"}],"title":"Cookies","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Cookies","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Cookies","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","kind":"symbol","url":"\/documentation\/hummingbirdauth","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"url":"\/documentation\/hummingbird\/routergroup","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"suffix to the endpoint path"}],"title":"RouterGroup","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponseError":{"url":"\/documentation\/hummingbird\/httpresponseerror","abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}],"title":"HTTPResponseError","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPResponseError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponseError"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"title":"FileIO","abstract":[{"type":"text","text":"Manages File reading and writing."}],"url":"\/documentation\/hummingbird\/fileio","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileIO","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"FileIO"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RequestID"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestID"}],"title":"RequestID","abstract":[{"text":"Generate Unique ID for each request","type":"text"}],"url":"\/documentation\/hummingbird\/requestid"},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","abstract":[{"text":"Router Options","type":"text"}],"type":"topic","role":"symbol","title":"RouterOptions","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterOptions"}],"url":"\/documentation\/hummingbird\/routeroptions","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","title":"WSClient","kind":"symbol","url":"\/documentation\/wsclient","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"kind":"symbol","role":"symbol","abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"}],"type":"topic","navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"title":"ApplicationProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","url":"\/documentation\/hummingbird\/applicationprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseCodable","kind":"identifier"}],"kind":"symbol","title":"ResponseCodable","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","url":"\/documentation\/hummingbird\/responsecodable","navigatorTitle":[{"text":"ResponseCodable","kind":"identifier"}],"abstract":[{"text":"Protocol for codable object that can generate a response","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"title":"HTTPResponder","url":"\/documentation\/hummingbird\/httpresponder","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","title":"RequestContextSource","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RequestContextSource","kind":"identifier"}],"url":"\/documentation\/hummingbird\/requestcontextsource","type":"topic","role":"symbol","navigatorTitle":[{"text":"RequestContextSource","kind":"identifier"}],"abstract":[{"text":"Protocol for source of request contexts","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","kind":"symbol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"title":"MiddlewareProtocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","type":"topic","role":"collection","title":"Mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"url":"\/documentation\/mustache","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddlewareFileAttributes":{"title":"FileMiddlewareFileAttributes","kind":"symbol","abstract":[{"text":"Protocol for all the file attributes required by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","type":"reference"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"FileMiddlewareFileAttributes","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FileMiddlewareFileAttributes"}],"type":"topic","url":"\/documentation\/hummingbird\/filemiddlewarefileattributes","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPError":{"url":"\/documentation\/hummingbird\/httperror","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message"}],"title":"HTTPError","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HTTPError","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"title":"EndpointPath","url":"\/documentation\/hummingbird\/endpointpath","abstract":[{"text":"Endpoint path storage","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EndpointPath"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"role":"symbol","navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"kind":"symbol","title":"RouterMethods","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RouterMethods","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routermethods","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","abstract":[{"text":"Conform to ","type":"text"},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CacheControl":{"url":"\/documentation\/hummingbird\/cachecontrol","abstract":[{"type":"text","text":"Associates cache control values with filename"}],"title":"CacheControl","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CacheControl"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"CacheControl","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","title":"RequestContext","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"url":"\/documentation\/hummingbird\/requestcontext","type":"topic","role":"symbol","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":", and is therefore instantiated alongside the request."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MemoryPersistDriver","kind":"identifier"}],"type":"topic","title":"MemoryPersistDriver","abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MemoryPersistDriver"}],"url":"\/documentation\/hummingbird\/memorypersistdriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FileMiddleware"}],"kind":"symbol","navigatorTitle":[{"text":"FileMiddleware","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","title":"FileMiddleware","url":"\/documentation\/hummingbird\/filemiddleware","abstract":[{"type":"text","text":"Middleware for serving static files."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TracingMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/tracingmiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"title":"TracingMiddleware","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","title":"Request","url":"\/documentation\/hummingbirdcore\/request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"kind":"symbol","role":"symbol","abstract":[{"text":"A RequestContext that can be initialized from another RequestContext.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChildRequestContext","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChildRequestContext"}],"title":"ChildRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","url":"\/documentation\/hummingbird\/childrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","type":"topic","abstract":[{"type":"text","text":"Middleware stack result builder"}],"title":"MiddlewareFixedTypeBuilder","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","navigatorTitle":[{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"url":"\/documentation\/hummingbird\/urlencodedformdecoder","abstract":[{"text":"The wrapper struct for decoding URL encoded form data to Codable classes","type":"text"}],"title":"URLEncodedFormDecoder","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"URLEncodedFormDecoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"URLEncodedFormDecoder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType":{"navigatorTitle":[{"kind":"identifier","text":"MediaType"}],"kind":"symbol","url":"\/documentation\/hummingbird\/mediatype","title":"MediaType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MediaType","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","type":"topic","abstract":[{"type":"text","text":"Define media type of file"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","type":"topic","role":"collection","title":"HummingbirdCompression","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"url":"\/documentation\/hummingbirdcompression","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"type":"topic","url":"\/documentation\/hummingbird\/routerresponder","abstract":[],"title":"RouterResponder","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Parameters":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","kind":"symbol","abstract":[{"text":"Parameters is a special case of FlatDictionary where both the key","type":"text"},{"type":"text","text":" "},{"text":"and value types are Substrings. It is used for parameters extracted","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from URIs"}],"navigatorTitle":[{"text":"Parameters","kind":"identifier"}],"title":"Parameters","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parameters","kind":"identifier"}],"url":"\/documentation\/hummingbird\/parameters"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMiddleware"}],"url":"\/documentation\/hummingbird\/routermiddleware","type":"topic","abstract":[{"type":"text","text":"Version of "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true,"type":"reference"},{"text":" whose Input is ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":" and output is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"type":"text","text":"."}],"title":"RouterMiddleware","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InitializableFromSource","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","title":"InitializableFromSource","url":"\/documentation\/hummingbird\/initializablefromsource","abstract":[{"type":"text","text":"A type that can be initialized from another type"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","kind":"symbol","abstract":[{"type":"text","text":"HTTP Response Body part writer"}],"navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"title":"ResponseBodyWriter","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/responsebodywriter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"title":"PersistDriver","role":"symbol","navigatorTitle":[{"text":"PersistDriver","kind":"identifier"}],"url":"\/documentation\/hummingbird\/persistdriver","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","kind":"symbol","abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"title":"HummingbirdFluent","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdfluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","type":"topic","navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"title":"URLEncodedFormEncoder","abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}],"url":"\/documentation\/hummingbird\/urlencodedformencoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","kind":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Response"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/response","title":"Response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HTTPResponderBuilder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"title":"HTTPResponderBuilder","url":"\/documentation\/hummingbird\/httpresponderbuilder","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A type that has a single method to build a HTTPResponder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","kind":"symbol","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}],"title":"CORSMiddleware","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CORSMiddleware"}],"url":"\/documentation\/hummingbird\/corsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","kind":"symbol","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"title":"MiddlewareGroup","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareGroup"}],"url":"\/documentation\/hummingbird\/middlewaregroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/responsegenerator","title":"ResponseGenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","type":"topic","abstract":[{"text":"Object that can generate a ","type":"text"},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/routerpath","title":"RouterPath","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","type":"topic","abstract":[{"text":"Split router path into components","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","title":"Jobs","kind":"symbol","url":"\/documentation\/jobs","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"kind":"symbol","url":"\/documentation\/hummingbirdredis","title":"HummingbirdRedis","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","type":"topic","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RemoteAddressRequestContext"}],"type":"topic","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"title":"RemoteAddressRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterValidationError":{"type":"topic","kind":"symbol","abstract":[{"text":"Router validation error","type":"text"}],"role":"symbol","title":"RouterValidationError","url":"\/documentation\/hummingbird\/routervalidationerror","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterValidationError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterValidationError","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RouterValidationError"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"navigatorTitle":[{"text":"ResponseEncoder","kind":"identifier"}],"abstract":[{"text":"protocol for encoders generating a Response","type":"text"}],"title":"ResponseEncoder","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseEncoder"}],"url":"\/documentation\/hummingbird\/responseencoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RequestDecoder","kind":"identifier"}],"kind":"symbol","title":"RequestDecoder","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","url":"\/documentation\/hummingbird\/requestdecoder","navigatorTitle":[{"text":"RequestDecoder","kind":"identifier"}],"abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","type":"topic","kind":"symbol","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Application"}],"navigatorTitle":[{"kind":"identifier","text":"Application"}],"title":"Application","url":"\/documentation\/hummingbird\/application","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdlambda","kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","role":"collection","title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"kind":"symbol","url":"\/documentation\/hummingbirdwebsocket","title":"HummingbirdWebSocket","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","type":"topic","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationConfiguration"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","url":"\/documentation\/hummingbird\/applicationconfiguration","title":"ApplicationConfiguration","navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}],"abstract":[{"type":"text","text":"Application configuration"}],"role":"symbol"}}}